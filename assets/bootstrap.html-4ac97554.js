import{_ as e,V as o,W as c,X as n,a0 as a,Y as t,$ as p,F as l}from"./framework-5793c714.js";const i={},u=p(`<h1 id="bootstrap" tabindex="-1"><a class="header-anchor" href="#bootstrap" aria-hidden="true">#</a> Bootstrap</h1><h3 id="这个类要解决什么问题" tabindex="-1"><a class="header-anchor" href="#这个类要解决什么问题" aria-hidden="true">#</a> 这个类要解决什么问题？</h3><p><code>Bootstrap</code> 主要解决的是使用和组合问题。</p><ul><li>使用要简单高效</li><li>组合支持正交性</li></ul><h3 id="方便使用详解" tabindex="-1"><a class="header-anchor" href="#方便使用详解" aria-hidden="true">#</a> 方便使用详解</h3><ol><li>在 58 做服务号时候，为公司内部做了一个类似微信模板消息功能，需要提供合适的 Api。</li><li>使用领域拆解，将模版消息拆解成头信息，Body，跳转，通用信息。</li><li>模拟代码如下：</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 模版消息整体
 */</span>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TemplateMessage</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Header</span> header<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">Body</span> body<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">Action</span> action<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">Common</span> common<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/**
 * 通用比如模版ID和安全码
 */</span>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Common</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> templateId<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> authCode<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/**
 * 头部信息
 */</span>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Header</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> headName<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> headBody<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/**
 * body部分，使用bodyName匹配位置，保证数据结合
 */</span>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Body</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Item</span><span class="token punctuation">&gt;</span></span> allItem<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Data</span>
    <span class="token annotation punctuation">@AllArgsConstructor</span>
    <span class="token annotation punctuation">@NoArgsConstructor</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Item</span> <span class="token punctuation">{</span>

        <span class="token keyword">private</span> <span class="token class-name">String</span> bodyName<span class="token punctuation">;</span>

        <span class="token keyword">private</span> <span class="token class-name">String</span> bodyValue<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/**
 * 跳转的url和位置
 */</span>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Action</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> actionUrl<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> actionLocation<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>各个业务线要怎么用呢？使用案例可以参考下面代码：</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>  <span class="token class-name">TemplateMessage</span> templateMessage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TemplateMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Header</span> header <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Header</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        header<span class="token punctuation">.</span><span class="token function">setHeadName</span><span class="token punctuation">(</span><span class="token string">&quot;renfakai&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        header<span class="token punctuation">.</span><span class="token function">setHeadBody</span><span class="token punctuation">(</span><span class="token string">&quot;renfakai&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        templateMessage<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span>header<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Body</span> body <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Body<span class="token punctuation">.</span>Item</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Body<span class="token punctuation">.</span>Item</span>  item01 <span class="token operator">=</span> <span class="token keyword">new</span>  <span class="token class-name">Body<span class="token punctuation">.</span>Item</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        item01<span class="token punctuation">.</span><span class="token function">setBodyName</span><span class="token punctuation">(</span><span class="token string">&quot;a1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        item01<span class="token punctuation">.</span><span class="token function">setBodyValue</span><span class="token punctuation">(</span><span class="token string">&quot;a1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Body<span class="token punctuation">.</span>Item</span>  item02 <span class="token operator">=</span> <span class="token keyword">new</span>  <span class="token class-name">Body<span class="token punctuation">.</span>Item</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        item02<span class="token punctuation">.</span><span class="token function">setBodyName</span><span class="token punctuation">(</span><span class="token string">&quot;a2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        item02<span class="token punctuation">.</span><span class="token function">setBodyValue</span><span class="token punctuation">(</span><span class="token string">&quot;a2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>item01<span class="token punctuation">)</span><span class="token punctuation">;</span>
        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>item02<span class="token punctuation">)</span><span class="token punctuation">;</span>
        body<span class="token punctuation">.</span><span class="token function">setAllItem</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
        templateMessage<span class="token punctuation">.</span><span class="token function">setBody</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Common</span> common <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Common</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        common<span class="token punctuation">.</span><span class="token function">setTemplateId</span><span class="token punctuation">(</span><span class="token string">&quot;TemplateIdaaaa01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        common<span class="token punctuation">.</span><span class="token function">setAuthCode</span><span class="token punctuation">(</span><span class="token string">&quot;auth01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        templateMessage<span class="token punctuation">.</span><span class="token function">setCommon</span><span class="token punctuation">(</span>common<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Action</span> action <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Action</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        action<span class="token punctuation">.</span><span class="token function">setActionUrl</span><span class="token punctuation">(</span><span class="token string">&quot;www.58.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        action<span class="token punctuation">.</span><span class="token function">setActionLocation</span><span class="token punctuation">(</span><span class="token string">&quot;left&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        templateMessage<span class="token punctuation">.</span><span class="token function">setAction</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>如果让你这么用，估计会骂人吧，有没有好的解决方式呢当然有，对于复杂的对象创建应该使用<code>builder设计模式</code>。</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TemplateMessageBuilder</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> headName<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> headBody<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Body<span class="token punctuation">.</span>Item</span><span class="token punctuation">&gt;</span></span> allItem<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> actionUrl<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> actionLocation<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> templateId<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> authCode<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">TemplateMessageBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        allItem <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">TemplateMessageBuilder</span> <span class="token function">setHeadName</span><span class="token punctuation">(</span><span class="token class-name">String</span> headName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>headName <span class="token operator">=</span> headName<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">TemplateMessageBuilder</span> <span class="token function">setHeadBody</span><span class="token punctuation">(</span><span class="token class-name">String</span> headBody<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>headBody <span class="token operator">=</span> headBody<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">TemplateMessageBuilder</span> <span class="token function">setAllItem</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Body<span class="token punctuation">.</span>Item</span><span class="token punctuation">&gt;</span></span> allItem<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>allItem<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>allItem<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">TemplateMessageBuilder</span> <span class="token function">addItem</span><span class="token punctuation">(</span><span class="token class-name">Body<span class="token punctuation">.</span>Item</span> allItem<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>allItem<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>allItem<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">TemplateMessageBuilder</span> <span class="token function">setActionUrl</span><span class="token punctuation">(</span><span class="token class-name">String</span> actionUrl<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>actionUrl <span class="token operator">=</span> actionUrl<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">TemplateMessageBuilder</span> <span class="token function">setActionLocation</span><span class="token punctuation">(</span><span class="token class-name">String</span> actionLocation<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>actionLocation <span class="token operator">=</span> actionLocation<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">TemplateMessageBuilder</span> <span class="token function">setTemplateId</span><span class="token punctuation">(</span><span class="token class-name">String</span> templateId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>templateId <span class="token operator">=</span> templateId<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">TemplateMessageBuilder</span> <span class="token function">setAuthCode</span><span class="token punctuation">(</span><span class="token class-name">String</span> authCode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>authCode <span class="token operator">=</span> authCode<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">TemplateMessageBuilder</span> <span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">TemplateMessageBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">TemplateMessage</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>allItem<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;body item不能为空&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> authCode <span class="token operator">||</span> authCode<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;安全码不能为空&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// todo 按照业务自己定义规则</span>
        <span class="token class-name">TemplateMessage</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TemplateMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Header</span> header <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Header</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        header<span class="token punctuation">.</span><span class="token function">setHeadName</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>headName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        header<span class="token punctuation">.</span><span class="token function">setHeadBody</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>headBody<span class="token punctuation">)</span><span class="token punctuation">;</span>
        result<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span>header<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Body</span> body <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        body<span class="token punctuation">.</span><span class="token function">setAllItem</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>allItem<span class="token punctuation">)</span><span class="token punctuation">;</span>
        result<span class="token punctuation">.</span><span class="token function">setBody</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Common</span> common <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Common</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        common<span class="token punctuation">.</span><span class="token function">setTemplateId</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>templateId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        common<span class="token punctuation">.</span><span class="token function">setAuthCode</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>authCode<span class="token punctuation">)</span><span class="token punctuation">;</span>
        result<span class="token punctuation">.</span><span class="token function">setCommon</span><span class="token punctuation">(</span>common<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Action</span> action <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Action</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        action<span class="token punctuation">.</span><span class="token function">setActionUrl</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>actionUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
        action<span class="token punctuation">.</span><span class="token function">setActionLocation</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>actionLocation<span class="token punctuation">)</span><span class="token punctuation">;</span>
        result<span class="token punctuation">.</span><span class="token function">setAction</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="6"><li>让我们来看看结果:</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>  <span class="token class-name">TemplateMessageBuilder</span> builder <span class="token operator">=</span> <span class="token class-name">TemplateMessageBuilder</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     builder<span class="token punctuation">.</span><span class="token function">setHeadName</span><span class="token punctuation">(</span><span class="token string">&quot;renfakai&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setHeadBody</span><span class="token punctuation">(</span><span class="token string">&quot;renfakai&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setActionUrl</span><span class="token punctuation">(</span><span class="token string">&quot;www.58.com&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setActionLocation</span><span class="token punctuation">(</span><span class="token string">&quot;left&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setAuthCode</span><span class="token punctuation">(</span><span class="token string">&quot;auth01&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setTemplateId</span><span class="token punctuation">(</span><span class="token string">&quot;TemplateIdaaaa01&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">addItem</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Body<span class="token punctuation">.</span>Item</span><span class="token punctuation">(</span><span class="token string">&quot;item01&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;item01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">addItem</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Body<span class="token punctuation">.</span>Item</span><span class="token punctuation">(</span><span class="token string">&quot;item02&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;item02&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">addItem</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Body<span class="token punctuation">.</span>Item</span><span class="token punctuation">(</span><span class="token string">&quot;item03&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;item03&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">TemplateMessage</span> build <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="build-设计模式-netty-使用" tabindex="-1"><a class="header-anchor" href="#build-设计模式-netty-使用" aria-hidden="true">#</a> build 设计模式 netty 使用</h3><ol><li><code>build设计模式</code>在<code>netty</code>中的使用，让我们看看是否与上面的<code>demo</code>一致。</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token class-name">EventLoopGroup</span> boss <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NioEventLoopGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">EventLoopGroup</span> work <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NioEventLoopGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">ServerBootstrap</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServerBootstrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            b<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span>boss<span class="token punctuation">,</span> work<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">channel</span><span class="token punctuation">(</span><span class="token class-name">NioServerSocketChannel</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">localAddress</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InetSocketAddress</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">childHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChannelInitializer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SocketChannel</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token annotation punctuation">@Override</span>
                        <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">initChannel</span><span class="token punctuation">(</span><span class="token class-name">SocketChannel</span> ch<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                            ch<span class="token punctuation">.</span><span class="token function">pipeline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addLast</span><span class="token punctuation">(</span>echoServerHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">ChannelFuture</span> sync <span class="token operator">=</span> b<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            sync<span class="token punctuation">.</span><span class="token function">channel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">closeFuture</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            boss<span class="token punctuation">.</span><span class="token function">shutdownGracefully</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            work<span class="token punctuation">.</span><span class="token function">shutdownGracefully</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>方法内部代码：</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>     <span class="token keyword">public</span> <span class="token class-name">ServerBootstrap</span> <span class="token function">group</span><span class="token punctuation">(</span><span class="token class-name">EventLoopGroup</span> parentGroup<span class="token punctuation">,</span> <span class="token class-name">EventLoopGroup</span> childGroup<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span>parentGroup<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>childGroup <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token string">&quot;childGroup&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>childGroup <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">&quot;childGroup set already&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>childGroup <span class="token operator">=</span> childGroup<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">ServerBootstrap</span> <span class="token function">childOption</span><span class="token punctuation">(</span><span class="token class-name">ChannelOption</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> childOption<span class="token punctuation">,</span> <span class="token class-name">T</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>childOption <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token string">&quot;childOption&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>childOptions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                childOptions<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>childOption<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>childOptions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                childOptions<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>childOption<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="正交性问题" tabindex="-1"><a class="header-anchor" href="#正交性问题" aria-hidden="true">#</a> 正交性问题</h3>`,19),k={href:"https://book.douban.com/subject/30231515/",target:"_blank",rel:"noopener noreferrer"},d={href:"https://book.douban.com/subject/5387401/",target:"_blank",rel:"noopener noreferrer"},r=p(`<table><thead><tr><th>轴</th><th style="text-align:right;">X</th><th style="text-align:right;">Y</th><th style="text-align:right;">Y</th><th style="text-align:right;">Z</th></tr></thead><tbody><tr><td>1</td><td style="text-align:right;">ServerBootstrap</td><td style="text-align:right;">NioEventLoopGroup</td><td style="text-align:right;">NioSocketChannel</td><td style="text-align:right;">handler</td></tr><tr><td>2</td><td style="text-align:right;">Bootstrap</td><td style="text-align:right;">OioEventLoopGroup</td><td style="text-align:right;">OioSocketChannel</td><td style="text-align:right;">handler</td></tr></tbody></table><ul><li><code>Bootstrap</code>可以选择客户端或者服务端。</li><li><code>EventLoopGroup</code>可以选择<code>nio, oio, aio</code>，但是<code>channel</code>要与之对应。</li><li>处理器可以随意组合 按照上面理论就可以产生 <code>x*y*z</code> 中组合，其理论与日志的设计一致。</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">Logger</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token string">&quot;log&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Handler</span> consoleHandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConsoleHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    consoleHandler<span class="token punctuation">.</span><span class="token function">setFormatter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">XMLFormatter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    logger<span class="token punctuation">.</span><span class="token function">addHandler</span><span class="token punctuation">(</span>consoleHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Logger</span> logger2 <span class="token operator">=</span> <span class="token class-name">Logger</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token string">&quot;log&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Handler</span> fileHandler<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileHandler</span><span class="token punctuation">(</span><span class="token string">&quot;a.log&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    fileHandler<span class="token punctuation">.</span><span class="token function">setFormatter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SimpleFormatter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    logger2<span class="token punctuation">.</span><span class="token function">addHandler</span><span class="token punctuation">(</span>fileHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>Handler</code>可以使用<code>SimpleFormatter, XMLFormatter</code>为格式化方式。</li><li><code>Handler</code>底层可以为<code>ConsoleHandler, FileHandler</code>。</li><li>日志暂时只使用了<code>Logger</code>，如果后面使用<code>slf4j</code>日志底层也是可替换的，大大增加了灵活性。</li></ul><h3 id="接口隔离" tabindex="-1"><a class="header-anchor" href="#接口隔离" aria-hidden="true">#</a> 接口隔离</h3><p>不应该强迫客户依赖它们不用的方法 <code>Bootstrap</code> 和 <code>BootstrapConfig</code> 使用了接口隔离的方式，让用户使用更简单。</p>`,6),v={href:"https://book.douban.com/subject/1140457/",target:"_blank",rel:"noopener noreferrer"};function m(b,y){const s=l("ExternalLinkIcon");return o(),c("div",null,[u,n("ul",null,[n("li",null,[n("a",k,[a("码农翻身 日志文件的设计正交性 170"),t(s)])]),n("li",null,[n("a",d,[a("UNIX 编程艺术 4.2.2 正交性 89"),t(s)])])]),r,n("ul",null,[n("li",null,[n("a",v,[a("敏捷软件开发 第十二章 接口隔离原则（ISP）"),t(s)])])])])}const h=e(i,[["render",m],["__file","bootstrap.html.vue"]]);export{h as default};
