const t=JSON.parse('{"key":"v-d8ffd738","path":"/basic-skill/design-pattern/structure/decorator/decorator-hystrix.html","title":"Decorator-Hystrix","lang":"zh-CN","frontmatter":{"description":"Decorator-Hystrix 元数据标记选型 java 编程，对于元信息标记一般有 3 种方式 接口标记 实现某种接口，然后转换成接口编程 注解标记 拿到注解，获取注解的值 泛型标记 因为类型擦除后依然会有部分信息放到元信息中，获取比较困难，可以参考《深入理解 java 虚拟机》，其中讲了泛型妥协和语法糖问题。 提示 代码可以参考 io.netty.util.internal. TypeParameterMatcher","head":[["meta",{"property":"og:url","content":"https://renfakai.com/basic-skill/design-pattern/structure/decorator/decorator-hystrix.html"}],["meta",{"property":"og:site_name","content":"天道酬勤"}],["meta",{"property":"og:title","content":"Decorator-Hystrix"}],["meta",{"property":"og:description","content":"Decorator-Hystrix 元数据标记选型 java 编程，对于元信息标记一般有 3 种方式 接口标记 实现某种接口，然后转换成接口编程 注解标记 拿到注解，获取注解的值 泛型标记 因为类型擦除后依然会有部分信息放到元信息中，获取比较困难，可以参考《深入理解 java 虚拟机》，其中讲了泛型妥协和语法糖问题。 提示 代码可以参考 io.netty.util.internal. TypeParameterMatcher"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-07T06:13:29.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-07T06:13:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Decorator-Hystrix\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-07T06:13:29.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"元数据标记选型","slug":"元数据标记选型","link":"#元数据标记选型","children":[]},{"level":3,"title":"部门内 Hystrix 改造","slug":"部门内-hystrix-改造","link":"#部门内-hystrix-改造","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1694067209000,"updatedTime":1694067209000,"contributors":[{"name":"renfakai","email":"rfk1118@gmail.com","commits":1}]},"readingTime":{"minutes":4.31,"words":1292},"filePathRelative":"basic-skill/design-pattern/structure/decorator/decorator-hystrix.md","localizedDate":"2023年9月7日","excerpt":"<h1> Decorator-Hystrix</h1>\\n<h3> 元数据标记选型</h3>\\n<p>java 编程，对于元信息标记一般有 3 种方式</p>\\n<ol>\\n<li>接口标记 实现某种接口，然后转换成接口编程</li>\\n<li>注解标记 拿到注解，获取注解的值</li>\\n<li>泛型标记 因为类型擦除后依然会有部分信息放到元信息中，获取比较困难，可以参考《深入理解 java 虚拟机》，其中讲了泛型妥协和语法糖问题。</li>\\n</ol>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p>代码可以参考 <code>io.netty.util.internal. TypeParameterMatcher</code></p>\\n</div>","copyright":{},"autoDesc":true}');export{t as data};
