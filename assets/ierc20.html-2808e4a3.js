import{_ as e,V as o,W as c,Y as n,a1 as s,Z as p,a0 as a,F as u}from"./framework-e54e0297.js";const i={},l=a('<h1 id="ierc20" tabindex="-1"><a class="header-anchor" href="#ierc20" aria-hidden="true">#</a> IERC20</h1><p>代币，也就是我们常说的钱，接口设计很有意思，主要包含以下几个概念：</p><ul><li>发行总量（totalSupply），所有钱都是有总量的，该方法可以查询出代币总量。</li><li>名称（name）例如人民币。</li><li>符号，例如人民币（¥）。</li><li>单位，面值问题。</li><li>余额，也就是账薄进行记账。</li><li>授权（approve），查看授权（allowance），查看给某个账户进行授权。</li><li>转账（transfer），转账（transferFrom）。</li></ul>',3),r={class:"hint-container tip"},k=n("p",{class:"hint-container-title"},"提示",-1),d={href:"https://docs.openzeppelin.com/contracts/4.x/erc20-supply",target:"_blank",rel:"noopener noreferrer"},v=a(`<h2 id="代币接口" tabindex="-1"><a class="header-anchor" href="#代币接口" aria-hidden="true">#</a> 代币接口</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">interface</span> <span class="token class-name">IERC20</span> <span class="token punctuation">{</span>
    <span class="token comment">// 事件event</span>
    event <span class="token function">Approval</span><span class="token punctuation">(</span>address indexed owner<span class="token punctuation">,</span> address indexed spender<span class="token punctuation">,</span> uint value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    event <span class="token function">Transfer</span><span class="token punctuation">(</span>address indexed from<span class="token punctuation">,</span> address indexed to<span class="token punctuation">,</span> uint value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 名称</span>
    <span class="token keyword">function</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> external view <span class="token function">returns</span> <span class="token punctuation">(</span>string memory<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 符号</span>
    <span class="token keyword">function</span> <span class="token function">symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span> external view <span class="token function">returns</span> <span class="token punctuation">(</span>string memory<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 单位</span>
    <span class="token keyword">function</span> <span class="token function">decimals</span><span class="token punctuation">(</span><span class="token punctuation">)</span> external view <span class="token function">returns</span> <span class="token punctuation">(</span>uint8<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 总量</span>
    <span class="token keyword">function</span> <span class="token function">totalSupply</span><span class="token punctuation">(</span><span class="token punctuation">)</span> external view <span class="token function">returns</span> <span class="token punctuation">(</span>uint<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 查询某个人的余额</span>
    <span class="token keyword">function</span> <span class="token function">balanceOf</span><span class="token punctuation">(</span><span class="token parameter">address owner</span><span class="token punctuation">)</span> external view <span class="token function">returns</span> <span class="token punctuation">(</span>uint<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 查询给其他地址的授权，允许其他人使用的自己那部分钱</span>
    <span class="token keyword">function</span> <span class="token function">allowance</span><span class="token punctuation">(</span><span class="token parameter">address owner<span class="token punctuation">,</span> address spender</span><span class="token punctuation">)</span> external view <span class="token function">returns</span> <span class="token punctuation">(</span>uint<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 进行授权</span>
    <span class="token keyword">function</span> <span class="token function">approve</span><span class="token punctuation">(</span><span class="token parameter">address spender<span class="token punctuation">,</span> uint value</span><span class="token punctuation">)</span> external <span class="token function">returns</span> <span class="token punctuation">(</span>bool<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 转账</span>
    <span class="token keyword">function</span> <span class="token function">transfer</span><span class="token punctuation">(</span><span class="token parameter">address to<span class="token punctuation">,</span> uint value</span><span class="token punctuation">)</span> external <span class="token function">returns</span> <span class="token punctuation">(</span>bool<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">transferFrom</span><span class="token punctuation">(</span><span class="token parameter">address from<span class="token punctuation">,</span> address to<span class="token punctuation">,</span> uint value</span><span class="token punctuation">)</span> external <span class="token function">returns</span> <span class="token punctuation">(</span>bool<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="uniswapv2erc20源码" tabindex="-1"><a class="header-anchor" href="#uniswapv2erc20源码" aria-hidden="true">#</a> UniswapV2ERC20源码</h2><p>该代码是从<code>Uniswap</code>下载的，后续代码以学习<code>Uniswap</code>为主。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>pragma solidity <span class="token operator">=</span><span class="token number">0.5</span><span class="token number">.16</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token string">&#39;./interfaces/IUniswapV2ERC20.sol&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&#39;./libraries/SafeMath.sol&#39;</span><span class="token punctuation">;</span>

contract UniswapV2ERC20 is IUniswapV2ERC20 <span class="token punctuation">{</span>
    using SafeMath <span class="token keyword">for</span> uint<span class="token punctuation">;</span>
    <span class="token comment">// 名称</span>
    string <span class="token keyword">public</span> constant name <span class="token operator">=</span> <span class="token string">&#39;Uniswap V2&#39;</span><span class="token punctuation">;</span>
    <span class="token comment">// 符号</span>
    string <span class="token keyword">public</span> constant symbol <span class="token operator">=</span> <span class="token string">&#39;UNI-V2&#39;</span><span class="token punctuation">;</span>
    <span class="token comment">// 单位</span>
    uint8 <span class="token keyword">public</span> constant decimals <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">;</span>
    <span class="token comment">// 总量</span>
    uint  <span class="token keyword">public</span> totalSupply<span class="token punctuation">;</span>
    <span class="token comment">// map,key为地址，value为数量</span>
    <span class="token function">mapping</span><span class="token punctuation">(</span><span class="token parameter">address</span> <span class="token operator">=&gt;</span> uint<span class="token punctuation">)</span> <span class="token keyword">public</span> balanceOf<span class="token punctuation">;</span>
    <span class="token comment">// map(key,map(key,value))) 地址，授权，一个人可以给多个地址授权</span>
    <span class="token function">mapping</span><span class="token punctuation">(</span><span class="token parameter">address</span> <span class="token operator">=&gt;</span> <span class="token function">mapping</span><span class="token punctuation">(</span><span class="token parameter">address</span> <span class="token operator">=&gt;</span> uint<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">public</span> allowance<span class="token punctuation">;</span>

    bytes32 <span class="token keyword">public</span> <span class="token constant">DOMAIN_SEPARATOR</span><span class="token punctuation">;</span>
    <span class="token comment">// keccak256(&quot;Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)&quot;);</span>
    bytes32 <span class="token keyword">public</span> constant <span class="token constant">PERMIT_TYPEHASH</span> <span class="token operator">=</span> <span class="token number">0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9</span><span class="token punctuation">;</span>
    <span class="token function">mapping</span><span class="token punctuation">(</span><span class="token parameter">address</span> <span class="token operator">=&gt;</span> uint<span class="token punctuation">)</span> <span class="token keyword">public</span> nonces<span class="token punctuation">;</span>

    event <span class="token function">Approval</span><span class="token punctuation">(</span>address indexed owner<span class="token punctuation">,</span> address indexed spender<span class="token punctuation">,</span> uint value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    event <span class="token function">Transfer</span><span class="token punctuation">(</span>address indexed from<span class="token punctuation">,</span> address indexed to<span class="token punctuation">,</span> uint value<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token punctuation">{</span>
        uint chainId<span class="token punctuation">;</span>
        assembly <span class="token punctuation">{</span>
            <span class="token literal-property property">chainId</span> <span class="token operator">:</span><span class="token operator">=</span> chainid
        <span class="token punctuation">}</span>
        <span class="token constant">DOMAIN_SEPARATOR</span> <span class="token operator">=</span> <span class="token function">keccak256</span><span class="token punctuation">(</span>
            abi<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>
                <span class="token function">keccak256</span><span class="token punctuation">(</span><span class="token string">&#39;EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token function">keccak256</span><span class="token punctuation">(</span><span class="token function">bytes</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token function">keccak256</span><span class="token punctuation">(</span><span class="token function">bytes</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                chainId<span class="token punctuation">,</span>
                <span class="token function">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
            <span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 生成代币</span>
    <span class="token keyword">function</span> <span class="token function">_mint</span><span class="token punctuation">(</span><span class="token parameter">address to<span class="token punctuation">,</span> uint value</span><span class="token punctuation">)</span> internal <span class="token punctuation">{</span>
        <span class="token comment">// 总代币增加</span>
        totalSupply <span class="token operator">=</span> totalSupply<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 给账户加钱</span>
        balanceOf<span class="token punctuation">[</span>to<span class="token punctuation">]</span> <span class="token operator">=</span> balanceOf<span class="token punctuation">[</span>to<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 黑洞打钱进来</span>
        emit <span class="token function">Transfer</span><span class="token punctuation">(</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> to<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">function</span> <span class="token function">_burn</span><span class="token punctuation">(</span><span class="token parameter">address from<span class="token punctuation">,</span> uint value</span><span class="token punctuation">)</span> internal <span class="token punctuation">{</span>
        <span class="token comment">// 账户减少</span>
        balanceOf<span class="token punctuation">[</span>from<span class="token punctuation">]</span> <span class="token operator">=</span> balanceOf<span class="token punctuation">[</span>from<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">sub</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 总量减少</span>
        totalSupply <span class="token operator">=</span> totalSupply<span class="token punctuation">.</span><span class="token function">sub</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 向黑洞销毁</span>
        emit <span class="token function">Transfer</span><span class="token punctuation">(</span>from<span class="token punctuation">,</span> <span class="token function">address</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">function</span> <span class="token function">_approve</span><span class="token punctuation">(</span><span class="token parameter">address owner<span class="token punctuation">,</span> address spender<span class="token punctuation">,</span> uint value</span><span class="token punctuation">)</span> <span class="token keyword">private</span> <span class="token punctuation">{</span>
        <span class="token comment">// 授权给别人信用额度</span>
        allowance<span class="token punctuation">[</span>owner<span class="token punctuation">]</span><span class="token punctuation">[</span>spender<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
        emit <span class="token function">Approval</span><span class="token punctuation">(</span>owner<span class="token punctuation">,</span> spender<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">function</span> <span class="token function">_transfer</span><span class="token punctuation">(</span><span class="token parameter">address from<span class="token punctuation">,</span> address to<span class="token punctuation">,</span> uint value</span><span class="token punctuation">)</span> <span class="token keyword">private</span> <span class="token punctuation">{</span>
        <span class="token comment">// 内部转账</span>
        balanceOf<span class="token punctuation">[</span>from<span class="token punctuation">]</span> <span class="token operator">=</span> balanceOf<span class="token punctuation">[</span>from<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">sub</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        balanceOf<span class="token punctuation">[</span>to<span class="token punctuation">]</span> <span class="token operator">=</span> balanceOf<span class="token punctuation">[</span>to<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        emit <span class="token function">Transfer</span><span class="token punctuation">(</span>from<span class="token punctuation">,</span> to<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">function</span> <span class="token function">approve</span><span class="token punctuation">(</span><span class="token parameter">address spender<span class="token punctuation">,</span> uint value</span><span class="token punctuation">)</span> external <span class="token function">returns</span> <span class="token punctuation">(</span><span class="token parameter">bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 授权，这里使用了调用者msg.sender</span>
        <span class="token function">_approve</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> spender<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">function</span> <span class="token function">transfer</span><span class="token punctuation">(</span><span class="token parameter">address to<span class="token punctuation">,</span> uint value</span><span class="token punctuation">)</span> external <span class="token function">returns</span> <span class="token punctuation">(</span><span class="token parameter">bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 转账，来自msg.sender</span>
        <span class="token function">_transfer</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> to<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">function</span> <span class="token function">transferFrom</span><span class="token punctuation">(</span><span class="token parameter">address from<span class="token punctuation">,</span> address to<span class="token punctuation">,</span> uint value</span><span class="token punctuation">)</span> external <span class="token function">returns</span> <span class="token punctuation">(</span><span class="token parameter">bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>allowance<span class="token punctuation">[</span>from<span class="token punctuation">]</span><span class="token punctuation">[</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token function">uint</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            allowance<span class="token punctuation">[</span>from<span class="token punctuation">]</span><span class="token punctuation">[</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">]</span> <span class="token operator">=</span> allowance<span class="token punctuation">[</span>from<span class="token punctuation">]</span><span class="token punctuation">[</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">sub</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 转账，这里使用了from</span>
        <span class="token function">_transfer</span><span class="token punctuation">(</span>from<span class="token punctuation">,</span> to<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">function</span> <span class="token function">permit</span><span class="token punctuation">(</span><span class="token parameter">address owner<span class="token punctuation">,</span> address spender<span class="token punctuation">,</span> uint value<span class="token punctuation">,</span> uint deadline<span class="token punctuation">,</span> uint8 v<span class="token punctuation">,</span> bytes32 r<span class="token punctuation">,</span> bytes32 s</span><span class="token punctuation">)</span> external <span class="token punctuation">{</span>
        <span class="token function">require</span><span class="token punctuation">(</span>deadline <span class="token operator">&gt;=</span> block<span class="token punctuation">.</span>timestamp<span class="token punctuation">,</span> <span class="token string">&#39;UniswapV2: EXPIRED&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        bytes32 digest <span class="token operator">=</span> <span class="token function">keccak256</span><span class="token punctuation">(</span>
            abi<span class="token punctuation">.</span><span class="token function">encodePacked</span><span class="token punctuation">(</span>
                <span class="token string">&#39;\\x19\\x01&#39;</span><span class="token punctuation">,</span>
                <span class="token constant">DOMAIN_SEPARATOR</span><span class="token punctuation">,</span>
                <span class="token function">keccak256</span><span class="token punctuation">(</span>abi<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token constant">PERMIT_TYPEHASH</span><span class="token punctuation">,</span> owner<span class="token punctuation">,</span> spender<span class="token punctuation">,</span> value<span class="token punctuation">,</span> nonces<span class="token punctuation">[</span>owner<span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">,</span> deadline<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        address recoveredAddress <span class="token operator">=</span> <span class="token function">ecrecover</span><span class="token punctuation">(</span>digest<span class="token punctuation">,</span> v<span class="token punctuation">,</span> r<span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">require</span><span class="token punctuation">(</span>recoveredAddress <span class="token operator">!=</span> <span class="token function">address</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> recoveredAddress <span class="token operator">==</span> owner<span class="token punctuation">,</span> <span class="token string">&#39;UniswapV2: INVALID_SIGNATURE&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">_approve</span><span class="token punctuation">(</span>owner<span class="token punctuation">,</span> spender<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="代币信息" tabindex="-1"><a class="header-anchor" href="#代币信息" aria-hidden="true">#</a> 代币信息</h2><p>代币信息，这里显示了名称、符号、单位。 这里使用了<code>public</code>关键字自动生成<code>view</code>方法特性和<code>external</code>修饰符仅供其他合约调用，不能在当前合约内部直接调用。与<code>Go</code>语言代码中如果返回值名称与方法体内名字命名一直无需显示<code>return</code>一样。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 名称</span>
string <span class="token keyword">public</span> constant name <span class="token operator">=</span> <span class="token string">&#39;Uniswap V2&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// 符号</span>
string <span class="token keyword">public</span> constant symbol <span class="token operator">=</span> <span class="token string">&#39;UNI-V2&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// 单位</span>
uint8 <span class="token keyword">public</span> constant decimals <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">;</span>
<span class="token comment">// 总量</span>
uint  <span class="token keyword">public</span> totalSupply<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),m={href:"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",target:"_blank",rel:"noopener noreferrer"},b=n("code",null,"java",-1),f=n("code",null,"Go",-1),w=a(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>contract <span class="token constant">ERC20</span> is Context<span class="token punctuation">,</span> <span class="token constant">IERC20</span><span class="token punctuation">,</span> IERC20Metadata<span class="token punctuation">,</span> IERC20Errors <span class="token punctuation">{</span>
    <span class="token comment">// 总量</span>
    uint256 <span class="token keyword">private</span> _totalSupply<span class="token punctuation">;</span>
    <span class="token comment">// 名称</span>
    string <span class="token keyword">private</span> _name<span class="token punctuation">;</span>
    <span class="token comment">// 符号</span>
    string <span class="token keyword">private</span> _symbol<span class="token punctuation">;</span>

    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">string memory name_<span class="token punctuation">,</span> string memory symbol_</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        _name <span class="token operator">=</span> name_<span class="token punctuation">;</span>
        _symbol <span class="token operator">=</span> symbol_<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 继承</span>
    <span class="token keyword">function</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span> view virtual <span class="token function">returns</span> <span class="token punctuation">(</span><span class="token parameter">string memory</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> _name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">function</span> <span class="token function">symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span> view virtual <span class="token function">returns</span> <span class="token punctuation">(</span><span class="token parameter">string memory</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> _symbol<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// todo其他代码省去</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="总量" tabindex="-1"><a class="header-anchor" href="#总量" aria-hidden="true">#</a> 总量</h2><ul><li>查询总量，实现方式与代币信息信息一致。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>uint <span class="token keyword">public</span> totalSupply<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>增加代币，会从黑洞<code>0x0000</code>发送代币到当前地址。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">_mint</span><span class="token punctuation">(</span><span class="token parameter">address to<span class="token punctuation">,</span> uint value</span><span class="token punctuation">)</span> internal <span class="token punctuation">{</span>
    totalSupply <span class="token operator">=</span> totalSupply<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    balanceOf<span class="token punctuation">[</span>to<span class="token punctuation">]</span> <span class="token operator">=</span> balanceOf<span class="token punctuation">[</span>to<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    emit <span class="token function">Transfer</span><span class="token punctuation">(</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> to<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>销毁代币，将代币打入黑洞</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">_burn</span><span class="token punctuation">(</span><span class="token parameter">address from<span class="token punctuation">,</span> uint value</span><span class="token punctuation">)</span> internal <span class="token punctuation">{</span>
    balanceOf<span class="token punctuation">[</span>from<span class="token punctuation">]</span> <span class="token operator">=</span> balanceOf<span class="token punctuation">[</span>from<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">sub</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    totalSupply <span class="token operator">=</span> totalSupply<span class="token punctuation">.</span><span class="token function">sub</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    emit <span class="token function">Transfer</span><span class="token punctuation">(</span>from<span class="token punctuation">,</span> <span class="token function">address</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="openzeppelin" tabindex="-1"><a class="header-anchor" href="#openzeppelin" aria-hidden="true">#</a> OpenZeppelin</h3><ul><li>查询总量，实现方式与代币信息信息一致。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">balanceOf</span><span class="token punctuation">(</span><span class="token parameter">address account</span><span class="token punctuation">)</span> <span class="token keyword">public</span> view virtual <span class="token function">returns</span> <span class="token punctuation">(</span><span class="token parameter">uint256</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> _balances<span class="token punctuation">[</span>account<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>增加代币，会从黑洞<code>0x0000000000000000000000000000000000000000</code>发送代币到当前地址。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">_mint</span><span class="token punctuation">(</span><span class="token parameter">address account<span class="token punctuation">,</span> uint256 amount</span><span class="token punctuation">)</span> internal <span class="token punctuation">{</span>
    <span class="token comment">// 账户为黑洞，不能黑洞打黑洞</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>account <span class="token operator">==</span> <span class="token function">address</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        revert <span class="token function">ERC20InvalidReceiver</span><span class="token punctuation">(</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 从黑洞创建代币，从黑洞转账给account账户，一般是address(this)</span>
    <span class="token function">_update</span><span class="token punctuation">(</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> account<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>销毁代币，将代币打入黑洞</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">_burn</span><span class="token punctuation">(</span><span class="token parameter">address account<span class="token punctuation">,</span> uint256 amount</span><span class="token punctuation">)</span> internal <span class="token punctuation">{</span>
    <span class="token comment">// 不能黑洞进黑洞</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>account <span class="token operator">==</span> <span class="token function">address</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        revert <span class="token function">ERC20InvalidSender</span><span class="token punctuation">(</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 代币打进黑洞</span>
    <span class="token function">_update</span><span class="token punctuation">(</span>account<span class="token punctuation">,</span> <span class="token function">address</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>增加代币和销毁代币公用方法</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code> <span class="token keyword">function</span> <span class="token function">_update</span><span class="token punctuation">(</span><span class="token parameter">address from<span class="token punctuation">,</span> address to<span class="token punctuation">,</span> uint256 amount</span><span class="token punctuation">)</span> internal virtual <span class="token punctuation">{</span>
        <span class="token comment">// 来自黑洞</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>from <span class="token operator">==</span> <span class="token function">address</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 代币增加</span>
            _totalSupply <span class="token operator">+=</span> amount<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            uint256 fromBalance <span class="token operator">=</span> _balances<span class="token punctuation">[</span>from<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>fromBalance <span class="token operator">&lt;</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                revert <span class="token function">ERC20InsufficientBalance</span><span class="token punctuation">(</span>from<span class="token punctuation">,</span> fromBalance<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            unchecked <span class="token punctuation">{</span>
                <span class="token comment">// Overflow not possible: amount &lt;= fromBalance &lt;= totalSupply.</span>
                _balances<span class="token punctuation">[</span>from<span class="token punctuation">]</span> <span class="token operator">=</span> fromBalance <span class="token operator">-</span> amount<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
       <span class="token comment">// 销毁代币，打进黑洞</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>to <span class="token operator">==</span> <span class="token function">address</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            unchecked <span class="token punctuation">{</span>
                <span class="token comment">// Overflow not possible: amount &lt;= totalSupply or amount &lt;= fromBalance &lt;= totalSupply.</span>
                _totalSupply <span class="token operator">-=</span> amount<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            unchecked <span class="token punctuation">{</span>
                <span class="token comment">// Overflow not possible: balance + amount is at most totalSupply, which we know fits into a uint256.</span>
                _balances<span class="token punctuation">[</span>to<span class="token punctuation">]</span> <span class="token operator">+=</span> amount<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        emit <span class="token function">Transfer</span><span class="token punctuation">(</span>from<span class="token punctuation">,</span> to<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="授权" tabindex="-1"><a class="header-anchor" href="#授权" aria-hidden="true">#</a> 授权</h2><p>所有的授权都是使用覆盖模式，并且不会对金额做校验。这样处理逻辑比较简单，代码量少，gas也比较低。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">_approve</span><span class="token punctuation">(</span><span class="token parameter">address owner<span class="token punctuation">,</span> address spender<span class="token punctuation">,</span> uint value</span><span class="token punctuation">)</span> <span class="token keyword">private</span> <span class="token punctuation">{</span>
    allowance<span class="token punctuation">[</span>owner<span class="token punctuation">]</span><span class="token punctuation">[</span>spender<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
    emit <span class="token function">Approval</span><span class="token punctuation">(</span>owner<span class="token punctuation">,</span> spender<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">approve</span><span class="token punctuation">(</span><span class="token parameter">address spender<span class="token punctuation">,</span> uint value</span><span class="token punctuation">)</span> external <span class="token function">returns</span> <span class="token punctuation">(</span><span class="token parameter">bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">_approve</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> spender<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更加完善的增加和减少授权代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">increaseAllowance</span><span class="token punctuation">(</span><span class="token parameter">address spender<span class="token punctuation">,</span> uint256 addedValue</span><span class="token punctuation">)</span> <span class="token keyword">public</span> virtual <span class="token function">returns</span> <span class="token punctuation">(</span><span class="token parameter">bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 上下文拿到调用者</span>
    address owner <span class="token operator">=</span> <span class="token function">_msgSender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 授权给某个增加额度</span>
    <span class="token function">_approve</span><span class="token punctuation">(</span>owner<span class="token punctuation">,</span> spender<span class="token punctuation">,</span> <span class="token function">allowance</span><span class="token punctuation">(</span>owner<span class="token punctuation">,</span> spender<span class="token punctuation">)</span> <span class="token operator">+</span> addedValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">decreaseAllowance</span><span class="token punctuation">(</span><span class="token parameter">address spender<span class="token punctuation">,</span> uint256 requestedDecrease</span><span class="token punctuation">)</span> <span class="token keyword">public</span> virtual <span class="token function">returns</span> <span class="token punctuation">(</span><span class="token parameter">bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 上下文拿到调用者</span>
    address owner <span class="token operator">=</span> <span class="token function">_msgSender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    uint256 currentAllowance <span class="token operator">=</span> <span class="token function">allowance</span><span class="token punctuation">(</span>owner<span class="token punctuation">,</span> spender<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>currentAllowance <span class="token operator">&lt;</span> requestedDecrease<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        revert <span class="token function">ERC20FailedDecreaseAllowance</span><span class="token punctuation">(</span>spender<span class="token punctuation">,</span> currentAllowance<span class="token punctuation">,</span> requestedDecrease<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 防止越界</span>
    unchecked <span class="token punctuation">{</span>
          <span class="token comment">// 授权给减少增加额度</span>
        <span class="token function">_approve</span><span class="token punctuation">(</span>owner<span class="token punctuation">,</span> spender<span class="token punctuation">,</span> currentAllowance <span class="token operator">-</span> requestedDecrease<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">_approve</span><span class="token punctuation">(</span><span class="token parameter">address owner<span class="token punctuation">,</span> address spender<span class="token punctuation">,</span> uint256 amount</span><span class="token punctuation">)</span> internal virtual <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>owner <span class="token operator">==</span> <span class="token function">address</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        revert <span class="token function">ERC20InvalidApprover</span><span class="token punctuation">(</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>spender <span class="token operator">==</span> <span class="token function">address</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        revert <span class="token function">ERC20InvalidSpender</span><span class="token punctuation">(</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 修改授权金额</span>
    _allowances<span class="token punctuation">[</span>owner<span class="token punctuation">]</span><span class="token punctuation">[</span>spender<span class="token punctuation">]</span> <span class="token operator">=</span> amount<span class="token punctuation">;</span>
    emit <span class="token function">Approval</span><span class="token punctuation">(</span>owner<span class="token punctuation">,</span> spender<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="转账" tabindex="-1"><a class="header-anchor" href="#转账" aria-hidden="true">#</a> 转账</h2><p>转账一共有两个方法，调用者给别的用户进行转账。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">transfer</span><span class="token punctuation">(</span><span class="token parameter">address to<span class="token punctuation">,</span> uint256 amount</span><span class="token punctuation">)</span> <span class="token keyword">public</span> virtual <span class="token function">returns</span> <span class="token punctuation">(</span><span class="token parameter">bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 上下文拿到的调用者</span>
    address owner <span class="token operator">=</span> <span class="token function">_msgSender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">_transfer</span><span class="token punctuation">(</span>owner<span class="token punctuation">,</span> to<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>被授权用户转移代币。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">transferFrom</span><span class="token punctuation">(</span><span class="token parameter">address from<span class="token punctuation">,</span> address to<span class="token punctuation">,</span> uint256 amount</span><span class="token punctuation">)</span> <span class="token keyword">public</span> virtual <span class="token function">returns</span> <span class="token punctuation">(</span><span class="token parameter">bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 调用者</span>
    address spender <span class="token operator">=</span> <span class="token function">_msgSender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 查询地址给当前调用者的授权额度</span>
    <span class="token function">_spendAllowance</span><span class="token punctuation">(</span>from<span class="token punctuation">,</span> spender<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">_transfer</span><span class="token punctuation">(</span>from<span class="token punctuation">,</span> to<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">_spendAllowance</span><span class="token punctuation">(</span><span class="token parameter">address owner<span class="token punctuation">,</span> address spender<span class="token punctuation">,</span> uint256 amount</span><span class="token punctuation">)</span> internal virtual <span class="token punctuation">{</span>
    <span class="token comment">// 查询授权金额</span>
    uint256 currentAllowance <span class="token operator">=</span> <span class="token function">allowance</span><span class="token punctuation">(</span>owner<span class="token punctuation">,</span> spender<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 如果不是最大金额</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>currentAllowance <span class="token operator">!=</span> <span class="token function">type</span><span class="token punctuation">(</span>uint256<span class="token punctuation">)</span><span class="token punctuation">.</span>max<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 如果授权额度小于转账额度，阻断流程</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>currentAllowance <span class="token operator">&lt;</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            revert <span class="token function">ERC20InsufficientAllowance</span><span class="token punctuation">(</span>spender<span class="token punctuation">,</span> currentAllowance<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        unchecked <span class="token punctuation">{</span>
            <span class="token comment">// 减少授权额度</span>
            <span class="token function">_approve</span><span class="token punctuation">(</span>owner<span class="token punctuation">,</span> spender<span class="token punctuation">,</span> currentAllowance <span class="token operator">-</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">_transfer</span><span class="token punctuation">(</span><span class="token parameter">address from<span class="token punctuation">,</span> address to<span class="token punctuation">,</span> uint256 amount</span><span class="token punctuation">)</span> internal <span class="token punctuation">{</span>
    <span class="token comment">// 不能来自黑洞</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>from <span class="token operator">==</span> <span class="token function">address</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        revert <span class="token function">ERC20InvalidSender</span><span class="token punctuation">(</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 不能销毁代币</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>to <span class="token operator">==</span> <span class="token function">address</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        revert <span class="token function">ERC20InvalidReceiver</span><span class="token punctuation">(</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 从form</span>
    <span class="token function">_update</span><span class="token punctuation">(</span>from<span class="token punctuation">,</span> to<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="成长" tabindex="-1"><a class="header-anchor" href="#成长" aria-hidden="true">#</a> 成长</h2><ol><li>对于某些方法可以使用<code>external view returns (string memory)</code>进行覆写。</li><li>如果不想引入某个包，可以使用<code>bytes4 private constant SELECTOR = bytes4(keccak256(bytes(&#39;transfer(address,uint256)&#39;)));</code>方法选择器，使用方法如下</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">_safeTransfer</span><span class="token punctuation">(</span><span class="token parameter">address token<span class="token punctuation">,</span> address to<span class="token punctuation">,</span> uint value</span><span class="token punctuation">)</span> <span class="token keyword">private</span> <span class="token punctuation">{</span>
    <span class="token punctuation">(</span>bool success<span class="token punctuation">,</span> bytes memory data<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">token</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>abi<span class="token punctuation">.</span><span class="token function">encodeWithSelector</span><span class="token punctuation">(</span><span class="token constant">SELECTOR</span><span class="token punctuation">,</span> to<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">require</span><span class="token punctuation">(</span>success <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> abi<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token punctuation">(</span>bool<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;UniswapV2: TRANSFER_FAILED&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,30);function y(g,h){const t=u("ExternalLinkIcon");return o(),c("div",null,[l,n("div",r,[k,n("p",null,[n("a",d,[s("openzeppelin文档地址"),p(t)]),s("，有详细讲解。")])]),v,n("p",null,[s("在"),n("a",m,[s("OpenZeppelin"),p(t)]),s("中的实现如下，这种实现就像"),b,s("或"),f,s("语言那种强实现一样。")]),w])}const x=e(i,[["render",y],["__file","ierc20.html.vue"]]);export{x as default};
