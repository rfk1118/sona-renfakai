import{_ as r,V as i,W as l,X as d,Z as a,Y as e,a1 as s,a0 as c,F as o}from"./framework-1bd9c91b.js";const p="/assets/idea_next_tip-13fdd9c3.jpg",h={},_=e("h1",{id:"权限-流程",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#权限-流程","aria-hidden":"true"},"#"),s(" 权限+流程")],-1),m=e("p",null,"框架组合使用在某些场景下就会产生新的问题。",-1),u=e("h2",{id:"下一流程",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#下一流程","aria-hidden":"true"},"#"),s(" 下一流程")],-1),k=e("p",null,"讲点技术相关的，词法分析树可以分析出流程树，idea已经支持根据当前数据进行推断代码执行，图中可以看出已经根据当前标量进行推断出下一分支执行，此段代码仅做展示使用，在编译期间会优化掉不会执行的分支。",-1),v=e("p",null,[e("img",{src:p,alt:"An image"})],-1),f=e("p",null,"在工作流程，有一种场景就是获取下一个流程，即根据当前页面的值动态的获取下一个页面流程，然后当前人会根据下一流程选取不同人做处理，并且流程上处理人员不一样。",-1),g={href:"https://github.com/zhoupeng20188/activitispringboot/blob/master/src/main/java/com/zp/activitispringboot/utils/ActivitiUtil.java",target:"_blank",rel:"noopener noreferrer"},b=c(`<h2 id="获取流转人" tabindex="-1"><a class="header-anchor" href="#获取流转人" aria-hidden="true">#</a> 获取流转人</h2><p>找到了下一工作流节点，而每一个节点都设置跳转路由，现在可以根据页面路由查找到拥有该页面的角色。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> role_id <span class="token keyword">from</span> url_permission <span class="token keyword">where</span> permission <span class="token operator">=</span> <span class="token string">&#39;页面路由&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>根据角色查找到角色下所有人。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> user_id <span class="token keyword">from</span> role_dis <span class="token keyword">where</span> role_id <span class="token operator">=</span> <span class="token string">&#39;xxx&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,5),x={href:"https://github.com/rfk1118/leetcode/blob/main/markdown/binary_tree.md",target:"_blank",rel:"noopener noreferrer"},y=e("h2",{id:"进阶版",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#进阶版","aria-hidden":"true"},"#"),s(" 进阶版")],-1),w=e("ul",null,[e("li",null,"jvm可以根据长期调用对字节码编译进行优化和退化，这种基于预期，并且有衰退，应用到业务上，即在业务上进行流转时，可以根据当前人和变量已经历史指派进行处理。")],-1);function V(T,A){const n=o("Mermaid"),t=o("ExternalLinkIcon");return i(),l("div",null,[_,d(" 权限可以参考[周志明老师架构安全性](https://jingyecn.top:18080/architect-perspective/general-architecture/system-security/)， "),m,u,k,v,f,a(n,{id:"mermaid-19",code:"eJwrLkksSXXJTEwvSszVLTPiUgACsJhCZlo8hGFjk5yRn5mcamcHlo3WilXQ1bVTeLp38tPO3ie7doFF4TywHEwvWApuEEjG8WXzipfTVzxd0vJ8QpuCFVBSIU/BRsEYU6UTNpV2tkClAFOVQxA="}),e("p",null,[s("在工作流程如果处理的话流程如下，代码参考了"),e("a",g,[s("zhoupeng20188"),a(t)]),s("，这里很复杂，因为涉及到子流程获取下一流程问题以及一些未知问题（对bpmn使用还少），所以这里只能做到暂时业务可以获取，短时间内很难穷举出所有case。")]),a(n,{id:"mermaid-23",code:"eJxLy8kvT85ILCpR8AniUlB4tmDns951JYnF2Z4pz+Yvfda5L6kgN09BV9cOKpWYXJJZlllS6Znyom/70/5pefkpqXB92CTBel/sn/1iYc/T/hkv2/ufdix5Nm0tUA+mIFjt85ZtTyf0PetbARR42r7ryY7uJzsaXnQ1PW/ayQUAy1ddiw=="}),b,e("p",null,[s("根据找到的所有人然后找到其部门和父亲部门，构建组织架构树，这里需要"),e("a",x,[s("树"),a(t)]),s("的算法和组合设计模式，此时更加理解算法的重要性。幸亏当时已经练习过。")]),y,w])}const J=r(h,[["render",V],["__file","nextflow.html.vue"]]);export{J as default};
