import{_ as t,V as p,W as e,Y as n,a1 as s,Z as o,a0 as c,F as i}from"./framework-e54e0297.js";const l="/assets/pending-e703f17f.png",u={},r=n("h1",{id:"套利",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#套利","aria-hidden":"true"},"#"),s(" 套利")],-1),k={href:"https://github.com/rfk1118/simple-blind-arbitrage/tree/main",target:"_blank",rel:"noopener noreferrer"},d=c(`<h2 id="启动程序" tabindex="-1"><a class="header-anchor" href="#启动程序" aria-hidden="true">#</a> 启动程序</h2><p>启动程序主要包含三个维度链下代码：</p><ul><li>监听者</li><li>池子查询</li><li>套利绑定代码</li></ul><h2 id="全局绑定三者关系" tabindex="-1"><a class="header-anchor" href="#全局绑定三者关系" aria-hidden="true">#</a> 全局绑定三者关系</h2><p>这一段也叫上帝代码。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 解析数据</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;New transaction with hash:&quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span>hash<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 如果没有数据</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>logs <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Loop through all the logs in the transaction</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Transaction has logs, parsing them&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> data<span class="token punctuation">.</span>logs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>logs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 判断是否是swap主题</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>logs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>topics<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!=</span> config<span class="token punctuation">.</span>syncTopic<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">continue</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token comment">// Skip if it isn&#39;t a sync event</span>
  <span class="token comment">// 获取第一个交易池子</span>
  <span class="token keyword">const</span> firstPair <span class="token operator">=</span> data<span class="token punctuation">.</span>logs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>address<span class="token punctuation">;</span> <span class="token comment">// Get the address of the first pair, which is the address the logs are coming from</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
    <span class="token string">&quot;Transaction trading on Uniswap v2 pool detected! Pool address:&quot;</span><span class="token punctuation">,</span>
    firstPair
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 根据第一个pair判断是否存在池子</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>token0<span class="token punctuation">,</span> token1<span class="token punctuation">,</span> factoryToCheck<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> poolManager<span class="token punctuation">.</span><span class="token function">checkPool</span><span class="token punctuation">(</span>
    firstPair
  <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Get the pool and the other factory we need to check</span>
  <span class="token comment">// 未找到池子</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>token0 <span class="token operator">==</span> <span class="token boolean">false</span> <span class="token operator">||</span> token1 <span class="token operator">==</span> <span class="token boolean">false</span> <span class="token operator">||</span> factoryToCheck <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token comment">// These are false if the pool does not have a WETH pair</span>

  <span class="token comment">// 获取到第二个池子</span>
  <span class="token keyword">const</span> secondPair <span class="token operator">=</span> <span class="token keyword">await</span> poolManager<span class="token punctuation">.</span><span class="token function">checkFactory</span><span class="token punctuation">(</span>
    factoryToCheck<span class="token punctuation">,</span>
    token0<span class="token punctuation">,</span>
    token1
  <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Check if the other factory has the pool too</span>
  <span class="token comment">// 没有套利的池子</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>secondPair <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token comment">// If it doesn&#39;t, stop here</span>

  <span class="token comment">// 进行套利</span>
  <span class="token keyword">await</span> bundleExecutor<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>firstPair<span class="token punctuation">,</span> secondPair<span class="token punctuation">,</span> data<span class="token punctuation">.</span>hash<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Execute the bundle if we&#39;ve made it this far</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="监听者" tabindex="-1"><a class="header-anchor" href="#监听者" aria-hidden="true">#</a> 监听者</h2><p>主要为<code>MevShareNode</code>，这里也就是观察者设计模式，需要注意的是需要监听池子<code>pending数据</code>，核心代码如下，创建观察者， <img src="`+l+`" alt="An image"></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    MevShareNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EventSource</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>mainnetMevShareNode<span class="token punctuation">)</span>
    <span class="token comment">// 有事件发生</span>
    MevShareNode<span class="token punctuation">.</span><span class="token function-variable function">onmessage</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    MevShareNode<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// Handle the error</span>
        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="池子查询" tabindex="-1"><a class="header-anchor" href="#池子查询" aria-hidden="true">#</a> 池子查询</h2><p>这里主要用的uniswap和Sushi进行套利。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>
<span class="token keyword">class</span> <span class="token class-name">PoolManager</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">_provider<span class="token punctuation">,</span> _network</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>provider <span class="token operator">=</span> _provider
        <span class="token comment">// 根据网络拿不同的地址</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>_network <span class="token operator">==</span> <span class="token string">&#39;mainnet&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>UniswapFactoryAddress <span class="token operator">=</span> config<span class="token punctuation">.</span>mainnetUniswapFactoryAddress
            <span class="token keyword">this</span><span class="token punctuation">.</span>SushiFactoryAddress <span class="token operator">=</span> config<span class="token punctuation">.</span>mainnetSushiFactoryAddress
            <span class="token keyword">this</span><span class="token punctuation">.</span>WETHAddress <span class="token operator">=</span> config<span class="token punctuation">.</span>mainnetWETHAddress
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>_network <span class="token operator">==</span> <span class="token string">&#39;goerli&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>UniswapFactoryAddress <span class="token operator">=</span> config<span class="token punctuation">.</span>goerliUniswapFactoryAddress
            <span class="token keyword">this</span><span class="token punctuation">.</span>SushiFactoryAddress <span class="token operator">=</span> config<span class="token punctuation">.</span>goerliSushiFactoryAddress
            <span class="token keyword">this</span><span class="token punctuation">.</span>WETHAddress <span class="token operator">=</span> config<span class="token punctuation">.</span>goerliWETHAddress
        <span class="token punctuation">}</span>

        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;PoolManager initialized for network:&quot;</span><span class="token punctuation">,</span> _network<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">async</span> <span class="token function">checkPool</span><span class="token punctuation">(</span><span class="token parameter">_address</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Create an ethers contract object for the pool</span>
        <span class="token comment">// 根据池子地址链接到合约</span>
        <span class="token keyword">const</span> poolContract <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ethers<span class="token punctuation">.</span>Contract</span><span class="token punctuation">(</span>_address<span class="token punctuation">,</span> poolABI<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>provider<span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Pool contract created, getting tokens&quot;</span><span class="token punctuation">)</span>
        <span class="token comment">// 拿到两个代币的数量</span>
        <span class="token keyword">const</span> token0 <span class="token operator">=</span> <span class="token keyword">await</span> poolContract<span class="token punctuation">.</span><span class="token function">token0</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">const</span> token1 <span class="token operator">=</span> <span class="token keyword">await</span> poolContract<span class="token punctuation">.</span><span class="token function">token1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Token0:&quot;</span><span class="token punctuation">,</span> token0<span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Token1:&quot;</span><span class="token punctuation">,</span> token1<span class="token punctuation">)</span>

        <span class="token comment">// 找到属于那个swap</span>
        <span class="token keyword">const</span> factory <span class="token operator">=</span> <span class="token keyword">await</span> poolContract<span class="token punctuation">.</span><span class="token function">factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Factory:&quot;</span><span class="token punctuation">,</span> factory<span class="token punctuation">)</span>
        <span class="token comment">// 不是eth为本位的跳过</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>token0 <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>WETHAddress <span class="token operator">||</span> token1 <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>WETHAddress<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 这里的返回很有意思，因为后续需要另外一个工厂查找池子</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Pool is WETH pair&quot;</span><span class="token punctuation">)</span>
            <span class="token comment">// 如果为uniswap的话返回sui</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>factory <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>UniswapFactoryAddress<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Pool is Uniswap v2&quot;</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token punctuation">[</span>token0<span class="token punctuation">,</span> token1<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>SushiFactoryAddress<span class="token punctuation">]</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// 如果为sui的话返回uniswap</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Pool is Sushiswap&quot;</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token punctuation">[</span>token0<span class="token punctuation">,</span> token1<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>UniswapFactoryAddress<span class="token punctuation">]</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Pool is not WETH pair, WETH address is:&quot;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>WETHAddress<span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">async</span> <span class="token function">checkFactory</span> <span class="token punctuation">(</span><span class="token parameter">_factoryAddress<span class="token punctuation">,</span> _token0<span class="token punctuation">,</span> _token1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Create an ethers contract object for the factory</span>
        <span class="token comment">// 创建工厂</span>
        <span class="token keyword">const</span> factoryContract <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ethers<span class="token punctuation">.</span>Contract</span><span class="token punctuation">(</span>_factoryAddress<span class="token punctuation">,</span> factoryABI<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>provider<span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Checking alternative factor for pair&quot;</span><span class="token punctuation">)</span>
        <span class="token comment">// 根据代币对查找池子</span>

        <span class="token keyword">const</span> pair <span class="token operator">=</span> <span class="token keyword">await</span> factoryContract<span class="token punctuation">.</span><span class="token function">getPair</span><span class="token punctuation">(</span>_token0<span class="token punctuation">,</span> _token1<span class="token punctuation">)</span>
        <span class="token comment">// 未找到池子</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>pair <span class="token operator">==</span> <span class="token string">&quot;0x0000000000000000000000000000000000000000&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Pair does not exist on alternative factory, returning&quot;</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
           <span class="token comment">// 返回池子</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Alternate pair exists! Pair address:&quot;</span><span class="token punctuation">,</span> pair<span class="token punctuation">)</span>
            <span class="token keyword">return</span> pair
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> PoolManager
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="套利绑定代码" tabindex="-1"><a class="header-anchor" href="#套利绑定代码" aria-hidden="true">#</a> 套利绑定代码</h2><p>主要查看buildBundles方法</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>
<span class="token keyword">class</span> <span class="token class-name">BundleExecutor</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">_signer<span class="token punctuation">,</span> _flashbotsBundleProvider<span class="token punctuation">,</span> _contractAddress<span class="token punctuation">,</span> _bundleAPI<span class="token punctuation">,</span> _percentageToKeep</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 钱包</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>signer <span class="token operator">=</span> _signer
        <span class="token comment">// flashbot Rpc</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>flashBotsBundleProvider <span class="token operator">=</span> _flashbotsBundleProvider
        <span class="token comment">// 套利的合约代码</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>contract <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ethers<span class="token punctuation">.</span>Contract</span><span class="token punctuation">(</span>_contractAddress<span class="token punctuation">,</span> blindBackrunJSON<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>signer<span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>connectionInfo <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">url</span><span class="token operator">:</span> _bundleAPI<span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>nextID <span class="token operator">=</span> <span class="token number">1</span>
        <span class="token comment">// 给矿工的钱</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>percentageToKeep <span class="token operator">=</span> _percentageToKeep

        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Successfully created BundleExecutor&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Executes arbitrage by sending bundles to the MEV-Share Node for a given transaction hash.
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">_firstPair</span> - The first pair&#39;s address.
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">_secondPair</span> - The second pair&#39;s address.
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">_txHash</span> - The transaction hash to execute the bundles on.
     */</span>
    <span class="token keyword">async</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token parameter">_firstPair<span class="token punctuation">,</span> _secondPair<span class="token punctuation">,</span> _txHash</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Sending bundles to MEV-Share Node for tx:&quot;</span><span class="token punctuation">,</span> _txHash<span class="token punctuation">)</span>
        <span class="token comment">// 创建tx</span>
        <span class="token keyword">const</span> <span class="token punctuation">[</span>bundleOneWithParams<span class="token punctuation">,</span> bundleTwoWithParams<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">buildBundles</span><span class="token punctuation">(</span>_firstPair<span class="token punctuation">,</span> _secondPair<span class="token punctuation">,</span> _txHash<span class="token punctuation">)</span>
        <span class="token comment">// 获取结果</span>
        <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">sendBundleToNode</span><span class="token punctuation">(</span>bundleOneWithParams<span class="token punctuation">,</span> bundleTwoWithParams<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Sends bundles to the MEV-Share Node.
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">_bundleOneWithParams</span> - The first bundle with parameters.
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">_bundleTwoWithParams</span> - The second bundle with parameters.
     */</span>
    <span class="token keyword">async</span> <span class="token function">sendBundleToNode</span><span class="token punctuation">(</span><span class="token parameter">_bundleOneWithParams<span class="token punctuation">,</span> _bundleTwoWithParams</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">sendBundle</span><span class="token punctuation">(</span>_bundleOneWithParams<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">sendBundle</span><span class="token punctuation">(</span>_bundleTwoWithParams<span class="token punctuation">)</span>
        <span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// At the moment this function isn&#39;t used at all because the MEV-Share Node doesn&#39;t support simulation against searcher bundles yet.</span>
    <span class="token keyword">async</span> <span class="token function">simBundle</span><span class="token punctuation">(</span><span class="token parameter">_bundle</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> request <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">prepareRelayRequest</span><span class="token punctuation">(</span><span class="token punctuation">[</span>_bundle<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;mev_simBundle&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span>
        <span class="token keyword">return</span> response
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Sends a bundle.
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">_bundle</span> - The bundle to sending.
     * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>Promise<span class="token punctuation">&lt;</span>Object<span class="token punctuation">&gt;</span><span class="token punctuation">}</span></span> The response from sending the bundle.
     */</span>
    <span class="token keyword">async</span> <span class="token function">sendBundle</span><span class="token punctuation">(</span><span class="token parameter">_bundle</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">const</span> request <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">prepareRelayRequest</span><span class="token punctuation">(</span><span class="token punctuation">[</span>_bundle<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;mev_sendBundle&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;response:&quot;</span><span class="token punctuation">,</span> response<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Prepares a relay request with the given method and parameters.
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span> <span class="token parameter">_params</span> - The parameters for the relay request.
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">_method</span> - The method for the relay request.
     * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> The prepared relay request.
     */</span>
    <span class="token function">prepareRelayRequest</span><span class="token punctuation">(</span><span class="token parameter">_params<span class="token punctuation">,</span> _method</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">method</span><span class="token operator">:</span> _method<span class="token punctuation">,</span>
            <span class="token literal-property property">params</span><span class="token operator">:</span> _params<span class="token punctuation">,</span>
            <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>nextID<span class="token operator">++</span><span class="token punctuation">,</span>
            <span class="token literal-property property">jsonrpc</span><span class="token operator">:</span> <span class="token string">&#39;2.0&#39;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Sends a request with the specified payload.
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">_request</span> - The request payload.
     * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>Promise<span class="token punctuation">&lt;</span>Object<span class="token punctuation">&gt;</span><span class="token punctuation">}</span></span> The response from the request.
     */</span>
    <span class="token keyword">async</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token parameter">_request</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>connectionInfo<span class="token punctuation">.</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span>
          <span class="token string-property property">&#39;X-Flashbots-Signature&#39;</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>signer<span class="token punctuation">.</span>address<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>signer<span class="token punctuation">.</span><span class="token function">signMessage</span><span class="token punctuation">(</span>ethers<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span>_request<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
        <span class="token punctuation">}</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Making request:&quot;</span><span class="token punctuation">,</span> _request<span class="token punctuation">)</span>
        <span class="token keyword">let</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> ethers<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">fetchJson</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>connectionInfo<span class="token punctuation">,</span> _request<span class="token punctuation">)</span>
        <span class="token keyword">return</span> resp
      <span class="token punctuation">}</span>

      <span class="token doc-comment comment">/**
     * Builds bundles for the given pair addresses and transaction hash.
     * <span class="token keyword">@dev</span> This function outputs two bundles, one for each potential trade direction. Only one will succeed depending on the direction of the user&#39;s trade.
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">_firstPair</span> - The first pair&#39;s address.
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">_secondPair</span> - The second pair&#39;s address.
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">_txHash</span> - The transaction hash to backrun.
     * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>Promise<span class="token punctuation">&lt;</span>Array<span class="token punctuation">&gt;</span><span class="token punctuation">}</span></span> An array containing two bundles backrunning the user&#39;s _txHash.
     */</span>
    <span class="token keyword">async</span> <span class="token function">buildBundles</span><span class="token punctuation">(</span><span class="token parameter">_firstPair<span class="token punctuation">,</span> _secondPair<span class="token punctuation">,</span> _txHash</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 获取blockNumber</span>
        <span class="token keyword">let</span> blockNumber <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>signer<span class="token punctuation">.</span>provider<span class="token punctuation">.</span><span class="token function">getBlockNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Current block number:&quot;</span><span class="token punctuation">,</span> blockNumber<span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Building bundles&quot;</span><span class="token punctuation">)</span>

        <span class="token comment">// 可以填的参数</span>
        <span class="token keyword">let</span> bundleTransactionOptions <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token comment">// gas价格</span>
            <span class="token literal-property property">gasPrice</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>signer<span class="token punctuation">.</span>provider<span class="token punctuation">.</span><span class="token function">getGasPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// This is *extremely* naive.</span>
            <span class="token comment">// 限制</span>
            <span class="token literal-property property">gasLimit</span><span class="token operator">:</span> ethers<span class="token punctuation">.</span>BigNumber<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token number">400000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// tx</span>
            <span class="token literal-property property">nonce</span><span class="token operator">:</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>signer<span class="token punctuation">.</span><span class="token function">getTransactionCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>


        <span class="token comment">// 编译合约参数，主要是第一个池子和第二个池子</span>
        <span class="token keyword">const</span> types <span class="token operator">=</span> <span class="token punctuation">[</span>
            <span class="token string">&#39;address&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;address&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;uint256&#39;</span>
        <span class="token punctuation">]</span>

        <span class="token comment">// 参数</span>
        <span class="token keyword">const</span> valuesFirstTrade <span class="token operator">=</span> <span class="token punctuation">[</span>
            _firstPair<span class="token punctuation">,</span>
            _secondPair<span class="token punctuation">,</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>percentageToKeep
        <span class="token punctuation">]</span>

        <span class="token keyword">let</span> paramsFirstTrade <span class="token operator">=</span> Web3EthAbi<span class="token punctuation">.</span><span class="token function">encodeParameters</span><span class="token punctuation">(</span>types<span class="token punctuation">,</span> valuesFirstTrade<span class="token punctuation">)</span>

        <span class="token comment">// 第一个tx</span>
        <span class="token keyword">let</span> bundleOneTransaction <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>contract<span class="token punctuation">.</span>populateTransaction<span class="token punctuation">.</span><span class="token function">makeFlashLoan</span><span class="token punctuation">(</span>
            config<span class="token punctuation">.</span>mainnetWETHAddress<span class="token punctuation">,</span>
            ethers<span class="token punctuation">.</span>BigNumber<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token operator">**</span><span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            paramsFirstTrade<span class="token punctuation">,</span>
            bundleTransactionOptions
        <span class="token punctuation">)</span>

        <span class="token keyword">let</span> bundleOne <span class="token operator">=</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span><span class="token literal-property property">hash</span><span class="token operator">:</span> _txHash<span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span><span class="token literal-property property">tx</span><span class="token operator">:</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>signer<span class="token punctuation">.</span><span class="token function">signTransaction</span><span class="token punctuation">(</span>bundleOneTransaction<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token literal-property property">canRevert</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span>

        <span class="token keyword">const</span> valuesSecondTrade <span class="token operator">=</span> <span class="token punctuation">[</span>
            _secondPair<span class="token punctuation">,</span>
            _firstPair<span class="token punctuation">,</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>percentageToKeep
        <span class="token punctuation">]</span>

        <span class="token keyword">let</span> paramsSecondTrade <span class="token operator">=</span> Web3EthAbi<span class="token punctuation">.</span><span class="token function">encodeParameters</span><span class="token punctuation">(</span>types<span class="token punctuation">,</span> valuesSecondTrade<span class="token punctuation">)</span>

        <span class="token keyword">let</span> bundleTwoTransaction <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>contract<span class="token punctuation">.</span>populateTransaction<span class="token punctuation">.</span><span class="token function">makeFlashLoan</span><span class="token punctuation">(</span>
            config<span class="token punctuation">.</span>mainnetWETHAddress<span class="token punctuation">,</span>
            ethers<span class="token punctuation">.</span>BigNumber<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token operator">**</span><span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            paramsSecondTrade<span class="token punctuation">,</span>
            bundleTransactionOptions
        <span class="token punctuation">)</span>

        <span class="token keyword">let</span> bundleTwo <span class="token operator">=</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span><span class="token literal-property property">hash</span><span class="token operator">:</span> _txHash<span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span><span class="token literal-property property">tx</span><span class="token operator">:</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>signer<span class="token punctuation">.</span><span class="token function">signTransaction</span><span class="token punctuation">(</span>bundleTwoTransaction<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token literal-property property">canRevert</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span>

        <span class="token comment">// 返回第二个tx</span>
        <span class="token keyword">const</span> bundleOneWithParams <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">bundleWithParams</span><span class="token punctuation">(</span>blockNumber <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> bundleOne<span class="token punctuation">)</span>
        <span class="token keyword">const</span> bundleTwoWithParams <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">bundleWithParams</span><span class="token punctuation">(</span>blockNumber <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> bundleTwo<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span>bundleOneWithParams<span class="token punctuation">,</span> bundleTwoWithParams<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Adds parameters to a bundle for the given block number and blocks to try.
     * <span class="token keyword">@notice</span> The version number might need to change in the future. This is the only one that works at the moment.
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">_blockNumber</span> - The block number to submit initially for.
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">_blocksToTry</span> - The number of blocks to try.
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span> <span class="token parameter">_bundle</span> - The bundle to add parameters to.
     * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> The bundle with parameters.
     */</span>
    <span class="token function">bundleWithParams</span><span class="token punctuation">(</span><span class="token parameter">_blockNumber<span class="token punctuation">,</span> _blocksToTry<span class="token punctuation">,</span> _bundle</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Submitting bundles for block:&quot;</span><span class="token punctuation">,</span> _blockNumber<span class="token punctuation">,</span> <span class="token string">&quot;through block:&quot;</span><span class="token punctuation">,</span> _blockNumber <span class="token operator">+</span> _blocksToTry<span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;hexvalue    :&quot;</span><span class="token punctuation">,</span> ethers<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">hexValue</span><span class="token punctuation">(</span>_blockNumber<span class="token punctuation">)</span><span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Other method:&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;0x&quot;</span> <span class="token operator">+</span> _blockNumber<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">version</span><span class="token operator">:</span><span class="token string">&quot;beta-1&quot;</span><span class="token punctuation">,</span> <span class="token comment">//@NOTICE: This is the only version that works at the moment.</span>
            <span class="token literal-property property">inclusion</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">block</span><span class="token operator">:</span> ethers<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">hexValue</span><span class="token punctuation">(</span>_blockNumber<span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token literal-property property">maxBlock</span><span class="token operator">:</span> ethers<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">hexValue</span><span class="token punctuation">(</span>_blockNumber <span class="token operator">+</span> _blocksToTry<span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token literal-property property">body</span><span class="token operator">:</span> _bundle<span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> BundleExecutor
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="合约代码" tabindex="-1"><a class="header-anchor" href="#合约代码" aria-hidden="true">#</a> 合约代码</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>contract BlindBackrun <span class="token keyword">is</span> BlindBackrunLogic <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token constant">IWETH</span> _wethAddress<span class="token punctuation">)</span> <span class="token function">BlindBackrunLogic</span><span class="token punctuation">(</span>_wethAddress<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>


    <span class="token comment">// 执行套利</span>
    <span class="token keyword">function</span> <span class="token function">executeArbitrage</span><span class="token punctuation">(</span>
        address firstPairAddress<span class="token punctuation">,</span>
        address secondPairAddress<span class="token punctuation">,</span>
        uint percentageToPayToCoinbase
    <span class="token punctuation">)</span> external onlyOwner <span class="token punctuation">{</span>
        <span class="token comment">// 执行套利</span>
        <span class="token function">_executeArbitrage</span><span class="token punctuation">(</span>firstPairAddress<span class="token punctuation">,</span> secondPairAddress<span class="token punctuation">,</span> percentageToPayToCoinbase<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">function</span> <span class="token function">withdrawWETHToOwner</span><span class="token punctuation">(</span><span class="token punctuation">)</span> external onlyOwner <span class="token punctuation">{</span>
        uint256 balance <span class="token operator">=</span> <span class="token constant">WETH</span><span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token constant">WETH</span><span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> balance<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">withdrawETHToOwner</span><span class="token punctuation">(</span><span class="token punctuation">)</span> external onlyOwner <span class="token punctuation">{</span>
        uint256 balance <span class="token operator">=</span> <span class="token function">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span>balance<span class="token punctuation">;</span>
        <span class="token function">payable</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span>balance<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">abstract</span> contract BlindBackrunLogic <span class="token keyword">is</span> Ownable <span class="token punctuation">{</span>
    uint256 constant uniswappyFee <span class="token operator">=</span> <span class="token number">997</span><span class="token punctuation">;</span>

    <span class="token comment">// 构建的时候设置weth地址</span>
    <span class="token constant">IWETH</span> <span class="token keyword">public</span> immutable <span class="token constant">WETH</span><span class="token punctuation">;</span>

    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token constant">IWETH</span> _wethAddress<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token constant">WETH</span> <span class="token operator">=</span> _wethAddress<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">_executeArbitrage</span><span class="token punctuation">(</span>
        address firstPairAddress<span class="token punctuation">,</span>
        address secondPairAddress<span class="token punctuation">,</span>
        uint percentageToPayToCoinbase
    <span class="token punctuation">)</span> internal <span class="token punctuation">{</span>
        <span class="token comment">// 记录当前余额</span>
        uint256 balanceBefore <span class="token operator">=</span> <span class="token constant">WETH</span><span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Starting balance  : %s&quot;</span><span class="token punctuation">,</span> balanceBefore<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 根据池子获取代币信息</span>
        IUniswapV2Pair firstPair <span class="token operator">=</span> <span class="token function">IUniswapV2Pair</span><span class="token punctuation">(</span>firstPairAddress<span class="token punctuation">)</span><span class="token punctuation">;</span>
        IUniswapV2Pair secondPair <span class="token operator">=</span> <span class="token function">IUniswapV2Pair</span><span class="token punctuation">(</span>secondPairAddress<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\\n--------- PAIR DATA ---------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 转换成结构体</span>
        IPairReserves<span class="token punctuation">.</span>PairReserves memory firstPairData <span class="token operator">=</span> <span class="token function">getPairData</span><span class="token punctuation">(</span>firstPair<span class="token punctuation">)</span><span class="token punctuation">;</span>
        IPairReserves<span class="token punctuation">.</span>PairReserves memory secondPairData <span class="token operator">=</span> <span class="token function">getPairData</span><span class="token punctuation">(</span>secondPair<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\\n--------- PRICES ---------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;firstPair price   : %s&quot;</span><span class="token punctuation">,</span> firstPairData<span class="token punctuation">.</span>price<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;secondPair price  : %s&quot;</span><span class="token punctuation">,</span> secondPairData<span class="token punctuation">.</span>price<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 获取需要借贷多少</span>
        uint256 amountIn <span class="token operator">=</span> <span class="token function">getAmountIn</span><span class="token punctuation">(</span>firstPairData<span class="token punctuation">,</span> secondPairData<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\\n--------- TRADE AMOUNTS ---------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;amountIn          : %s&quot;</span><span class="token punctuation">,</span> amountIn<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 传输给第一个池子</span>
        <span class="token constant">WETH</span><span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span>firstPairAddress<span class="token punctuation">,</span> amountIn<span class="token punctuation">)</span><span class="token punctuation">;</span>

        uint256 firstPairAmountOut<span class="token punctuation">;</span>
        uint256 finalAmountOut<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>firstPairData<span class="token punctuation">.</span>isWETHZero <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// 计算出可以换出多少</span>
            firstPairAmountOut <span class="token operator">=</span> <span class="token function">getAmountOut</span><span class="token punctuation">(</span>amountIn<span class="token punctuation">,</span> firstPairData<span class="token punctuation">.</span>reserve0<span class="token punctuation">,</span> firstPairData<span class="token punctuation">.</span>reserve1<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 计算出第二个池子可以换出多少</span>
            finalAmountOut <span class="token operator">=</span> <span class="token function">getAmountOut</span><span class="token punctuation">(</span>firstPairAmountOut<span class="token punctuation">,</span> secondPairData<span class="token punctuation">.</span>reserve1<span class="token punctuation">,</span> secondPairData<span class="token punctuation">.</span>reserve0<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;firstPairAmountOut: %s&quot;</span><span class="token punctuation">,</span> firstPairAmountOut<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;finalAmountOut    : %s&quot;</span><span class="token punctuation">,</span> finalAmountOut<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;arb profit        : %s&quot;</span><span class="token punctuation">,</span> finalAmountOut <span class="token operator">-</span> amountIn<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\\n--------- TRADING ---------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 置换成代币</span>
            firstPair<span class="token punctuation">.</span><span class="token function">swap</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> firstPairAmountOut<span class="token punctuation">,</span> secondPairAddress<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;firstPair swap done&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 置换成weth</span>
            secondPair<span class="token punctuation">.</span><span class="token function">swap</span><span class="token punctuation">(</span>finalAmountOut<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;secondPair swap done&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            firstPairAmountOut <span class="token operator">=</span> <span class="token function">getAmountOut</span><span class="token punctuation">(</span>amountIn<span class="token punctuation">,</span> firstPairData<span class="token punctuation">.</span>reserve1<span class="token punctuation">,</span> firstPairData<span class="token punctuation">.</span>reserve0<span class="token punctuation">)</span><span class="token punctuation">;</span>
            finalAmountOut <span class="token operator">=</span> <span class="token function">getAmountOut</span><span class="token punctuation">(</span>firstPairAmountOut<span class="token punctuation">,</span> secondPairData<span class="token punctuation">.</span>reserve0<span class="token punctuation">,</span> secondPairData<span class="token punctuation">.</span>reserve1<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\\n--------- TRADE AMOUNTS ---------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;amountIn          : %s&quot;</span><span class="token punctuation">,</span> amountIn<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;firstPairAmountOut: %s&quot;</span><span class="token punctuation">,</span> firstPairAmountOut<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;finalAmountOut    : %s&quot;</span><span class="token punctuation">,</span> finalAmountOut<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;arb profit        : %s&quot;</span><span class="token punctuation">,</span> finalAmountOut <span class="token operator">-</span> amountIn<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\\n--------- TRADING ---------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            firstPair<span class="token punctuation">.</span><span class="token function">swap</span><span class="token punctuation">(</span>firstPairAmountOut<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> secondPairAddress<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;firstPair swap done&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            secondPair<span class="token punctuation">.</span><span class="token function">swap</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> finalAmountOut<span class="token punctuation">,</span> <span class="token function">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;secondPair swap done&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 查看余额</span>
        uint256 balanceAfter <span class="token operator">=</span> <span class="token constant">WETH</span><span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">require</span><span class="token punctuation">(</span>balanceAfter <span class="token operator">&gt;</span> balanceBefore<span class="token punctuation">,</span> <span class="token string">&quot;Arbitrage failed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\\n--------- SUCCESS ---------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Ending balance    : %s&quot;</span><span class="token punctuation">,</span> balanceAfter<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 给矿工比例</span>
        uint profit <span class="token operator">=</span> balanceAfter <span class="token operator">-</span> balanceBefore<span class="token punctuation">;</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Profit            : %s&quot;</span><span class="token punctuation">,</span> profit<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 提款</span>
        <span class="token constant">WETH</span><span class="token punctuation">.</span><span class="token function">withdraw</span><span class="token punctuation">(</span>profit<span class="token punctuation">)</span><span class="token punctuation">;</span>
        uint profitToCoinbase <span class="token operator">=</span> profit <span class="token operator">*</span> percentageToPayToCoinbase <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">;</span>
        uint profitToCaller <span class="token operator">=</span> profit <span class="token operator">-</span> profitToCoinbase<span class="token punctuation">;</span>
        <span class="token comment">// 给矿工的钱</span>
        block<span class="token punctuation">.</span>coinbase<span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span>profitToCoinbase<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">payable</span><span class="token punctuation">(</span>tx<span class="token punctuation">.</span>origin<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span>profitToCaller<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 根据两个池子算出要借多少钱</span>
    <span class="token keyword">function</span> <span class="token function">getAmountIn</span><span class="token punctuation">(</span>
        IPairReserves<span class="token punctuation">.</span>PairReserves memory firstPairData<span class="token punctuation">,</span>
        IPairReserves<span class="token punctuation">.</span>PairReserves memory secondPairData
    <span class="token punctuation">)</span> <span class="token keyword">public</span> view <span class="token function">returns</span> <span class="token punctuation">(</span>uint256<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 算法，需要进一步研究</span>
        uint256 numerator <span class="token operator">=</span> <span class="token function">getNumerator</span><span class="token punctuation">(</span>firstPairData<span class="token punctuation">,</span> secondPairData<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;numerator: %s&quot;</span><span class="token punctuation">,</span> numerator<span class="token punctuation">)</span><span class="token punctuation">;</span>
        uint256 denominator <span class="token operator">=</span> <span class="token function">getDenominator</span><span class="token punctuation">(</span>firstPairData<span class="token punctuation">,</span> secondPairData<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;denominator: %s&quot;</span><span class="token punctuation">,</span> denominator<span class="token punctuation">)</span><span class="token punctuation">;</span>
        uint256 amountIn <span class="token operator">=</span>
            numerator
            <span class="token operator">*</span> <span class="token number">1000</span>
            <span class="token operator">/</span> denominator<span class="token punctuation">;</span>

        <span class="token keyword">return</span> amountIn<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 算法，需要进一步研究</span>
    <span class="token keyword">function</span> <span class="token function">getNumerator</span><span class="token punctuation">(</span>
        IPairReserves<span class="token punctuation">.</span>PairReserves memory firstPairData<span class="token punctuation">,</span>
        IPairReserves<span class="token punctuation">.</span>PairReserves memory secondPairData
    <span class="token punctuation">)</span> <span class="token keyword">public</span> view <span class="token function">returns</span> <span class="token punctuation">(</span>uint256<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>firstPairData<span class="token punctuation">.</span>isWETHZero <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            uint presqrt <span class="token operator">=</span> uniswappyFee
                    <span class="token operator">*</span> uniswappyFee
                    <span class="token operator">*</span> firstPairData<span class="token punctuation">.</span>reserve1
                    <span class="token operator">*</span> secondPairData<span class="token punctuation">.</span>reserve0
                    <span class="token operator">/</span> secondPairData<span class="token punctuation">.</span>reserve1
                    <span class="token operator">/</span> firstPairData<span class="token punctuation">.</span>reserve0<span class="token punctuation">;</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;presqrt: %s&quot;</span><span class="token punctuation">,</span> presqrt<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;sqrt(presqrt): %s&quot;</span><span class="token punctuation">,</span> <span class="token function">sqrt</span><span class="token punctuation">(</span>presqrt<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            uint256 numerator <span class="token operator">=</span>
            <span class="token punctuation">(</span>
                <span class="token function">sqrt</span><span class="token punctuation">(</span>presqrt<span class="token punctuation">)</span>
                <span class="token operator">-</span> <span class="token number">1e3</span>
            <span class="token punctuation">)</span>
            <span class="token operator">*</span> secondPairData<span class="token punctuation">.</span>reserve1
            <span class="token operator">*</span> firstPairData<span class="token punctuation">.</span>reserve0<span class="token punctuation">;</span>

            <span class="token keyword">return</span> numerator<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            uint presqrt <span class="token operator">=</span> uniswappyFee
                <span class="token operator">*</span> uniswappyFee
                <span class="token operator">*</span> firstPairData<span class="token punctuation">.</span>reserve0
                <span class="token operator">*</span> secondPairData<span class="token punctuation">.</span>reserve1
                <span class="token operator">/</span> secondPairData<span class="token punctuation">.</span>reserve0
                <span class="token operator">/</span> firstPairData<span class="token punctuation">.</span>reserve1<span class="token punctuation">;</span>


            uint256 numerator <span class="token operator">=</span>
            <span class="token punctuation">(</span>
                <span class="token function">sqrt</span><span class="token punctuation">(</span>presqrt<span class="token punctuation">)</span>
                <span class="token operator">-</span> <span class="token number">1e3</span>
            <span class="token punctuation">)</span>
            <span class="token operator">*</span> secondPairData<span class="token punctuation">.</span>reserve0
            <span class="token operator">*</span> firstPairData<span class="token punctuation">.</span>reserve1<span class="token punctuation">;</span>

            <span class="token keyword">return</span> numerator<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 算法，需要进一步研究</span>
    <span class="token keyword">function</span> <span class="token function">getDenominator</span><span class="token punctuation">(</span>
            IPairReserves<span class="token punctuation">.</span>PairReserves memory firstPairData<span class="token punctuation">,</span>
            IPairReserves<span class="token punctuation">.</span>PairReserves memory secondPairData
        <span class="token punctuation">)</span> <span class="token keyword">public</span> pure <span class="token function">returns</span> <span class="token punctuation">(</span>uint256<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>firstPairData<span class="token punctuation">.</span>isWETHZero <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            uint256 denominator <span class="token operator">=</span>
                <span class="token punctuation">(</span>
                    uniswappyFee
                    <span class="token operator">*</span> secondPairData<span class="token punctuation">.</span>reserve1
                    <span class="token operator">*</span> <span class="token number">1000</span>
                <span class="token punctuation">)</span>
                <span class="token operator">+</span> <span class="token punctuation">(</span>
                    uniswappyFee
                    <span class="token operator">*</span> uniswappyFee
                    <span class="token operator">*</span> firstPairData<span class="token punctuation">.</span>reserve1
                <span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> denominator<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            uint256 denominator <span class="token operator">=</span>
                <span class="token punctuation">(</span>
                    uniswappyFee
                    <span class="token operator">*</span> secondPairData<span class="token punctuation">.</span>reserve0
                    <span class="token operator">*</span> <span class="token number">1000</span>
                <span class="token punctuation">)</span>
                <span class="token operator">+</span> <span class="token punctuation">(</span>
                    uniswappyFee
                    <span class="token operator">*</span> uniswappyFee
                    <span class="token operator">*</span> firstPairData<span class="token punctuation">.</span>reserve0
                <span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> denominator<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 根据池子信息进行转换</span>
    <span class="token keyword">function</span> <span class="token function">getPairData</span><span class="token punctuation">(</span>IUniswapV2Pair pair<span class="token punctuation">)</span> <span class="token keyword">private</span> view <span class="token function">returns</span> <span class="token punctuation">(</span>IPairReserves<span class="token punctuation">.</span>PairReserves memory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">(</span>uint256 reserve0<span class="token punctuation">,</span> uint256 reserve1<span class="token punctuation">,</span> <span class="token punctuation">)</span> <span class="token operator">=</span> pair<span class="token punctuation">.</span><span class="token function">getReserves</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;pair:&quot;</span><span class="token punctuation">,</span> <span class="token function">address</span><span class="token punctuation">(</span>pair<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;reserve0:&quot;</span><span class="token punctuation">,</span>reserve0<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;reserve1:&quot;</span><span class="token punctuation">,</span> reserve1<span class="token punctuation">)</span><span class="token punctuation">;</span>

        uint256 price<span class="token punctuation">;</span>

        bool isWETHZero <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>pair<span class="token punctuation">.</span><span class="token function">token0</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">address</span><span class="token punctuation">(</span><span class="token constant">WETH</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            price <span class="token operator">=</span> reserve1 <span class="token operator">*</span> <span class="token number">1e18</span> <span class="token operator">/</span> reserve0<span class="token punctuation">;</span>
            isWETHZero <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            price <span class="token operator">=</span> reserve0 <span class="token operator">*</span> <span class="token number">1e18</span> <span class="token operator">/</span> reserve1<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> IPairReserves<span class="token punctuation">.</span><span class="token function">PairReserves</span><span class="token punctuation">(</span>reserve0<span class="token punctuation">,</span> reserve1<span class="token punctuation">,</span> price<span class="token punctuation">,</span> isWETHZero<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 功能方法</span>
    <span class="token keyword">function</span> <span class="token function">sqrt</span><span class="token punctuation">(</span>uint256 x<span class="token punctuation">)</span> <span class="token keyword">private</span> pure <span class="token function">returns</span> <span class="token punctuation">(</span>uint256<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        uint256 z <span class="token operator">=</span> <span class="token punctuation">(</span>x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        uint256 y <span class="token operator">=</span> x<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>z <span class="token operator">&lt;</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            y <span class="token operator">=</span> z<span class="token punctuation">;</span>
            z <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>x <span class="token operator">/</span> z<span class="token punctuation">)</span> <span class="token operator">+</span> z<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> y<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">function</span> <span class="token function">getAmountOut</span><span class="token punctuation">(</span>uint amountIn<span class="token punctuation">,</span>
        uint reserveIn<span class="token punctuation">,</span>
        uint reserveOut
    <span class="token punctuation">)</span> internal pure <span class="token function">returns</span> <span class="token punctuation">(</span>uint amountOut<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        uint amountInWithFee <span class="token operator">=</span> amountIn <span class="token operator">*</span> <span class="token number">997</span><span class="token punctuation">;</span>
        uint numerator <span class="token operator">=</span> amountInWithFee <span class="token operator">*</span> reserveOut<span class="token punctuation">;</span>
        uint denominator <span class="token operator">=</span> reserveIn <span class="token operator">*</span> <span class="token number">1000</span> <span class="token operator">+</span> amountInWithFee<span class="token punctuation">;</span>
        amountOut <span class="token operator">=</span> numerator <span class="token operator">/</span> denominator<span class="token punctuation">;</span>
        <span class="token keyword">return</span> amountOut<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 传输代币</span>
    <span class="token keyword">function</span> <span class="token function">call</span><span class="token punctuation">(</span>address payable _to<span class="token punctuation">,</span> uint256 _value<span class="token punctuation">,</span> bytes memory _data<span class="token punctuation">)</span> external onlyOwner <span class="token punctuation">{</span>
        <span class="token punctuation">(</span>bool success<span class="token punctuation">,</span> <span class="token punctuation">)</span> <span class="token operator">=</span> _to<span class="token punctuation">.</span>call<span class="token punctuation">{</span>value<span class="token operator">:</span> _value<span class="token punctuation">}</span><span class="token punctuation">(</span>_data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">require</span><span class="token punctuation">(</span>success<span class="token punctuation">,</span> <span class="token string">&quot;External call failed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token function">receive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> external payable <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><ol><li>三角套利？eth - A - B - eth</li><li>uniswap v2 - v3 ? v3- v3?</li><li>如何提高调用正确率，即成功后可以覆盖<code>gas</code>部分</li></ol>`,19);function v(m,b){const a=i("ExternalLinkIcon");return p(),e("div",null,[r,n("p",null,[n("a",k,[s("代码地址"),o(a)])]),d])}const y=t(u,[["render",v],["__file","arb.html.vue"]]);export{y as default};
