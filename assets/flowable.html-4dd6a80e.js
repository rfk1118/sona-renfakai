import{_ as s,V as l,W as r,Y as e,a1 as a,Z as o,a0 as d,F as t}from"./framework-1bd9c91b.js";const c="/assets/docker-flowable-start-0ed722c4.jpg",i="/assets/flowable-desgin-ca187de8.jpg",h="/assets/Camunda-desgin-932b2741.png",p="/assets/tony2y-desgin-dc5c43d0.png",m={},u=d('<h1 id="工作流设计" tabindex="-1"><a class="header-anchor" href="#工作流设计" aria-hidden="true">#</a> 工作流设计</h1><p>工作中工作流设计主要分为两种情况：</p><ol><li>编写文档评审使用；</li><li>画出bpmn导入程序使用。</li></ol><h2 id="文档使用" tabindex="-1"><a class="header-anchor" href="#文档使用" aria-hidden="true">#</a> 文档使用</h2><p>推荐使用<code>Typora + mermaid</code>进行编写，编写比较快，无需使用外部应用。</p><h2 id="编写bpmn文件" tabindex="-1"><a class="header-anchor" href="#编写bpmn文件" aria-hidden="true">#</a> 编写bpmn文件</h2><p>编写<code>bpmn</code>使用<code>docker/Camunda</code>要解决的问题是流程固定，流程启动时自动部署，可以修改的工作流<code>bpmn xml</code>放到源码下，不需要前端引入<code>bpmn</code>前端插件。</p><h3 id="docker" tabindex="-1"><a class="header-anchor" href="#docker" aria-hidden="true">#</a> docker</h3>',8),_=e("code",null,"dockhub",-1),b={href:"https://hub.docker.com/r/flowable/all-in-one",target:"_blank",rel:"noopener noreferrer"},f=d(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull flowable/all-in-one
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>启动docker</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run flowable/all-in-one
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>启动后docker显示如所示</p><p><img src="`+c+'" alt="An image"></p><ol start="3"><li>查看网站进行编写<code>bpmn</code></li></ol><p><img src="'+i+'" alt="An image"></p><h3 id="camunda" tabindex="-1"><a class="header-anchor" href="#camunda" aria-hidden="true">#</a> Camunda</h3>',8),g={href:"https://camunda.com/download/modeler/",target:"_blank",rel:"noopener noreferrer"},k=e("code",null,"bpmn",-1),v=e("p",null,[e("img",{src:h,alt:"An image"})],-1),x=e("h3",{id:"开源项目",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#开源项目","aria-hidden":"true"},"#"),a(" 开源项目")],-1),w=e("code",null,"github",-1),y={href:"https://github.com/tony2y/RuoYi-flowable",target:"_blank",rel:"noopener noreferrer"},C=e("p",null,[e("img",{src:p,alt:"An image"})],-1);function V(A,N){const n=t("ExternalLinkIcon");return l(),r("div",null,[u,e("ol",null,[e("li",null,[_,a("上找到"),e("a",b,[a("flowable/all-in-one"),o(n)])])]),f,e("p",null,[a("下载"),e("a",g,[a("Camunda download"),o(n)]),a("，打开软件就能设计出工作流，支持"),k,a("下载。")]),v,x,e("p",null,[a("在"),w,a("上找到了一个"),e("a",y,[a("开源框架 tony2y RuoYi-flowable"),o(n)]),a("，已经编写了工作流前端和后端代码，可以直接设计。")]),C])}const E=s(m,[["render",V],["__file","flowable.html.vue"]]);export{E as default};
