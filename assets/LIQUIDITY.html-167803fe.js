import{_ as p,V as o,W as c,Y as n,a1 as s,Z as t,a0 as e,F as i}from"./framework-e54e0297.js";const u="/assets/LIQUIDITY-8cbb21a1.png",l={},r=n("h1",{id:"流动性获取",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#流动性获取","aria-hidden":"true"},"#"),s(" 流动性获取")],-1),d={href:"https://uniswap.org/whitepaper.pdf",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/Uniswap/v2-sdk/tree/main",target:"_blank",rel:"noopener noreferrer"},v={href:"https://dexscreener.com/ethereum/0xb4e16d0168e52d35cacd2c6185b44281ec28c9dc",target:"_blank",rel:"noopener noreferrer"},m=n("ul",null,[n("li",null,"usdc = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"),n("li",null,"weth = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2")],-1),b=e(`<h2 id="linea" tabindex="-1"><a class="header-anchor" href="#linea" aria-hidden="true">#</a> linea</h2><p><code>linea</code>使用<code>pancakeswap</code>合约置换<code>eth -&gt; usdc</code>，3u eth置换出 0.1的代币，尴尬，当时就在想池子流动性太差了，然后就想如何拿到流动性，进行判断，如何低于某个值就不进行swap。</p><h2 id="abi" tabindex="-1"><a class="header-anchor" href="#abi" aria-hidden="true">#</a> abi</h2><p>uniswap v2 转换成人读的abi，留作备份，后续不在转换。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token punctuation">[</span>
  <span class="token string">&#39;constructor()&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;event Approval(address indexed owner, address indexed spender, uint256 value)&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;event Burn(address indexed sender, uint256 amount0, uint256 amount1, address indexed to)&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;event Mint(address indexed sender, uint256 amount0, uint256 amount1)&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;event Swap(address indexed sender, uint256 amount0In, uint256 amount1In, uint256 amount0Out, uint256 amount1Out, address indexed to)&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;event Sync(uint112 reserve0, uint112 reserve1)&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;event Transfer(address indexed from, address indexed to, uint256 value)&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;function DOMAIN_SEPARATOR() view returns (bytes32)&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;function MINIMUM_LIQUIDITY() view returns (uint256)&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;function PERMIT_TYPEHASH() view returns (bytes32)&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;function allowance(address, address) view returns (uint256)&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;function approve(address spender, uint256 value) returns (bool)&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;function balanceOf(address) view returns (uint256)&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;function burn(address to) returns (uint256 amount0, uint256 amount1)&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;function decimals() view returns (uint8)&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;function factory() view returns (address)&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;function getReserves() view returns (uint112 _reserve0, uint112 _reserve1, uint32 _blockTimestampLast)&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;function initialize(address _token0, address _token1)&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;function kLast() view returns (uint256)&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;function mint(address to) returns (uint256 liquidity)&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;function name() view returns (string)&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;function nonces(address) view returns (uint256)&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;function price0CumulativeLast() view returns (uint256)&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;function price1CumulativeLast() view returns (uint256)&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;function skim(address to)&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;function swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data)&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;function symbol() view returns (string)&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;function sync()&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;function token0() view returns (address)&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;function token1() view returns (address)&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;function totalSupply() view returns (uint256)&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;function transfer(address to, uint256 value) returns (bool)&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;function transferFrom(address from, address to, uint256 value) returns (bool)&#39;</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ethers <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;hardhat&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// rpc</span>
<span class="token keyword">const</span> provider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ethers</span><span class="token punctuation">.</span>providers<span class="token punctuation">.</span><span class="token function">JsonRpcProvider</span><span class="token punctuation">(</span>
  <span class="token string">&quot;https://singapore.rpc.blxrbdn.com&quot;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> weth <span class="token operator">=</span> <span class="token string">&quot;0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// 合约abi</span>
<span class="token keyword">const</span> pairAbi <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token string">&quot;function getReserves() view returns (uint112 _reserve0, uint112 _reserve1, uint32 _blockTimestampLast)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;function kLast() view returns (uint256)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;function price0CumulativeLast() view returns (uint256)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;function price1CumulativeLast() view returns (uint256)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;function token0() view returns (address)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;function token1() view returns (address)&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// pair地址</span>
<span class="token keyword">const</span> demoPairAddress <span class="token operator">=</span> <span class="token string">&quot;0xB4e16d0168e52d35CaCD2c6185b44281Ec28C9Dc&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 创建合同</span>
  <span class="token keyword">const</span> pair <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ethers</span><span class="token punctuation">.</span><span class="token function">Contract</span><span class="token punctuation">(</span>demoPairAddress<span class="token punctuation">,</span> pairAbi<span class="token punctuation">,</span> provider<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 拿到返回值</span>
  <span class="token keyword">const</span> r <span class="token operator">=</span> <span class="token keyword">await</span> pair<span class="token punctuation">.</span><span class="token function">getReserves</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> token0 <span class="token operator">=</span> <span class="token keyword">await</span> pair<span class="token punctuation">.</span><span class="token function">token0</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> token1 <span class="token operator">=</span> <span class="token keyword">await</span> pair<span class="token punctuation">.</span><span class="token function">token1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> liq <span class="token operator">=</span>
    weth<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> token0<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token operator">?</span> ethers<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">formatEther</span><span class="token punctuation">(</span>r<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token operator">:</span> ethers<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">formatEther</span><span class="token punctuation">(</span>r<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>liq<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;token0:&quot;</span> <span class="token operator">+</span> token0<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;token1:&quot;</span> <span class="token operator">+</span> token1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  process<span class="token punctuation">.</span>exitCode <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="结果" tabindex="-1"><a class="header-anchor" href="#结果" aria-hidden="true">#</a> 结果</h2><p>上面代码打印结果如下：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token punctuation">[</span>
  BigNumber <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token string">&quot;27206009152714&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  BigNumber <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token string">&quot;17556707497074736923308&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token number">1697117411</span><span class="token punctuation">,</span>
  _reserve0<span class="token operator">:</span> BigNumber <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token string">&quot;27206009152714&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  _reserve1<span class="token operator">:</span> BigNumber <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token string">&quot;17556707497074736923308&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  _blockTimestampLast<span class="token operator">:</span> <span class="token number">1697117411</span>
<span class="token punctuation">]</span>
<span class="token number">17556.707497074736923308</span>
token0<span class="token operator">:</span><span class="token number">0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48</span>
token1<span class="token operator">:</span><span class="token number">0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>符号单位<code>usdc</code>= <code>6 uint8</code>，<code>weth</code>= <code>18 uint8</code>，</p><p>按照符号进行处理展示:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token punctuation">[</span>
  BigNumber <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token string">&quot;27206009_152714&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  BigNumber <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token string">&quot;17556_707497074736923308&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token number">1697117411</span><span class="token punctuation">,</span>
  _reserve0<span class="token operator">:</span> BigNumber <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token string">&quot;27206009152714&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  _reserve1<span class="token operator">:</span> BigNumber <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token string">&quot;17556707497074736923308&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  _blockTimestampLast<span class="token operator">:</span> <span class="token number">1697117411</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>计算对应 = 54M(17556.0 * 1543 + 27206009.152714) = 54M，结果如图所示:</p><div style="text-align:center;"><p><img src="`+u+`" alt="An image"></p></div><h2 id="价格计算" tabindex="-1"><a class="header-anchor" href="#价格计算" aria-hidden="true">#</a> 价格计算</h2><p>在计算价格的时候，因为符号有位数区别，在看代码时候也是看到了以下计算方法。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">getPairData</span><span class="token punctuation">(</span>IUniswapV2Pair pair<span class="token punctuation">)</span> <span class="token keyword">private</span> view <span class="token function">returns</span> <span class="token punctuation">(</span>IPairReserves<span class="token punctuation">.</span>PairReserves memory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span>uint256 reserve0<span class="token punctuation">,</span> uint256 reserve1<span class="token punctuation">,</span> <span class="token punctuation">)</span> <span class="token operator">=</span> pair<span class="token punctuation">.</span><span class="token function">getReserves</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;pair:&quot;</span><span class="token punctuation">,</span> <span class="token function">address</span><span class="token punctuation">(</span>pair<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;reserve0:&quot;</span><span class="token punctuation">,</span>reserve0<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;reserve1:&quot;</span><span class="token punctuation">,</span> reserve1<span class="token punctuation">)</span><span class="token punctuation">;</span>
  uint256 price<span class="token punctuation">;</span>
  bool isWETHZero <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>pair<span class="token punctuation">.</span><span class="token function">token0</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">address</span><span class="token punctuation">(</span><span class="token constant">WETH</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      price <span class="token operator">=</span> reserve1 <span class="token operator">*</span> <span class="token number">1e18</span> <span class="token operator">/</span> reserve0<span class="token punctuation">;</span>
      isWETHZero <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      price <span class="token operator">=</span> reserve0 <span class="token operator">*</span> <span class="token number">1e18</span> <span class="token operator">/</span> reserve1<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> IPairReserves<span class="token punctuation">.</span><span class="token function">PairReserves</span><span class="token punctuation">(</span>reserve0<span class="token punctuation">,</span> reserve1<span class="token punctuation">,</span> price<span class="token punctuation">,</span> isWETHZero<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这里看到<code>* 1e18</code>还挺奇怪，问下Gpt，答案如下：</p><div class="hint-container tip"><p class="hint-container-title">Gpt答案</p><p>在以太坊和大多数以太坊智能合约中，代币的价格通常以固定的小数位数来表示。这个小数位数通常是18，也就是说，代币的价格以 10^18（1后跟18个零）为单位。这是因为 Ethereum 使用了以 wei 为单位的最小货币单位，而 wei 是以太的最小分割单位，1 ETH 等于 10^18 wei。</p><p>当您从 Uniswap 池子中获取储备数据时，这些数据也是以 wei 为单位的整数，因此，为了将其转换为代币的价格（通常以 ETH 为基准），您需要将其除以 10^18。</p><p>例如，如果 reserve0 和 reserve1 分别表示 Uniswap 池子中两种代币的储备数量，它们是以 wei 为单位的整数。为了计算代币0的价格，您需要执行以下操作：</p><p>代币0价格 = (uint256(reserve1) <em>1e18) / uint256(reserve0); 这个公式将 wei 转换为 ETH 单位的价格。所以，</em> 1e18 操作是将 wei 转换为 ETH 单位，以便正确表示代币的价格。</p><p>注意：如果您的代币价格的小数位数不是18，您需要相应地调整除以的数值，以匹配您代币价格的小数位数。</p></div><p>其实在正常情况下直接使用<code>代币/eth</code>即可算出算出一个代币的价格，由于精度不一样，补齐计算，加入以下代码，进行打印。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> price <span class="token operator">=</span>
    weth<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> token0<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token operator">?</span> <span class="token punctuation">(</span>r<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">1e12</span><span class="token punctuation">)</span> <span class="token operator">/</span> r<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
      <span class="token operator">:</span> <span class="token punctuation">(</span>r<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">1e12</span><span class="token punctuation">)</span> <span class="token operator">/</span> r<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;chain price:&quot;</span> <span class="token operator">+</span> price<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打印结果如下：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>chain price<span class="token operator">:</span><span class="token number">1527.340343787259</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,24),g={href:"https://github.com/wxtsky/MyWalletScan/blob/main/src/utils/ether/getEthPrice.js",target:"_blank",rel:"noopener noreferrer"},f=e(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&quot;axios&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">getEthPrice</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> ethResponse <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;https://mainnet.era.zksync.io/&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
            id<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
            jsonrpc<span class="token operator">:</span> <span class="token string">&#39;2.0&#39;</span><span class="token punctuation">,</span>
            method<span class="token operator">:</span> <span class="token string">&#39;zks_getTokenPrice&#39;</span><span class="token punctuation">,</span>
            params<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;0x0000000000000000000000000000000000000000&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> ethResponse<span class="token punctuation">.</span>data<span class="token punctuation">.</span>result
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token number">0</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> getEthPrice
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打印结果如下：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token punctuation">[</span>
  BigNumber <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token string">&quot;27010665689573&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  BigNumber <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token string">&quot;17684771962872525054468&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token number">1697132063</span><span class="token punctuation">,</span>
  _reserve0<span class="token operator">:</span> BigNumber <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token string">&quot;27010665689573&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  _reserve1<span class="token operator">:</span> BigNumber <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token string">&quot;17684771962872525054468&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  _blockTimestampLast<span class="token operator">:</span> <span class="token number">1697132063</span>
<span class="token punctuation">]</span>
<span class="token number">17684.771962872525054468</span>
chain price<span class="token operator">:</span><span class="token number">1527.340343787259</span>
fetch price<span class="token operator">:</span><span class="token number">1631.05</span>
token0<span class="token operator">:</span><span class="token number">0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48</span>
token1<span class="token operator">:</span><span class="token number">0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function h(w,y){const a=i("ExternalLinkIcon");return o(),c("div",null,[r,n("ul",null,[n("li",null,[n("a",d,[s("白皮书"),t(a)])]),n("li",null,[n("a",k,[s("sdk"),t(a)])]),n("li",null,[n("a",v,[s("weth/usdc"),t(a)]),m])]),b,n("p",null,[s("加入api查询价格代码，代码出自"),n("a",g,[s("北北钱包"),t(a)]),s("。")]),f])}const _=p(l,[["render",h],["__file","LIQUIDITY.html.vue"]]);export{_ as default};
