const e=JSON.parse('{"key":"v-46f4d068","path":"/middleware/netty/nio/channels/channel-handler.html","title":"Channel-handler","lang":"zh-CN","frontmatter":{"description":"Channel-handler handle 初始化 之前在DefaultChannelPipeline#pendingHandlerCallbackHead设置的任务，在register0#pipeline.invokeHandlerAddedIfNeeded();中要被处理了。 在callHandlerAddedForAllHandlers拿到刚才的ChannelInitializer的任务。","head":[["meta",{"property":"og:url","content":"https://renfakai.com/middleware/netty/nio/channels/channel-handler.html"}],["meta",{"property":"og:site_name","content":"天道酬勤"}],["meta",{"property":"og:title","content":"Channel-handler"}],["meta",{"property":"og:description","content":"Channel-handler handle 初始化 之前在DefaultChannelPipeline#pendingHandlerCallbackHead设置的任务，在register0#pipeline.invokeHandlerAddedIfNeeded();中要被处理了。 在callHandlerAddedForAllHandlers拿到刚才的ChannelInitializer的任务。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://renfakai.com/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-31T16:49:52.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Channel-handler"}],["meta",{"property":"article:modified_time","content":"2023-01-31T16:49:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Channel-handler\\",\\"image\\":[\\"https://renfakai.com/\\"],\\"dateModified\\":\\"2023-01-31T16:49:52.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"handle 初始化","slug":"handle-初始化","link":"#handle-初始化","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1675183792000,"updatedTime":1675183792000,"contributors":[{"name":"renfakai","email":"rfk1118@gmail.com","commits":1}]},"readingTime":{"minutes":1.74,"words":523},"filePathRelative":"middleware/netty/nio/channels/channel-handler.md","localizedDate":"2023年2月1日","excerpt":"<h1> Channel-handler</h1>\\n<h3> handle 初始化</h3>\\n<ol>\\n<li>之前在<code>DefaultChannelPipeline#pendingHandlerCallbackHead</code>设置的任务，在<code>register0#pipeline.invokeHandlerAddedIfNeeded();</code>中要被处理了。</li>\\n<li>在<code>callHandlerAddedForAllHandlers</code>拿到刚才的<code>ChannelInitializer</code>的任务。</li>\\n</ol>","copyright":{},"autoDesc":true}');export{e as data};
