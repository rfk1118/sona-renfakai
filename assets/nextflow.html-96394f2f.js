import{_ as i,V as l,W as c,X as s,Y as e,a1 as a,Z as n,a0 as d,F as o}from"./framework-e54e0297.js";const h="/assets/idea_next_tip-13fdd9c3.jpg",p="/assets/bpmn-bb664b73.png",_="/assets/group-865e97d9.png",u={},m=e("h1",{id:"权限-流程",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#权限-流程","aria-hidden":"true"},"#"),a(" 权限+流程")],-1),b=e("h2",{id:"下一流程",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#下一流程","aria-hidden":"true"},"#"),a(" 下一流程")],-1),f={href:"https://book.douban.com/subject/3296317/",target:"_blank",rel:"noopener noreferrer"},g=e("p",null,[e("img",{src:h,alt:"An image"})],-1),k=e("p",null,"工作流中有一种场景就是获取下一个流程，即根据当前页面的值动态的获取下一个页面流程，然后当前人会根据下一流程选取不同人做处理，并且流程上处理人员不一样。",-1),v={href:"https://github.com/zhoupeng20188/activitispringboot/blob/master/src/main/java/com/zp/activitispringboot/utils/ActivitiUtil.java",target:"_blank",rel:"noopener noreferrer"},x=e("h2",{id:"页面问题",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#页面问题","aria-hidden":"true"},"#"),a(" 页面问题")],-1),y={class:"hint-container tip"},w=e("p",{class:"hint-container-title"},"提示",-1),A={href:"https://camunda.com/download/modeler/",target:"_blank",rel:"noopener noreferrer"},B=d('<p><img src="'+p+'" alt="An image"></p><p>一个大的流程中，如上图所示，会有很多页面看起来差不多，如果使用一个页面控制就会导致在待办跳转后当前页面该不知道该显示什么值问题，如果使用多个页面进行处理，会出现很多重复代码，笔者处理的一个流程大概12+个页面需要局部调整，即使使用模版设计模式，在改动时依然会出现遗漏。Java 下的模版设计模式在解决这个问题就会好很多，大概是笔者 vue 功力不够。</p><h2 id="获取流转人" tabindex="-1"><a class="header-anchor" href="#获取流转人" aria-hidden="true">#</a> 获取流转人</h2><h3 id="使用工作流自带角色" tabindex="-1"><a class="header-anchor" href="#使用工作流自带角色" aria-hidden="true">#</a> 使用工作流自带角色</h3><p>工作流中配置角色，流转时查询角色，在查询需要流转的人，在使用上是没有问题的，但是在配置上会出现二次操作问题，创建角色后需要用户来流程图中配置角色，普通用户对此又不太明白。</p><p><img src="'+_+`" alt="An image"></p><h3 id="根据组织架构获取流转人" tabindex="-1"><a class="header-anchor" href="#根据组织架构获取流转人" aria-hidden="true">#</a> 根据组织架构获取流转人</h3><p>考虑到跨部门协作问题，下一节点需要流转的人可能会是其他部门的人，当时想是否从当前人向上找两级（一级是本小组）即可满足要求，这样也可以动态的获取人员。</p><h3 id="根据页面获取流转人" tabindex="-1"><a class="header-anchor" href="#根据页面获取流转人" aria-hidden="true">#</a> 根据页面获取流转人</h3><p>找到了下一工作流节点，根绝节点找到跳转路由(每一个节点都配置跳转路由供首页跳转使用)，现可以根据页面路由查找到拥有该页面的角色。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> role_id <span class="token keyword">from</span> url_permission <span class="token keyword">where</span> permission <span class="token operator">=</span> <span class="token string">&#39;页面路由&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>根据角色查找到角色下所有人。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> user_id <span class="token keyword">from</span> role_dis <span class="token keyword">where</span> role_id <span class="token operator">=</span> <span class="token string">&#39;xxx&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,13),V={href:"https://github.com/rfk1118/leetcode/blob/main/markdown/binary_tree.md",target:"_blank",rel:"noopener noreferrer"},j=e("h2",{id:"进阶版",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#进阶版","aria-hidden":"true"},"#"),a(" 进阶版")],-1),z=e("ul",null,[e("li",null,"Jvm可以根据长期调用对字节码编译进行优化和退化，基于预期，并且有衰退。"),e("li",null,[a("业务上在"),e("code",null,"O - > Q"),a("节点上，假如部门A的A1流转给B部门的B1，部门A的A2流转给B部门的B2，则业务上下次A1进行流转时，需要进行提示B1，如果A1后面3次流转人员都是C1，然后下次又改成A1，应该提示什么？")])],-1),J=e("h2",{id:"参考",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#参考","aria-hidden":"true"},"#"),a(" 参考")],-1),T={href:"https://documentation.flowable.com/latest/index.html",target:"_blank",rel:"noopener noreferrer"},C={href:"https://gitee.com/tony2y/RuoYi-flowable",target:"_blank",rel:"noopener noreferrer"},F={href:"https://jingyecn.top:18080/architect-perspective/general-architecture/system-security/",target:"_blank",rel:"noopener noreferrer"},U={href:"https://camunda.com/download/modeler/",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://github.com/zhoupeng20188/activitispringboot/blob/master/src/main/java/com/zp/activitispringboot/utils/ActivitiUtil.java",target:"_blank",rel:"noopener noreferrer"},E={href:"https://book.douban.com/subject/3296317/",target:"_blank",rel:"noopener noreferrer"};function L(N,X){const t=o("ExternalLinkIcon"),r=o("Mermaid");return l(),c("div",null,[m,s(" 权限可以参考[周志明老师架构安全性](https://jingyecn.top:18080/architect-perspective/general-architecture/system-security/)， "),s(" 框架组合使用在某些场景下就会产生新的问题。 "),b,e("p",null,[a("讲点技术相关的，词法分析树可以分析出流程树，也可以进行预测，详细内容参考"),e("a",f,[a("编译原理"),n(t)]),a("，笔者只是大概翻了翻目录，进行了解了一下，idea已经支持根据当前数据进行推断代码执行，图中可以看出已经根据当前标量进行推断出下一分支执行，此段代码仅做展示使用，在编译期间会优化掉不会执行的分支。")]),g,k,n(r,{id:"mermaid-17",code:"eJwrLkksSXXJTEwvSszVLTPiUgACsJhCZlo8hGFjk5yRn5mcamcHlo3WilXQ1bVTeLp38tPO3ie7doFF4TywHEwvWApuEEjG8WXzipfTVzxd0vJ8QpuCFVBSIU/BRsEYU6UTNpV2tkClAFOVQxA="}),e("p",null,[a("工作流程获取下一流具体详情如下，代码参考了"),e("a",v,[a("zhoupeng20188"),n(t)]),a("，这里很复杂，涉及到子流程获取下一流程问题以及一些未知问题（对bpmn使用还少），所以这里只能做到暂时业务可以获取，短时间内很难穷举出所有case。")]),n(r,{id:"mermaid-21",code:"eJxLy8kvT85ILCpR8AniUlB4tmDns951JYnF2Z4pz+Yvfda5L6kgN09BV9cOKpWYXJJZlllS6Znyom/70/5pefkpqXB92CTBel/sn/1iYc/T/hkv2/ufdix5Nm0tUA+mIFjt85ZtTyf0PetbARR42r7ryY7uJzsaXnQ1PW/ayQUAy1ddiw=="}),x,e("div",y,[w,e("p",null,[a("bpmn "),e("a",A,[a("工具使用"),n(t)])])]),B,e("p",null,[a("根据找到的人在找到其部门和父亲部门，构建组织架构树，这里需要"),e("a",V,[a("树"),n(t)]),a("的算法和组合设计模式，此时更加理解算法的重要性。")]),j,z,J,e("ul",null,[e("li",null,[e("a",T,[a("flowable doc"),n(t)])]),e("li",null,[e("a",C,[a("tony / RuoYi-flowable"),n(t)])]),e("li",null,[e("a",F,[a("周志明老师架构安全性"),n(t)])]),e("li",null,[e("a",U,[a("工具使用"),n(t)])]),e("li",null,[e("a",Y,[a("zhoupeng20188 nextFlow"),n(t)])]),e("li",null,[e("a",E,[a("龙书编译原理"),n(t)])])])])}const R=i(u,[["render",L],["__file","nextflow.html.vue"]]);export{R as default};
