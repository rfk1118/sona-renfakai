import{_ as c,V as i,W as l,Z as t,Y as s,a1 as n,a0 as a,F as p}from"./framework-e54e0297.js";const u={},r=a(`<h1 id="flashloanv3" tabindex="-1"><a class="header-anchor" href="#flashloanv3" aria-hidden="true">#</a> FlashLoanV3</h1><p>将V2版本升级到V3版本，代码如下：</p><div class="language-solidity line-numbers-mode" data-ext="solidity"><pre class="language-solidity"><code><span class="token comment">// contracts/FlashLoan.sol</span>
<span class="token comment">// SPDX-License-Identifier: MIT</span>
<span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token number">0.8</span><span class="token number">.10</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span>FlashLoanSimpleReceiverBase<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@aave/core-v3/contracts/flashloan/base/FlashLoanSimpleReceiverBase.sol&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>IPoolAddressesProvider<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>IERC20<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">contract</span> <span class="token class-name">FlashLoan</span> <span class="token keyword">is</span> FlashLoanSimpleReceiverBase <span class="token punctuation">{</span>
    <span class="token builtin">address</span> <span class="token keyword">payable</span> owner<span class="token punctuation">;</span>

    <span class="token keyword">constructor</span><span class="token punctuation">(</span>
        <span class="token builtin">address</span> _addressProvider
    <span class="token punctuation">)</span> <span class="token function">FlashLoanSimpleReceiverBase</span><span class="token punctuation">(</span><span class="token function">IPoolAddressesProvider</span><span class="token punctuation">(</span>_addressProvider<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        owner <span class="token operator">=</span> <span class="token keyword">payable</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">function</span> <span class="token function">executeOperation</span><span class="token punctuation">(</span>
        <span class="token builtin">address</span> asset<span class="token punctuation">,</span>
        <span class="token builtin">uint256</span> amount<span class="token punctuation">,</span>
        <span class="token builtin">uint256</span> premium<span class="token punctuation">,</span>
        <span class="token builtin">address</span> <span class="token comment">/**initiator**/</span><span class="token punctuation">,</span>
        <span class="token builtin">bytes</span> <span class="token keyword">calldata</span> <span class="token comment">/**params**/</span>
    <span class="token punctuation">)</span> <span class="token keyword">external</span> override <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 允许池子可以还代币</span>
        <span class="token builtin">uint256</span> amountOwed <span class="token operator">=</span> amount <span class="token operator">+</span> premium<span class="token punctuation">;</span>
        <span class="token function">IERC20</span><span class="token punctuation">(</span>asset<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">approve</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>POOL<span class="token punctuation">)</span><span class="token punctuation">,</span> amountOwed<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">function</span> <span class="token function">requestFlashLoan</span><span class="token punctuation">(</span><span class="token builtin">address</span> _token<span class="token punctuation">,</span> <span class="token builtin">uint256</span> _amount<span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token punctuation">{</span>
        POOL<span class="token punctuation">.</span><span class="token function">flashLoanSimple</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span> _token<span class="token punctuation">,</span> _amount<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">function</span> <span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token builtin">address</span> _tokenAddress<span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token keyword">view</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">uint256</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">IERC20</span><span class="token punctuation">(</span>_tokenAddress<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">function</span> <span class="token function">withdraw</span><span class="token punctuation">(</span><span class="token builtin">address</span> _tokenAddress<span class="token punctuation">)</span> <span class="token keyword">external</span> onlyOwner <span class="token punctuation">{</span>
        IERC20 token <span class="token operator">=</span> <span class="token function">IERC20</span><span class="token punctuation">(</span>_tokenAddress<span class="token punctuation">)</span><span class="token punctuation">;</span>
        token<span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> token<span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 只有owner可以调用一些功能</span>
    <span class="token keyword">modifier</span> <span class="token function">onlyOwner</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">require</span><span class="token punctuation">(</span>
            msg<span class="token punctuation">.</span>sender <span class="token operator">==</span> owner<span class="token punctuation">,</span>
            <span class="token string">&quot;Only the contract owner can call this function&quot;</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">_</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 可以接收eth</span>
    <span class="token function">receive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token keyword">payable</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从代码中看到<code>executeOperation</code>已经从数组变成了单数据。</p><h2 id="编写测试用例" tabindex="-1"><a class="header-anchor" href="#编写测试用例" aria-hidden="true">#</a> 编写测试用例</h2><p>测试用例主要流程为：</p>`,6),d=a(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ethers <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;hardhat&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> promisify <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;util&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// weth abi</span>
<span class="token keyword">const</span> wethAbi <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token string">&quot;constructor(string mockName, string mockSymbol, address owner)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;event Approval(address indexed src, address indexed guy, uint256 wad)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;event Deposit(address indexed dst, uint256 wad)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;event Transfer(address indexed src, address indexed dst, uint256 wad)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;event Withdrawal(address indexed src, uint256 wad)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;function allowance(address, address) view returns (uint256)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;function approve(address guy, uint256 wad) returns (bool)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;function balanceOf(address) view returns (uint256)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;function decimals() view returns (uint8)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;function deposit() payable&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;function mint(address account, uint256 value) returns (bool)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;function name() view returns (string)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;function owner() view returns (address)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;function renounceOwnership()&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;function symbol() view returns (string)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;function totalSupply() view returns (uint256)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;function transfer(address dst, uint256 wad) returns (bool)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;function transferFrom(address src, address dst, uint256 wad) returns (bool)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;function transferOwnership(address newOwner)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;function withdraw(uint256 wad)&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// flashLoad abi</span>
<span class="token keyword">const</span> flashLoanAbi <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token string">&quot;constructor(address _addressProvider)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;function ADDRESSES_PROVIDER() view returns (address)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;function POOL() view returns (address)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;function executeOperation(address asset, uint256 amount, uint256 premium, address, bytes) returns (bool)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;function getBalance(address _tokenAddress) view returns (uint256)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;function requestFlashLoan(address _token, uint256 _amount)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;function withdraw(address _tokenAddress)&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// https://docs.aave.com/developers/deployed-contracts/v3-testnet-addresses</span>
<span class="token keyword">const</span> mintMoney <span class="token operator">=</span> ethers<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">parseEther</span><span class="token punctuation">(</span><span class="token string">&quot;0.005&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> wethAddress <span class="token operator">=</span> <span class="token string">&quot;0xCCB14936C2E000ED8393A571D15A2672537838Ad&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 1.部署合约</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>owner<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> ethers<span class="token punctuation">.</span><span class="token function">getSigners</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 部署合约</span>
  <span class="token keyword">const</span> FlashLoan <span class="token operator">=</span> <span class="token keyword">await</span> ethers<span class="token punctuation">.</span><span class="token function">getContractFactory</span><span class="token punctuation">(</span><span class="token string">&quot;FlashLoan&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> FlashLoanDeploy <span class="token operator">=</span> <span class="token keyword">await</span> FlashLoan<span class="token punctuation">.</span><span class="token function">deploy</span><span class="token punctuation">(</span>
    <span class="token string">&quot;0xC911B590248d127aD18546B186cC6B324e99F02c&quot;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> FlashLoanDeploy<span class="token punctuation">.</span><span class="token function">deployed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;部署合约地址&quot;</span> <span class="token operator">+</span> FlashLoanDeploy<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 2.存款</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;开始存款&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> wethContract <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ethers</span><span class="token punctuation">.</span><span class="token function">Contract</span><span class="token punctuation">(</span>wethAddress<span class="token punctuation">,</span> wethAbi<span class="token punctuation">,</span> owner<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> depositPara <span class="token operator">=</span> <span class="token punctuation">{</span>
    from<span class="token operator">:</span> owner<span class="token punctuation">.</span>address<span class="token punctuation">,</span>
    to<span class="token operator">:</span> wethAddress<span class="token punctuation">,</span>
    data<span class="token operator">:</span> wethContract<span class="token punctuation">.</span>interface<span class="token punctuation">.</span><span class="token function">encodeFunctionData</span><span class="token punctuation">(</span><span class="token string">&quot;deposit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    value<span class="token operator">:</span> mintMoney<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> depositResult <span class="token operator">=</span> <span class="token keyword">await</span> owner<span class="token punctuation">.</span><span class="token function">sendTransaction</span><span class="token punctuation">(</span>depositPara<span class="token punctuation">)</span><span class="token punctuation">;</span>
  depositResult<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;存款成功，tx&quot;</span> <span class="token operator">+</span> depositResult<span class="token punctuation">.</span>hash<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 转账给flash合约</span>
  <span class="token keyword">const</span> balanceOf <span class="token operator">=</span> <span class="token keyword">await</span> wethContract<span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span>owner<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;转账给flash loan金额&quot;</span> <span class="token operator">+</span> balanceOf<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> withdrawPara <span class="token operator">=</span> <span class="token punctuation">{</span>
    from<span class="token operator">:</span> owner<span class="token punctuation">.</span>address<span class="token punctuation">,</span>
    to<span class="token operator">:</span> wethAddress<span class="token punctuation">,</span>
    data<span class="token operator">:</span> wethContract<span class="token punctuation">.</span>interface<span class="token punctuation">.</span><span class="token function">encodeFunctionData</span><span class="token punctuation">(</span><span class="token string">&quot;transfer&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
      FlashLoanDeploy<span class="token punctuation">.</span>address<span class="token punctuation">,</span>
      balanceOf<span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> transResult <span class="token operator">=</span> <span class="token keyword">await</span> owner<span class="token punctuation">.</span><span class="token function">sendTransaction</span><span class="token punctuation">(</span>withdrawPara<span class="token punctuation">)</span><span class="token punctuation">;</span>
  transResult<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;转账成功，tx&quot;</span> <span class="token operator">+</span> transResult<span class="token punctuation">.</span>hash<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;开始借贷&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> flashLoanContract <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ethers</span><span class="token punctuation">.</span><span class="token function">Contract</span><span class="token punctuation">(</span>
    FlashLoanDeploy<span class="token punctuation">.</span>address<span class="token punctuation">,</span>
    flashLoanAbi<span class="token punctuation">,</span>
    owner
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 5. requestFlashLoan</span>
  <span class="token keyword">const</span> flashLoanParams <span class="token operator">=</span> <span class="token punctuation">{</span>
    from<span class="token operator">:</span> owner<span class="token punctuation">.</span>address<span class="token punctuation">,</span>
    to<span class="token operator">:</span> FlashLoanDeploy<span class="token punctuation">.</span>address<span class="token punctuation">,</span>
    data<span class="token operator">:</span> flashLoanContract<span class="token punctuation">.</span>interface<span class="token punctuation">.</span><span class="token function">encodeFunctionData</span><span class="token punctuation">(</span><span class="token string">&quot;requestFlashLoan&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
      wethContract<span class="token punctuation">.</span>address<span class="token punctuation">,</span>
      mintMoney<span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> flashLoanResult <span class="token operator">=</span> <span class="token keyword">await</span> owner<span class="token punctuation">.</span><span class="token function">sendTransaction</span><span class="token punctuation">(</span>flashLoanParams<span class="token punctuation">)</span><span class="token punctuation">;</span>
  flashLoanResult<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Transaction hash: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>flashLoanResult<span class="token punctuation">.</span>hash<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  process<span class="token punctuation">.</span>exitCode <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用脚本<code>npx hardhat run ./scripts/deploy.ts --network goerli</code>执行，出现错误：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code> cannot estimate gas<span class="token punctuation">;</span> transaction may fail or may <span class="token keyword">require</span> manual gas limit
  reason<span class="token operator">:</span> <span class="token string">&#39;execution reverted&#39;</span><span class="token punctuation">,</span>
  code<span class="token operator">:</span> <span class="token string">&#39;UNPREDICTABLE_GAS_LIMIT&#39;</span><span class="token punctuation">,</span>
  method<span class="token operator">:</span> <span class="token string">&#39;estimateGas&#39;</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),k=s("code",null,"NONCE_EXPIRED",-1),v={href:"https://docs.ethers.org/v5/troubleshooting/errors/#help-REPLACEMENT_UNDERPRICED",target:"_blank",rel:"noopener noreferrer"},m=a(`<div class="hint-container tip"><p class="hint-container-title">提示</p><p>Each Ethereum transaction requires a nonce property equal to the index of that transaction for that account for all time. So, if an account has send four transactions over its lifetime, that means the nonces 0 though 3 (inclusive) have been used. The next transaction must use a nonce of 4. Attempting to re-use a nonce less than 4 will result in this error.</p></div><p>重新提出来flashLoanAddress，执行脚本，一次成功，这里卡了2h。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ethers <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;hardhat&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> flashLoanAbi <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token string">&quot;constructor(address _addressProvider)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;function ADDRESSES_PROVIDER() view returns (address)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;function POOL() view returns (address)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;function executeOperation(address asset, uint256 amount, uint256 premium, address, bytes) returns (bool)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;function getBalance(address _tokenAddress) view returns (uint256)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;function requestFlashLoan(address _token, uint256 _amount)&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;function withdraw(address _tokenAddress)&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// https://docs.aave.com/developers/deployed-contracts/v3-testnet-addresses</span>
<span class="token keyword">const</span> mintMoney <span class="token operator">=</span> ethers<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">parseEther</span><span class="token punctuation">(</span><span class="token string">&quot;0.005&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> wethAddress <span class="token operator">=</span> <span class="token string">&quot;0xCCB14936C2E000ED8393A571D15A2672537838Ad&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// 修改为flashLoanAddress地址</span>
<span class="token keyword">const</span> flashLoanAddress <span class="token operator">=</span> <span class="token string">&quot;修改为flashLoanAddress地址&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>owner<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> ethers<span class="token punctuation">.</span><span class="token function">getSigners</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> flashLoanContract <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ethers</span><span class="token punctuation">.</span><span class="token function">Contract</span><span class="token punctuation">(</span>
    flashLoanAddress<span class="token punctuation">,</span>
    flashLoanAbi<span class="token punctuation">,</span>
    owner
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> flashLoanParams <span class="token operator">=</span> <span class="token punctuation">{</span>
    from<span class="token operator">:</span> owner<span class="token punctuation">.</span>address<span class="token punctuation">,</span>
    to<span class="token operator">:</span> flashLoanAddress<span class="token punctuation">,</span>
    data<span class="token operator">:</span> flashLoanContract<span class="token punctuation">.</span>interface<span class="token punctuation">.</span><span class="token function">encodeFunctionData</span><span class="token punctuation">(</span><span class="token string">&quot;requestFlashLoan&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
      wethAddress<span class="token punctuation">,</span>
      mintMoney<span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> flashLoanResult <span class="token operator">=</span> <span class="token keyword">await</span> owner<span class="token punctuation">.</span><span class="token function">sendTransaction</span><span class="token punctuation">(</span>flashLoanParams<span class="token punctuation">)</span><span class="token punctuation">;</span>
  flashLoanResult<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Transaction hash: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>flashLoanResult<span class="token punctuation">.</span>hash<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  process<span class="token punctuation">.</span>exitCode <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="提示" tabindex="-1"><a class="header-anchor" href="#提示" aria-hidden="true">#</a> 提示</h2>`,4),b={href:"https://docs.aave.com/developers/deployed-contracts/v3-testnet-addresses",target:"_blank",rel:"noopener noreferrer"},w=s("code",null,"WETH-TestnetMintableERC20-Aave",-1),f=a(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>Mintable Reserves and Rewards
┌────────────────────────────────┬──────────────────────────────────────────────┐
<span class="token function">│</span>            <span class="token punctuation">(</span>index<span class="token punctuation">)</span>             │                   address                    │
├────────────────────────────────┼──────────────────────────────────────────────┤
│ <span class="token constant">DAI</span><span class="token operator">-</span>TestnetMintableERC20<span class="token operator">-</span>Aave  │ <span class="token string">&#39;0xBa8DCeD3512925e52FE67b1b5329187589072A55&#39;</span> │
│ <span class="token constant">LINK</span><span class="token operator">-</span>TestnetMintableERC20<span class="token operator">-</span>Aave │ <span class="token string">&#39;0xe9c4393a23246293a8D31BF7ab68c17d4CF90A29&#39;</span> │
│ <span class="token constant">USDC</span><span class="token operator">-</span>TestnetMintableERC20<span class="token operator">-</span>Aave │ <span class="token string">&#39;0x65aFADD39029741B3b8f0756952C74678c9cEC93&#39;</span> │
│ <span class="token constant">WBTC</span><span class="token operator">-</span>TestnetMintableERC20<span class="token operator">-</span>Aave │ <span class="token string">&#39;0x45AC379F019E48ca5dAC02E54F406F99F5088099&#39;</span> │
│ <span class="token constant">USDT</span><span class="token operator">-</span>TestnetMintableERC20<span class="token operator">-</span>Aave │ <span class="token string">&#39;0x2E8D98fd126a32362F2Bd8aA427E59a1ec63F780&#39;</span> │
│ <span class="token constant">AAVE</span><span class="token operator">-</span>TestnetMintableERC20<span class="token operator">-</span>Aave │ <span class="token string">&#39;0x8153A21dFeB1F67024aA6C6e611432900FF3dcb9&#39;</span> │
│ <span class="token constant">EURS</span><span class="token operator">-</span>TestnetMintableERC20<span class="token operator">-</span>Aave │ <span class="token string">&#39;0xBC33cfbD55EA6e5B97C6da26F11160ae82216E2b&#39;</span> │
│ <span class="token constant">WETH</span><span class="token operator">-</span>TestnetMintableERC20<span class="token operator">-</span>Aave │ <span class="token string">&#39;0xCCB14936C2E000ED8393A571D15A2672537838Ad&#39;</span> │
└────────────────────────────────┴──────────────────────────────────────────────┘
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function h(g,y){const o=p("Mermaid"),e=p("ExternalLinkIcon");return i(),l("div",null,[r,t(o,{id:"mermaid-16",code:"eJwrTi0sTc1LTnXJTEwvSszlejlp49OeVl07u7ScxOKMpxM6nu9aZqVgqPeyecXzvZsgfJgioKry1JIMKyO9p2tnPFuzD11cwVjvxd41L7Yse757JpJxXCBJNBtM9BQgSrE7wFRPoQjk0OISN5CoT35iHhcA6tVbew=="}),d,s("p",null,[n("在执行时还会出现"),k,n("，排查"),s("a",v,[n("文档"),t(e)]),n("有以下提示：")]),m,s("p",null,[n("在"),s("a",b,[n("v3-testnet-addresses"),t(e)]),n("拿到的Mintable address都有owner权限，所以这里使用了"),w,n("进行存款处理，并按照真实协议进行存款取款。")]),f])}const A=c(u,[["render",h],["__file","flashloanV3.html.vue"]]);export{A as default};
