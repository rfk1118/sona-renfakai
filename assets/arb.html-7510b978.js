const n=JSON.parse(`{"key":"v-981ed102","path":"/web3/arb.html","title":"套利","lang":"zh-CN","frontmatter":{"description":"套利 代码地址 启动程序 启动程序主要包含三个维度链下代码： 监听者 池子查询 套利绑定代码 全局绑定三者关系 这一段也叫上帝代码。 // 解析数据 const data = JSON.parse(event.data); console.log(\\"New transaction with hash:\\", data.hash); // 如果没有数据 if (data.logs == null) { return; } // Loop through all the logs in the transaction console.log(\\"Transaction has logs, parsing them\\"); for (let i = 0; i &lt; data.logs.length; i++) { console.log(data.logs[i]); // 判断是否是swap主题 if (data.logs[i].topics[0] != config.syncTopic) { continue; } // Skip if it isn't a sync event // 获取第一个交易池子 const firstPair = data.logs[i].address; // Get the address of the first pair, which is the address the logs are coming from console.log( \\"Transaction trading on Uniswap v2 pool detected! Pool address:\\", firstPair ); // 根据第一个pair判断是否存在池子 const [token0, token1, factoryToCheck] = await poolManager.checkPool( firstPair ); // Get the pool and the other factory we need to check // 未找到池子 if (token0 == false || token1 == false || factoryToCheck == false) { return; } // These are false if the pool does not have a WETH pair // 获取到第二个池子 const secondPair = await poolManager.checkFactory( factoryToCheck, token0, token1 ); // Check if the other factory has the pool too // 没有套利的池子 if (secondPair == false) { return; } // If it doesn't, stop here // 进行套利 await bundleExecutor.execute(firstPair, secondPair, data.hash); // Execute the bundle if we've made it this far","head":[["meta",{"property":"og:url","content":"https://renfakai.com/web3/arb.html"}],["meta",{"property":"og:site_name","content":"天道酬勤"}],["meta",{"property":"og:title","content":"套利"}],["meta",{"property":"og:description","content":"套利 代码地址 启动程序 启动程序主要包含三个维度链下代码： 监听者 池子查询 套利绑定代码 全局绑定三者关系 这一段也叫上帝代码。 // 解析数据 const data = JSON.parse(event.data); console.log(\\"New transaction with hash:\\", data.hash); // 如果没有数据 if (data.logs == null) { return; } // Loop through all the logs in the transaction console.log(\\"Transaction has logs, parsing them\\"); for (let i = 0; i &lt; data.logs.length; i++) { console.log(data.logs[i]); // 判断是否是swap主题 if (data.logs[i].topics[0] != config.syncTopic) { continue; } // Skip if it isn't a sync event // 获取第一个交易池子 const firstPair = data.logs[i].address; // Get the address of the first pair, which is the address the logs are coming from console.log( \\"Transaction trading on Uniswap v2 pool detected! Pool address:\\", firstPair ); // 根据第一个pair判断是否存在池子 const [token0, token1, factoryToCheck] = await poolManager.checkPool( firstPair ); // Get the pool and the other factory we need to check // 未找到池子 if (token0 == false || token1 == false || factoryToCheck == false) { return; } // These are false if the pool does not have a WETH pair // 获取到第二个池子 const secondPair = await poolManager.checkFactory( factoryToCheck, token0, token1 ); // Check if the other factory has the pool too // 没有套利的池子 if (secondPair == false) { return; } // If it doesn't, stop here // 进行套利 await bundleExecutor.execute(firstPair, secondPair, data.hash); // Execute the bundle if we've made it this far"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://renfakai.com/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-18T10:52:37.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"套利"}],["meta",{"property":"article:modified_time","content":"2023-10-18T10:52:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"套利\\",\\"image\\":[\\"https://renfakai.com/\\"],\\"dateModified\\":\\"2023-10-18T10:52:37.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"启动程序","slug":"启动程序","link":"#启动程序","children":[]},{"level":2,"title":"全局绑定三者关系","slug":"全局绑定三者关系","link":"#全局绑定三者关系","children":[]},{"level":2,"title":"监听者","slug":"监听者","link":"#监听者","children":[]},{"level":2,"title":"池子查询","slug":"池子查询","link":"#池子查询","children":[]},{"level":2,"title":"套利绑定代码","slug":"套利绑定代码","link":"#套利绑定代码","children":[]},{"level":2,"title":"合约代码","slug":"合约代码","link":"#合约代码","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1697626357000,"updatedTime":1697626357000,"contributors":[{"name":"renfakai","email":"rfk1118@gmail.com","commits":1}]},"readingTime":{"minutes":7.28,"words":2183},"filePathRelative":"web3/arb.md","localizedDate":"2023年10月18日","excerpt":"<h1> 套利</h1>\\n<p><a href=\\"https://github.com/rfk1118/simple-blind-arbitrage/tree/main\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">代码地址</a></p>\\n<h2> 启动程序</h2>\\n<p>启动程序主要包含三个维度链下代码：</p>\\n<ul>\\n<li>监听者</li>\\n<li>池子查询</li>\\n<li>套利绑定代码</li>\\n</ul>\\n<h2> 全局绑定三者关系</h2>\\n<p>这一段也叫上帝代码。</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">// 解析数据</span>\\n<span class=\\"token keyword\\">const</span> data <span class=\\"token operator\\">=</span> <span class=\\"token constant\\">JSON</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">parse</span><span class=\\"token punctuation\\">(</span>event<span class=\\"token punctuation\\">.</span>data<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"New transaction with hash:\\"</span><span class=\\"token punctuation\\">,</span> data<span class=\\"token punctuation\\">.</span>hash<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 如果没有数据</span>\\n<span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>data<span class=\\"token punctuation\\">.</span>logs <span class=\\"token operator\\">==</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">return</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// Loop through all the logs in the transaction</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Transaction has logs, parsing them\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> data<span class=\\"token punctuation\\">.</span>logs<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\n  console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>data<span class=\\"token punctuation\\">.</span>logs<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token comment\\">// 判断是否是swap主题</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>data<span class=\\"token punctuation\\">.</span>logs<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span>topics<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">!=</span> config<span class=\\"token punctuation\\">.</span>syncTopic<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">continue</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span> <span class=\\"token comment\\">// Skip if it isn't a sync event</span>\\n  <span class=\\"token comment\\">// 获取第一个交易池子</span>\\n  <span class=\\"token keyword\\">const</span> firstPair <span class=\\"token operator\\">=</span> data<span class=\\"token punctuation\\">.</span>logs<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span>address<span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// Get the address of the first pair, which is the address the logs are coming from</span>\\n\\n  console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>\\n    <span class=\\"token string\\">\\"Transaction trading on Uniswap v2 pool detected! Pool address:\\"</span><span class=\\"token punctuation\\">,</span>\\n    firstPair\\n  <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token comment\\">// 根据第一个pair判断是否存在池子</span>\\n  <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">[</span>token0<span class=\\"token punctuation\\">,</span> token1<span class=\\"token punctuation\\">,</span> factoryToCheck<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">await</span> poolManager<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">checkPool</span><span class=\\"token punctuation\\">(</span>\\n    firstPair\\n  <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// Get the pool and the other factory we need to check</span>\\n  <span class=\\"token comment\\">// 未找到池子</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>token0 <span class=\\"token operator\\">==</span> <span class=\\"token boolean\\">false</span> <span class=\\"token operator\\">||</span> token1 <span class=\\"token operator\\">==</span> <span class=\\"token boolean\\">false</span> <span class=\\"token operator\\">||</span> factoryToCheck <span class=\\"token operator\\">==</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span> <span class=\\"token comment\\">// These are false if the pool does not have a WETH pair</span>\\n\\n  <span class=\\"token comment\\">// 获取到第二个池子</span>\\n  <span class=\\"token keyword\\">const</span> secondPair <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">await</span> poolManager<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">checkFactory</span><span class=\\"token punctuation\\">(</span>\\n    factoryToCheck<span class=\\"token punctuation\\">,</span>\\n    token0<span class=\\"token punctuation\\">,</span>\\n    token1\\n  <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// Check if the other factory has the pool too</span>\\n  <span class=\\"token comment\\">// 没有套利的池子</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>secondPair <span class=\\"token operator\\">==</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span> <span class=\\"token comment\\">// If it doesn't, stop here</span>\\n\\n  <span class=\\"token comment\\">// 进行套利</span>\\n  <span class=\\"token keyword\\">await</span> bundleExecutor<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">execute</span><span class=\\"token punctuation\\">(</span>firstPair<span class=\\"token punctuation\\">,</span> secondPair<span class=\\"token punctuation\\">,</span> data<span class=\\"token punctuation\\">.</span>hash<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// Execute the bundle if we've made it this far</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{},"autoDesc":true}`);export{n as data};
