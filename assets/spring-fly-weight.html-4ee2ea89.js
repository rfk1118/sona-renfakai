const e=JSON.parse('{"key":"v-814edea8","path":"/basic-skill/design-pattern/policy/spring-fly-weight.html","title":"spring-flyweight-policy","lang":"zh-CN","frontmatter":{"description":"spring-flyweight-policy 问题 本章使用 Spring 的容器管理 Service，在处理业务时候根据映射进行转换，从 ApplicationContext 中获取到策略，极大减少了手动编写代码管理 Bean 的问题。 来看一下目录: . ├── ApplicationContextProvider.java └── ApplicationContextProviderSetter.java 0 directories, 2 files . ├── dict │ └── FourPolicyNameEnum.java ├── service │ ├── FourPolicyService.java │ └── impl │ ├── HelloFourPolicyServiceImpl.java │ ├── NilFourPolicyServiceImpl.java │ └── WorldFourPolicyServiceImpl.java └── web ├── FourPolicyController.http └── FourPolicyController.java 4 directories, 7 file","head":[["meta",{"property":"og:url","content":"https://renfakai.com/basic-skill/design-pattern/policy/spring-fly-weight.html"}],["meta",{"property":"og:site_name","content":"天道酬勤"}],["meta",{"property":"og:title","content":"spring-flyweight-policy"}],["meta",{"property":"og:description","content":"spring-flyweight-policy 问题 本章使用 Spring 的容器管理 Service，在处理业务时候根据映射进行转换，从 ApplicationContext 中获取到策略，极大减少了手动编写代码管理 Bean 的问题。 来看一下目录: . ├── ApplicationContextProvider.java └── ApplicationContextProviderSetter.java 0 directories, 2 files . ├── dict │ └── FourPolicyNameEnum.java ├── service │ ├── FourPolicyService.java │ └── impl │ ├── HelloFourPolicyServiceImpl.java │ ├── NilFourPolicyServiceImpl.java │ └── WorldFourPolicyServiceImpl.java └── web ├── FourPolicyController.http └── FourPolicyController.java 4 directories, 7 file"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-11T16:22:17.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-11T16:22:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"spring-flyweight-policy\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-11T16:22:17.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"问题","slug":"问题","link":"#问题","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":3,"title":"Github 地址","slug":"github-地址","link":"#github-地址","children":[]}],"git":{"createdTime":1678551737000,"updatedTime":1678551737000,"contributors":[{"name":"renfakai","email":"rfk1118@gmail.com","commits":1}]},"readingTime":{"minutes":2.14,"words":642},"filePathRelative":"basic-skill/design-pattern/policy/spring-fly-weight.md","localizedDate":"2023年3月12日","excerpt":"<h1> spring-flyweight-policy</h1>\\n<h3> 问题</h3>\\n<p>本章使用 Spring 的容器管理 Service，在处理业务时候根据映射进行转换，从 ApplicationContext 中获取到策略，极大减少了手动编写代码管理 Bean 的问题。\\n来看一下目录:</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token punctuation\\">.</span>\\n├── <span class=\\"token class-name\\">ApplicationContextProvider</span><span class=\\"token punctuation\\">.</span>java\\n└── <span class=\\"token class-name\\">ApplicationContextProviderSetter</span><span class=\\"token punctuation\\">.</span>java\\n\\n<span class=\\"token number\\">0</span> directories<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span> files\\n\\n<span class=\\"token punctuation\\">.</span>\\n├── dict\\n│   └── <span class=\\"token class-name\\">FourPolicyNameEnum</span><span class=\\"token punctuation\\">.</span>java\\n├── service\\n│   ├── <span class=\\"token class-name\\">FourPolicyService</span><span class=\\"token punctuation\\">.</span>java\\n│   └── impl\\n│       ├── <span class=\\"token class-name\\">HelloFourPolicyServiceImpl</span><span class=\\"token punctuation\\">.</span>java\\n│       ├── <span class=\\"token class-name\\">NilFourPolicyServiceImpl</span><span class=\\"token punctuation\\">.</span>java\\n│       └── <span class=\\"token class-name\\">WorldFourPolicyServiceImpl</span><span class=\\"token punctuation\\">.</span>java\\n└── web\\n    ├── <span class=\\"token class-name\\">FourPolicyController</span><span class=\\"token punctuation\\">.</span>http\\n    └── <span class=\\"token class-name\\">FourPolicyController</span><span class=\\"token punctuation\\">.</span>java\\n\\n<span class=\\"token number\\">4</span> directories<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">7</span> file\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{},"autoDesc":true}');export{e as data};
