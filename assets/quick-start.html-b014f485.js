import{_ as e,V as d,W as c,a0 as i}from"./framework-1bd9c91b.js";const a="/assets/handlers-fb70d1d8.jpg",o="/assets/demo-36083e37.jpg",l={},t=i('<h1 id="快速上手" tabindex="-1"><a class="header-anchor" href="#快速上手" aria-hidden="true">#</a> 快速上手</h1><p>如何快速上手是开发最关注的事情，上手前先查看包的分类，也就是模块化。然后根据工作需要找到模块<code>demo</code>，有很多<code>demo</code>是可以直接使用到生产中的，如果需要定制化就需要<code>debug</code>了。</p><h2 id="包的分类" tabindex="-1"><a class="header-anchor" href="#包的分类" aria-hidden="true">#</a> 包的分类</h2><div style="text-align:center;"><p><img src="'+a+'" alt="An image"> Netty Example</p></div><p>包分类是将功能模块化，在开发、维护上职责清晰，按照上图进行<code>Netty</code>包的分类：</p><ul><li><code>bootstrap</code> 客户端、服务端的启动<code>Builder</code>类</li><li><code>buffer</code> 数据容器</li><li><code>chanel</code> 服务器监听、连接</li><li><code>util</code> 集合、多线程工具类</li><li><code>handler</code> 业务处理 <ul><li><code>codec</code> 编码</li><li><code>timeout</code> 心跳问题</li><li><code>traffic</code> 流量整形</li><li><code>ipfilter</code>ip 黑白名单问题</li><li>打印进出站数据问题</li></ul></li></ul><h2 id="使用-example学习" tabindex="-1"><a class="header-anchor" href="#使用-example学习" aria-hidden="true">#</a> 使用 Example学习</h2><p>合适场景，查找相应 <code>Example</code> ，<code>Debug</code>和测试，查看其流程，进行快速学习。<code>Netty Example</code>比较全，可以详细参考下图。</p><div style="text-align:center;"><p><img src="'+o+'" alt="An image"> Netty Example</p></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><ul><li>包职责拆分清晰，设计易理解，维护迭代容易；</li><li>Example 多，支持快速学习和使用。</li></ul>',11),r=[t];function s(n,h){return d(),c("div",null,r)}const m=e(l,[["render",s],["__file","quick-start.html.vue"]]);export{m as default};
