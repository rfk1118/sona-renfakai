const n=JSON.parse('{"key":"v-fdffc216","path":"/web3/8e55.html","title":"8e55","lang":"zh-CN","frontmatter":{"description":"8e55 代码解析 // SPDX-License-Identifier: AGPL-3.0 pragma solidity ^0.8.0; import \\"openzeppelin/token/ERC20/IERC20.sol\\"; import \\"openzeppelin/access/Ownable.sol\\"; import \\"openzeppelin/utils/math/SafeMath.sol\\"; import \\"aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\\"; import \\"aave/core-v3/contracts/flashloan/base/FlashLoanSimpleReceiverBase.sol\\"; interface IWETH is IERC20 { // weth存款 function deposit() external payable; // 取款 function withdraw(uint) external; } interface IUniswapV2Pair { // 获取代币对 function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast); // 进行swap function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external; function token0() external view returns (address); function token1() external view returns (address); } // 代币对数据 interface IPairReserves{ struct PairReserves { uint256 reserve0; uint256 reserve1; uint256 price; bool isWETHZero; } } // 闪电贷池子 interface ILendingPool { function flashLoan ( address _receiver, address[] memory _assets, uint256[] memory _amounts, uint256[] memory _modes, address _onBehalfOf, bytes memory _params, uint16 _referralCode) external; } contract BlindBackrun is Ownable, FlashLoanSimpleReceiverBase { using SafeMath for uint256; uint256 uniswappyFee = 997; ILendingPool public lendingPool; address public immutable WETH_ADDRESS; // 闪电贷池子 constructor(address _wethAddress, address _addressProvider) Ownable() FlashLoanSimpleReceiverBase(IPoolAddressesProvider(_addressProvider)) { WETH_ADDRESS = _wethAddress; lendingPool = ILendingPool(IPoolAddressesProvider(_addressProvider).getPool()); } // 执行闪电贷 // Function to execute a flash loan function executeFlashLoan( address _asset, uint256 _amount, address firstPairAddress, address secondPairAddress, uint percentageToPayToCoinbase ) external onlyOwner { // 接收贷款地址 address receiverAddress = address(this); // 贷款的token address[] memory assets = new address[](1); assets[0] = _asset; // 贷款数量 uint256[] memory amounts = new uint256[](1); amounts[0] = _amount; // 贷款模式 uint256[] memory modes = new uint256[](1); modes[0] = 0; // 0 = no debt, 1 = stable, 2 = variable address onBehalfOf = address(this); // 对地址进行加密 bytes memory params = abi.encode(firstPairAddress, secondPairAddress, percentageToPayToCoinbase); uint16 referralCode = 0; lendingPool.flashLoan( receiverAddress, assets, amounts, modes, onBehalfOf, params, referralCode ); } // Override this function from FlashLoanSimpleReceiverBase to specify what happens when you receive the flash loan function executeOperation( address asset, uint256 amount, uint256 premium, address initiator, bytes calldata params ) external override returns (bool) { // Ensure the loan is for the correct asset and is sent from the LendingPool // 确保贷款从正确的token的池子 require(msg.sender == address(lendingPool), \\"Invalid sender\\"); // 保证池子数量大于贷款数量 require(IERC20(asset).balanceOf(address(this)) &gt;= amount, \\"Did not receive loan\\"); // Decode the params and execute the arbitrage // 解密获取两个池子地址 (address firstPairAddress, address secondPairAddress, uint percentageToPayToCoinbase) = abi.decode(params, (address, address, uint)); executeArbitrage(firstPairAddress, secondPairAddress, percentageToPayToCoinbase); // 计算还款 // Calculate amount to repay, which is the loan amount plus the premium uint256 totalDebt = amount.add(premium); // 还款给池子 // Transfer funds back to repay the flash loan require(IERC20(asset).transferFrom(address(this), address(lendingPool), totalDebt), \\"Failed to repay loan\\"); return true; } /// @notice Executes an arbitrage transaction between two Uniswap V2 pairs. /// @notice Pair addresses need to be computed off-chain. /// @dev Only the contract owner can call this function. /// @param firstPairAddress Address of the first Uniswap V2 pair. /// @param secondPairAddress Address of the second Uniswap V2 pair. function executeArbitrage( address firstPairAddress, address secondPairAddress, uint percentageToPayToCoinbase ) internal { // 获取到之前有多少weth uint256 balanceBefore = IERC20(WETH_ADDRESS).balanceOf(address(this)); // 第一个池子 IUniswapV2Pair firstPair = IUniswapV2Pair(firstPairAddress); // 第二个池子 IUniswapV2Pair secondPair = IUniswapV2Pair(secondPairAddress); // 池子数据 IPairReserves.PairReserves memory firstPairData = getPairData(firstPair); IPairReserves.PairReserves memory secondPairData = getPairData(secondPair); // 获取借贷数量 uint256 amountIn = getAmountIn(firstPairData, secondPairData); // 转移给第一个池子特定数量 IERC20(WETH_ADDRESS).transfer(firstPairAddress, amountIn); uint256 firstPairAmountOut; uint256 finalAmountOut; if (firstPairData.isWETHZero == true){ // 获取可以换出来的数量 firstPairAmountOut = getAmountOut(amountIn, firstPairData.reserve0, firstPairData.reserve1); finalAmountOut = getAmountOut(firstPairAmountOut, secondPairData.reserve1, secondPairData.reserve0); firstPair.swap(0, firstPairAmountOut, secondPairAddress, \\"\\"); secondPair.swap(finalAmountOut, 0, address(this), \\"\\"); } else { firstPairAmountOut = getAmountOut(amountIn, firstPairData.reserve1, firstPairData.reserve0); finalAmountOut = getAmountOut(firstPairAmountOut, secondPairData.reserve0, secondPairData.reserve1); firstPair.swap(firstPairAmountOut, 0, secondPairAddress, \\"\\"); secondPair.swap(0, finalAmountOut, address(this), \\"\\"); } // 获取套利后的金额 uint256 balanceAfter = IERC20(WETH_ADDRESS).balanceOf(address(this)); // 保证赚钱了 require(balanceAfter &gt; balanceBefore, \\"Arbitrage failed\\"); // 赚钱比例 uint profit = balanceAfter.sub(balanceBefore); // 赚钱比例给矿工 uint profitToCoinbase = profit.mul(percentageToPayToCoinbase).div(100); // 提款给矿工 IWETH(WETH_ADDRESS).withdraw(profitToCoinbase); // 转账给矿工 block.coinbase.transfer(profitToCoinbase); } /// @notice Calculates the required input amount for the arbitrage transaction. /// @param firstPairData Struct containing data about the first Uniswap V2 pair. /// @param secondPairData Struct containing data about the second Uniswap V2 pair. /// @return amountIn, the optimal amount to trade to arbitrage two v2 pairs. function getAmountIn( IPairReserves.PairReserves memory firstPairData, IPairReserves.PairReserves memory secondPairData ) public returns (uint256) { uint256 numerator = getNumerator(firstPairData, secondPairData); uint256 denominator = getDenominator(firstPairData, secondPairData); uint256 amountIn = numerator .mul(1000) .div(denominator); return amountIn; } function getNumerator( IPairReserves.PairReserves memory firstPairData, IPairReserves.PairReserves memory secondPairData ) public view returns (uint256) { if (firstPairData.isWETHZero == true) { uint presqrt = uniswappyFee .mul(uniswappyFee) .mul(firstPairData.reserve1) .mul(secondPairData.reserve0) .div(secondPairData.reserve1) .div(firstPairData.reserve0); uint256 numerator = ( sqrt(presqrt) .sub(1e3) ) .mul(secondPairData.reserve1) .mul(firstPairData.reserve0); return numerator; } else { uint presqrt = uniswappyFee .mul(uniswappyFee) .mul(firstPairData.reserve0) .mul(secondPairData.reserve1) .div(secondPairData.reserve0) .div(firstPairData.reserve1); uint256 numerator = ( sqrt(presqrt) .sub(1e3) ) .mul(secondPairData.reserve0) .mul(firstPairData.reserve1); return numerator; } } // 这个算法是什么？ function getDenominator( IPairReserves.PairReserves memory firstPairData, IPairReserves.PairReserves memory secondPairData ) public returns (uint256){ if (firstPairData.isWETHZero == true) { uint256 denominator = ( uniswappyFee .mul(secondPairData.reserve1) .mul(1000) ) .add( uniswappyFee .mul(uniswappyFee) .mul(firstPairData.reserve1) ); return denominator; } else { uint256 denominator = ( uniswappyFee .mul(secondPairData.reserve0) .mul(1000) ) .add( uniswappyFee .mul(uniswappyFee) .mul(firstPairData.reserve0) ); return denominator; } } /// @notice Retrieves price and reserve data for a given Uniswap V2 pair. Also checks which token is WETH. /// @param pair The Uniswap V2 pair to retrieve data for. /// @return A PairReserves struct containing price and reserve data for the given pair. // 获取代币对数据 function getPairData(IUniswapV2Pair pair) private view returns (IPairReserves.PairReserves memory) { (uint256 reserve0, uint256 reserve1, ) = pair.getReserves(); uint256 price; bool isWETHZero = false; if (pair.token0() == WETH_ADDRESS) { price = reserve1.mul(1e18).div(reserve0); isWETHZero = true; } else { price = reserve0.mul(1e18).div(reserve1); } return IPairReserves.PairReserves(reserve0, reserve1, price, isWETHZero); } /// @notice Calculates the square root of a given number. /// @param x: The number to calculate the square root of. /// @return y: The square root of the given number. function sqrt(uint256 x) private pure returns (uint256) { if (x == 0) return 0; uint256 z = x.add(1).div(2); uint256 y = x; while (z &lt; y) { y = z; z = ((x.div(z)).add(z)).div(2); } return y; } // 计算可以获得的代币，后续研究下算法 /// @notice Calculates the output amount for a given input amount and reserves. /// @param amountIn The input amount. /// @param reserveIn The reserve of the input token. /// @param reserveOut The reserve of the output token. /// @return amountOut The output amount. function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut ) internal pure returns (uint amountOut) { // todo后续研究下白皮书，这里有重要算法 uint amountInWithFee = amountIn.mul(997); uint numerator = amountInWithFee.mul(reserveOut); uint denominator = reserveIn.mul(1000).add(amountInWithFee); amountOut = numerator / denominator; return amountOut; } /// @notice Transfers all WETH held by the contract to the contract owner. /// @dev Only the contract owner can call this function. // 提款 function withdrawWETHToOwner() external onlyOwner { uint256 balance = IERC20(WETH_ADDRESS).balanceOf(address(this)); IERC20(WETH_ADDRESS).transfer(msg.sender, balance); } /// @notice Transfers all ETH held by the contract to the contract owner. /// @dev Only the contract owner can call this function. // 提款 function withdrawETHToOwner() external onlyOwner { uint256 balance = address(this).balance; payable(msg.sender).transfer(balance); } /// @notice Executes a call to another contract with the provided data and value. /// @dev Only the contract owner can call this function. /// @dev Reverted calls will result in a revert. /// @param _to The address of the contract to call. /// @param _value The amount of Ether to send with the call. /// @param _data The calldata to send with the call. // 转账辅助函数 function call(address payable _to, uint256 _value, bytes memory _data) external onlyOwner { (bool success, ) = _to.call{value: _value}(_data); require(success, \\"External call failed\\"); } // 可以接受eth /// @notice Fallback function that allows the contract to receive Ether. receive() external payable {} }","head":[["meta",{"property":"og:url","content":"https://renfakai.com/web3/8e55.html"}],["meta",{"property":"og:site_name","content":"天道酬勤"}],["meta",{"property":"og:title","content":"8e55"}],["meta",{"property":"og:description","content":"8e55 代码解析 // SPDX-License-Identifier: AGPL-3.0 pragma solidity ^0.8.0; import \\"openzeppelin/token/ERC20/IERC20.sol\\"; import \\"openzeppelin/access/Ownable.sol\\"; import \\"openzeppelin/utils/math/SafeMath.sol\\"; import \\"aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\\"; import \\"aave/core-v3/contracts/flashloan/base/FlashLoanSimpleReceiverBase.sol\\"; interface IWETH is IERC20 { // weth存款 function deposit() external payable; // 取款 function withdraw(uint) external; } interface IUniswapV2Pair { // 获取代币对 function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast); // 进行swap function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external; function token0() external view returns (address); function token1() external view returns (address); } // 代币对数据 interface IPairReserves{ struct PairReserves { uint256 reserve0; uint256 reserve1; uint256 price; bool isWETHZero; } } // 闪电贷池子 interface ILendingPool { function flashLoan ( address _receiver, address[] memory _assets, uint256[] memory _amounts, uint256[] memory _modes, address _onBehalfOf, bytes memory _params, uint16 _referralCode) external; } contract BlindBackrun is Ownable, FlashLoanSimpleReceiverBase { using SafeMath for uint256; uint256 uniswappyFee = 997; ILendingPool public lendingPool; address public immutable WETH_ADDRESS; // 闪电贷池子 constructor(address _wethAddress, address _addressProvider) Ownable() FlashLoanSimpleReceiverBase(IPoolAddressesProvider(_addressProvider)) { WETH_ADDRESS = _wethAddress; lendingPool = ILendingPool(IPoolAddressesProvider(_addressProvider).getPool()); } // 执行闪电贷 // Function to execute a flash loan function executeFlashLoan( address _asset, uint256 _amount, address firstPairAddress, address secondPairAddress, uint percentageToPayToCoinbase ) external onlyOwner { // 接收贷款地址 address receiverAddress = address(this); // 贷款的token address[] memory assets = new address[](1); assets[0] = _asset; // 贷款数量 uint256[] memory amounts = new uint256[](1); amounts[0] = _amount; // 贷款模式 uint256[] memory modes = new uint256[](1); modes[0] = 0; // 0 = no debt, 1 = stable, 2 = variable address onBehalfOf = address(this); // 对地址进行加密 bytes memory params = abi.encode(firstPairAddress, secondPairAddress, percentageToPayToCoinbase); uint16 referralCode = 0; lendingPool.flashLoan( receiverAddress, assets, amounts, modes, onBehalfOf, params, referralCode ); } // Override this function from FlashLoanSimpleReceiverBase to specify what happens when you receive the flash loan function executeOperation( address asset, uint256 amount, uint256 premium, address initiator, bytes calldata params ) external override returns (bool) { // Ensure the loan is for the correct asset and is sent from the LendingPool // 确保贷款从正确的token的池子 require(msg.sender == address(lendingPool), \\"Invalid sender\\"); // 保证池子数量大于贷款数量 require(IERC20(asset).balanceOf(address(this)) &gt;= amount, \\"Did not receive loan\\"); // Decode the params and execute the arbitrage // 解密获取两个池子地址 (address firstPairAddress, address secondPairAddress, uint percentageToPayToCoinbase) = abi.decode(params, (address, address, uint)); executeArbitrage(firstPairAddress, secondPairAddress, percentageToPayToCoinbase); // 计算还款 // Calculate amount to repay, which is the loan amount plus the premium uint256 totalDebt = amount.add(premium); // 还款给池子 // Transfer funds back to repay the flash loan require(IERC20(asset).transferFrom(address(this), address(lendingPool), totalDebt), \\"Failed to repay loan\\"); return true; } /// @notice Executes an arbitrage transaction between two Uniswap V2 pairs. /// @notice Pair addresses need to be computed off-chain. /// @dev Only the contract owner can call this function. /// @param firstPairAddress Address of the first Uniswap V2 pair. /// @param secondPairAddress Address of the second Uniswap V2 pair. function executeArbitrage( address firstPairAddress, address secondPairAddress, uint percentageToPayToCoinbase ) internal { // 获取到之前有多少weth uint256 balanceBefore = IERC20(WETH_ADDRESS).balanceOf(address(this)); // 第一个池子 IUniswapV2Pair firstPair = IUniswapV2Pair(firstPairAddress); // 第二个池子 IUniswapV2Pair secondPair = IUniswapV2Pair(secondPairAddress); // 池子数据 IPairReserves.PairReserves memory firstPairData = getPairData(firstPair); IPairReserves.PairReserves memory secondPairData = getPairData(secondPair); // 获取借贷数量 uint256 amountIn = getAmountIn(firstPairData, secondPairData); // 转移给第一个池子特定数量 IERC20(WETH_ADDRESS).transfer(firstPairAddress, amountIn); uint256 firstPairAmountOut; uint256 finalAmountOut; if (firstPairData.isWETHZero == true){ // 获取可以换出来的数量 firstPairAmountOut = getAmountOut(amountIn, firstPairData.reserve0, firstPairData.reserve1); finalAmountOut = getAmountOut(firstPairAmountOut, secondPairData.reserve1, secondPairData.reserve0); firstPair.swap(0, firstPairAmountOut, secondPairAddress, \\"\\"); secondPair.swap(finalAmountOut, 0, address(this), \\"\\"); } else { firstPairAmountOut = getAmountOut(amountIn, firstPairData.reserve1, firstPairData.reserve0); finalAmountOut = getAmountOut(firstPairAmountOut, secondPairData.reserve0, secondPairData.reserve1); firstPair.swap(firstPairAmountOut, 0, secondPairAddress, \\"\\"); secondPair.swap(0, finalAmountOut, address(this), \\"\\"); } // 获取套利后的金额 uint256 balanceAfter = IERC20(WETH_ADDRESS).balanceOf(address(this)); // 保证赚钱了 require(balanceAfter &gt; balanceBefore, \\"Arbitrage failed\\"); // 赚钱比例 uint profit = balanceAfter.sub(balanceBefore); // 赚钱比例给矿工 uint profitToCoinbase = profit.mul(percentageToPayToCoinbase).div(100); // 提款给矿工 IWETH(WETH_ADDRESS).withdraw(profitToCoinbase); // 转账给矿工 block.coinbase.transfer(profitToCoinbase); } /// @notice Calculates the required input amount for the arbitrage transaction. /// @param firstPairData Struct containing data about the first Uniswap V2 pair. /// @param secondPairData Struct containing data about the second Uniswap V2 pair. /// @return amountIn, the optimal amount to trade to arbitrage two v2 pairs. function getAmountIn( IPairReserves.PairReserves memory firstPairData, IPairReserves.PairReserves memory secondPairData ) public returns (uint256) { uint256 numerator = getNumerator(firstPairData, secondPairData); uint256 denominator = getDenominator(firstPairData, secondPairData); uint256 amountIn = numerator .mul(1000) .div(denominator); return amountIn; } function getNumerator( IPairReserves.PairReserves memory firstPairData, IPairReserves.PairReserves memory secondPairData ) public view returns (uint256) { if (firstPairData.isWETHZero == true) { uint presqrt = uniswappyFee .mul(uniswappyFee) .mul(firstPairData.reserve1) .mul(secondPairData.reserve0) .div(secondPairData.reserve1) .div(firstPairData.reserve0); uint256 numerator = ( sqrt(presqrt) .sub(1e3) ) .mul(secondPairData.reserve1) .mul(firstPairData.reserve0); return numerator; } else { uint presqrt = uniswappyFee .mul(uniswappyFee) .mul(firstPairData.reserve0) .mul(secondPairData.reserve1) .div(secondPairData.reserve0) .div(firstPairData.reserve1); uint256 numerator = ( sqrt(presqrt) .sub(1e3) ) .mul(secondPairData.reserve0) .mul(firstPairData.reserve1); return numerator; } } // 这个算法是什么？ function getDenominator( IPairReserves.PairReserves memory firstPairData, IPairReserves.PairReserves memory secondPairData ) public returns (uint256){ if (firstPairData.isWETHZero == true) { uint256 denominator = ( uniswappyFee .mul(secondPairData.reserve1) .mul(1000) ) .add( uniswappyFee .mul(uniswappyFee) .mul(firstPairData.reserve1) ); return denominator; } else { uint256 denominator = ( uniswappyFee .mul(secondPairData.reserve0) .mul(1000) ) .add( uniswappyFee .mul(uniswappyFee) .mul(firstPairData.reserve0) ); return denominator; } } /// @notice Retrieves price and reserve data for a given Uniswap V2 pair. Also checks which token is WETH. /// @param pair The Uniswap V2 pair to retrieve data for. /// @return A PairReserves struct containing price and reserve data for the given pair. // 获取代币对数据 function getPairData(IUniswapV2Pair pair) private view returns (IPairReserves.PairReserves memory) { (uint256 reserve0, uint256 reserve1, ) = pair.getReserves(); uint256 price; bool isWETHZero = false; if (pair.token0() == WETH_ADDRESS) { price = reserve1.mul(1e18).div(reserve0); isWETHZero = true; } else { price = reserve0.mul(1e18).div(reserve1); } return IPairReserves.PairReserves(reserve0, reserve1, price, isWETHZero); } /// @notice Calculates the square root of a given number. /// @param x: The number to calculate the square root of. /// @return y: The square root of the given number. function sqrt(uint256 x) private pure returns (uint256) { if (x == 0) return 0; uint256 z = x.add(1).div(2); uint256 y = x; while (z &lt; y) { y = z; z = ((x.div(z)).add(z)).div(2); } return y; } // 计算可以获得的代币，后续研究下算法 /// @notice Calculates the output amount for a given input amount and reserves. /// @param amountIn The input amount. /// @param reserveIn The reserve of the input token. /// @param reserveOut The reserve of the output token. /// @return amountOut The output amount. function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut ) internal pure returns (uint amountOut) { // todo后续研究下白皮书，这里有重要算法 uint amountInWithFee = amountIn.mul(997); uint numerator = amountInWithFee.mul(reserveOut); uint denominator = reserveIn.mul(1000).add(amountInWithFee); amountOut = numerator / denominator; return amountOut; } /// @notice Transfers all WETH held by the contract to the contract owner. /// @dev Only the contract owner can call this function. // 提款 function withdrawWETHToOwner() external onlyOwner { uint256 balance = IERC20(WETH_ADDRESS).balanceOf(address(this)); IERC20(WETH_ADDRESS).transfer(msg.sender, balance); } /// @notice Transfers all ETH held by the contract to the contract owner. /// @dev Only the contract owner can call this function. // 提款 function withdrawETHToOwner() external onlyOwner { uint256 balance = address(this).balance; payable(msg.sender).transfer(balance); } /// @notice Executes a call to another contract with the provided data and value. /// @dev Only the contract owner can call this function. /// @dev Reverted calls will result in a revert. /// @param _to The address of the contract to call. /// @param _value The amount of Ether to send with the call. /// @param _data The calldata to send with the call. // 转账辅助函数 function call(address payable _to, uint256 _value, bytes memory _data) external onlyOwner { (bool success, ) = _to.call{value: _value}(_data); require(success, \\"External call failed\\"); } // 可以接受eth /// @notice Fallback function that allows the contract to receive Ether. receive() external payable {} }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-07T01:49:10.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-07T01:49:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"8e55\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-07T01:49:10.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"代码解析","slug":"代码解析","link":"#代码解析","children":[]},{"level":2,"title":"移除Flashloan","slug":"移除flashloan","link":"#移除flashloan","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1694051350000,"updatedTime":1694051350000,"contributors":[{"name":"renfakai","email":"rfk1118@gmail.com","commits":1}]},"readingTime":{"minutes":7.67,"words":2302},"filePathRelative":"web3/8e55.md","localizedDate":"2023年9月7日","excerpt":"<h1> 8e55</h1>\\n<h2> 代码解析</h2>\\n<div class=\\"language-sol line-numbers-mode\\" data-ext=\\"sol\\"><pre class=\\"language-sol\\"><code><span class=\\"token comment\\">// SPDX-License-Identifier: AGPL-3.0</span>\\n<span class=\\"token keyword\\">pragma</span> <span class=\\"token keyword\\">solidity</span> <span class=\\"token operator\\">^</span><span class=\\"token version number\\">0.8.0</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">import</span> <span class=\\"token string\\">\\"openzeppelin/token/ERC20/IERC20.sol\\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token string\\">\\"openzeppelin/access/Ownable.sol\\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token string\\">\\"openzeppelin/utils/math/SafeMath.sol\\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token string\\">\\"aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token string\\">\\"aave/core-v3/contracts/flashloan/base/FlashLoanSimpleReceiverBase.sol\\"</span><span class=\\"token punctuation\\">;</span>\\n\\n\\n<span class=\\"token keyword\\">interface</span> <span class=\\"token class-name\\">IWETH</span> <span class=\\"token keyword\\">is</span> IERC20 <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// weth存款</span>\\n    <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">deposit</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">external</span> <span class=\\"token keyword\\">payable</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">// 取款</span>\\n    <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">withdraw</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">uint</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">external</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">interface</span> <span class=\\"token class-name\\">IUniswapV2Pair</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 获取代币对</span>\\n    <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">getReserves</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">external</span> <span class=\\"token keyword\\">view</span> <span class=\\"token keyword\\">returns</span> <span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">uint112</span> reserve0<span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">uint112</span> reserve1<span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">uint32</span> blockTimestampLast<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">// 进行swap</span>\\n    <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">swap</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">uint</span> amount0Out<span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">uint</span> amount1Out<span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">address</span> to<span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">bytes</span> <span class=\\"token keyword\\">calldata</span> data<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">external</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">token0</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">external</span> <span class=\\"token keyword\\">view</span> <span class=\\"token keyword\\">returns</span> <span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">address</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">token1</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">external</span> <span class=\\"token keyword\\">view</span> <span class=\\"token keyword\\">returns</span> <span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">address</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// 代币对数据</span>\\n<span class=\\"token keyword\\">interface</span> <span class=\\"token class-name\\">IPairReserves</span><span class=\\"token punctuation\\">{</span>\\n     <span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">PairReserves</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token builtin\\">uint256</span> reserve0<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token builtin\\">uint256</span> reserve1<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token builtin\\">uint256</span> price<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token builtin\\">bool</span> isWETHZero<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// 闪电贷池子</span>\\n<span class=\\"token keyword\\">interface</span> <span class=\\"token class-name\\">ILendingPool</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">function</span> flashLoan <span class=\\"token punctuation\\">(</span>\\n        <span class=\\"token builtin\\">address</span> _receiver<span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token builtin\\">address</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> <span class=\\"token keyword\\">memory</span> _assets<span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token builtin\\">uint256</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> <span class=\\"token keyword\\">memory</span> _amounts<span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token builtin\\">uint256</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> <span class=\\"token keyword\\">memory</span> _modes<span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token builtin\\">address</span> _onBehalfOf<span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token builtin\\">bytes</span> <span class=\\"token keyword\\">memory</span> _params<span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token builtin\\">uint16</span> _referralCode<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">external</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">contract</span> <span class=\\"token class-name\\">BlindBackrun</span> <span class=\\"token keyword\\">is</span> Ownable<span class=\\"token punctuation\\">,</span> FlashLoanSimpleReceiverBase <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">using</span> <span class=\\"token class-name\\">SafeMath</span> <span class=\\"token keyword\\">for</span> <span class=\\"token builtin\\">uint256</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token builtin\\">uint256</span> uniswappyFee <span class=\\"token operator\\">=</span> <span class=\\"token number\\">997</span><span class=\\"token punctuation\\">;</span>\\n    ILendingPool <span class=\\"token keyword\\">public</span> lendingPool<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token builtin\\">address</span> <span class=\\"token keyword\\">public</span> immutable WETH_ADDRESS<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">// 闪电贷池子</span>\\n    <span class=\\"token keyword\\">constructor</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">address</span> _wethAddress<span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">address</span> _addressProvider<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token function\\">Ownable</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token function\\">FlashLoanSimpleReceiverBase</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">IPoolAddressesProvider</span><span class=\\"token punctuation\\">(</span>_addressProvider<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n        WETH_ADDRESS <span class=\\"token operator\\">=</span> _wethAddress<span class=\\"token punctuation\\">;</span>\\n        lendingPool <span class=\\"token operator\\">=</span> <span class=\\"token function\\">ILendingPool</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">IPoolAddressesProvider</span><span class=\\"token punctuation\\">(</span>_addressProvider<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getPool</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token comment\\">// 执行闪电贷</span>\\n    <span class=\\"token comment\\">// Function to execute a flash loan</span>\\n    <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">executeFlashLoan</span><span class=\\"token punctuation\\">(</span>\\n        <span class=\\"token builtin\\">address</span> _asset<span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token builtin\\">uint256</span> _amount<span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token builtin\\">address</span> firstPairAddress<span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token builtin\\">address</span> secondPairAddress<span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token builtin\\">uint</span> percentageToPayToCoinbase\\n    <span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">external</span> onlyOwner <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// 接收贷款地址</span>\\n        <span class=\\"token builtin\\">address</span> receiverAddress <span class=\\"token operator\\">=</span> <span class=\\"token builtin\\">address</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">// 贷款的token</span>\\n        <span class=\\"token builtin\\">address</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> <span class=\\"token keyword\\">memory</span> assets <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">address</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        assets<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> _asset<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">// 贷款数量</span>\\n        <span class=\\"token builtin\\">uint256</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> <span class=\\"token keyword\\">memory</span> amounts <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">uint256</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        amounts<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> _amount<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">// 贷款模式</span>\\n        <span class=\\"token builtin\\">uint256</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> <span class=\\"token keyword\\">memory</span> modes <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">uint256</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        modes<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 0 = no debt, 1 = stable, 2 = variable</span>\\n\\n        <span class=\\"token builtin\\">address</span> onBehalfOf <span class=\\"token operator\\">=</span> <span class=\\"token builtin\\">address</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">// 对地址进行加密</span>\\n        <span class=\\"token builtin\\">bytes</span> <span class=\\"token keyword\\">memory</span> params <span class=\\"token operator\\">=</span> abi<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">encode</span><span class=\\"token punctuation\\">(</span>firstPairAddress<span class=\\"token punctuation\\">,</span> secondPairAddress<span class=\\"token punctuation\\">,</span> percentageToPayToCoinbase<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token builtin\\">uint16</span> referralCode <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n\\n        lendingPool<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">flashLoan</span><span class=\\"token punctuation\\">(</span>\\n            receiverAddress<span class=\\"token punctuation\\">,</span>\\n            assets<span class=\\"token punctuation\\">,</span>\\n            amounts<span class=\\"token punctuation\\">,</span>\\n            modes<span class=\\"token punctuation\\">,</span>\\n            onBehalfOf<span class=\\"token punctuation\\">,</span>\\n            params<span class=\\"token punctuation\\">,</span>\\n            referralCode\\n        <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">// Override this function from FlashLoanSimpleReceiverBase to specify what happens when you receive the flash loan</span>\\n    <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">executeOperation</span><span class=\\"token punctuation\\">(</span>\\n        <span class=\\"token builtin\\">address</span> asset<span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token builtin\\">uint256</span> amount<span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token builtin\\">uint256</span> premium<span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token builtin\\">address</span> initiator<span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token builtin\\">bytes</span> <span class=\\"token keyword\\">calldata</span> params\\n    <span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">external</span> override <span class=\\"token keyword\\">returns</span> <span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">bool</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// Ensure the loan is for the correct asset and is sent from the LendingPool</span>\\n        <span class=\\"token comment\\">// 确保贷款从正确的token的池子</span>\\n        <span class=\\"token keyword\\">require</span><span class=\\"token punctuation\\">(</span>msg<span class=\\"token punctuation\\">.</span>sender <span class=\\"token operator\\">==</span> <span class=\\"token builtin\\">address</span><span class=\\"token punctuation\\">(</span>lendingPool<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Invalid sender\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">// 保证池子数量大于贷款数量</span>\\n        <span class=\\"token keyword\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">IERC20</span><span class=\\"token punctuation\\">(</span>asset<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">balanceOf</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">address</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&gt;=</span> amount<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Did not receive loan\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token comment\\">// Decode the params and execute the arbitrage</span>\\n        <span class=\\"token comment\\">// 解密获取两个池子地址</span>\\n        <span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">address</span> firstPairAddress<span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">address</span> secondPairAddress<span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">uint</span> percentageToPayToCoinbase<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=</span> abi<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">decode</span><span class=\\"token punctuation\\">(</span>params<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">address</span><span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">address</span><span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">uint</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token function\\">executeArbitrage</span><span class=\\"token punctuation\\">(</span>firstPairAddress<span class=\\"token punctuation\\">,</span> secondPairAddress<span class=\\"token punctuation\\">,</span> percentageToPayToCoinbase<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n         <span class=\\"token comment\\">// 计算还款</span>\\n        <span class=\\"token comment\\">// Calculate amount to repay, which is the loan amount plus the premium</span>\\n        <span class=\\"token builtin\\">uint256</span> totalDebt <span class=\\"token operator\\">=</span> amount<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">add</span><span class=\\"token punctuation\\">(</span>premium<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">// 还款给池子</span>\\n        <span class=\\"token comment\\">// Transfer funds back to repay the flash loan</span>\\n        <span class=\\"token keyword\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">IERC20</span><span class=\\"token punctuation\\">(</span>asset<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">transferFrom</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">address</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">address</span><span class=\\"token punctuation\\">(</span>lendingPool<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> totalDebt<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Failed to repay loan\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">/// @notice Executes an arbitrage transaction between two Uniswap V2 pairs.</span>\\n    <span class=\\"token comment\\">/// @notice Pair addresses need to be computed off-chain.</span>\\n    <span class=\\"token comment\\">/// @dev Only the contract owner can call this function.</span>\\n    <span class=\\"token comment\\">/// @param firstPairAddress Address of the first Uniswap V2 pair.</span>\\n    <span class=\\"token comment\\">/// @param secondPairAddress Address of the second Uniswap V2 pair.</span>\\n    <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">executeArbitrage</span><span class=\\"token punctuation\\">(</span>\\n        <span class=\\"token builtin\\">address</span> firstPairAddress<span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token builtin\\">address</span> secondPairAddress<span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token builtin\\">uint</span> percentageToPayToCoinbase\\n    <span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">internal</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// 获取到之前有多少weth</span>\\n        <span class=\\"token builtin\\">uint256</span> balanceBefore <span class=\\"token operator\\">=</span> <span class=\\"token function\\">IERC20</span><span class=\\"token punctuation\\">(</span>WETH_ADDRESS<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">balanceOf</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">address</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">// 第一个池子</span>\\n        IUniswapV2Pair firstPair <span class=\\"token operator\\">=</span> <span class=\\"token function\\">IUniswapV2Pair</span><span class=\\"token punctuation\\">(</span>firstPairAddress<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">// 第二个池子</span>\\n        IUniswapV2Pair secondPair <span class=\\"token operator\\">=</span> <span class=\\"token function\\">IUniswapV2Pair</span><span class=\\"token punctuation\\">(</span>secondPairAddress<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">// 池子数据</span>\\n        IPairReserves<span class=\\"token punctuation\\">.</span>PairReserves <span class=\\"token keyword\\">memory</span> firstPairData <span class=\\"token operator\\">=</span> <span class=\\"token function\\">getPairData</span><span class=\\"token punctuation\\">(</span>firstPair<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        IPairReserves<span class=\\"token punctuation\\">.</span>PairReserves <span class=\\"token keyword\\">memory</span> secondPairData <span class=\\"token operator\\">=</span> <span class=\\"token function\\">getPairData</span><span class=\\"token punctuation\\">(</span>secondPair<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token comment\\">// 获取借贷数量</span>\\n        <span class=\\"token builtin\\">uint256</span> amountIn <span class=\\"token operator\\">=</span> <span class=\\"token function\\">getAmountIn</span><span class=\\"token punctuation\\">(</span>firstPairData<span class=\\"token punctuation\\">,</span> secondPairData<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">// 转移给第一个池子特定数量</span>\\n        <span class=\\"token function\\">IERC20</span><span class=\\"token punctuation\\">(</span>WETH_ADDRESS<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">transfer</span><span class=\\"token punctuation\\">(</span>firstPairAddress<span class=\\"token punctuation\\">,</span> amountIn<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token builtin\\">uint256</span> firstPairAmountOut<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token builtin\\">uint256</span> finalAmountOut<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>firstPairData<span class=\\"token punctuation\\">.</span>isWETHZero <span class=\\"token operator\\">==</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token comment\\">// 获取可以换出来的数量</span>\\n            firstPairAmountOut <span class=\\"token operator\\">=</span> <span class=\\"token function\\">getAmountOut</span><span class=\\"token punctuation\\">(</span>amountIn<span class=\\"token punctuation\\">,</span> firstPairData<span class=\\"token punctuation\\">.</span>reserve0<span class=\\"token punctuation\\">,</span> firstPairData<span class=\\"token punctuation\\">.</span>reserve1<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            finalAmountOut <span class=\\"token operator\\">=</span> <span class=\\"token function\\">getAmountOut</span><span class=\\"token punctuation\\">(</span>firstPairAmountOut<span class=\\"token punctuation\\">,</span> secondPairData<span class=\\"token punctuation\\">.</span>reserve1<span class=\\"token punctuation\\">,</span> secondPairData<span class=\\"token punctuation\\">.</span>reserve0<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n            firstPair<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">swap</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> firstPairAmountOut<span class=\\"token punctuation\\">,</span> secondPairAddress<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            secondPair<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">swap</span><span class=\\"token punctuation\\">(</span>finalAmountOut<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">address</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n            firstPairAmountOut <span class=\\"token operator\\">=</span> <span class=\\"token function\\">getAmountOut</span><span class=\\"token punctuation\\">(</span>amountIn<span class=\\"token punctuation\\">,</span> firstPairData<span class=\\"token punctuation\\">.</span>reserve1<span class=\\"token punctuation\\">,</span> firstPairData<span class=\\"token punctuation\\">.</span>reserve0<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            finalAmountOut <span class=\\"token operator\\">=</span> <span class=\\"token function\\">getAmountOut</span><span class=\\"token punctuation\\">(</span>firstPairAmountOut<span class=\\"token punctuation\\">,</span> secondPairData<span class=\\"token punctuation\\">.</span>reserve0<span class=\\"token punctuation\\">,</span> secondPairData<span class=\\"token punctuation\\">.</span>reserve1<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n            firstPair<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">swap</span><span class=\\"token punctuation\\">(</span>firstPairAmountOut<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> secondPairAddress<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            secondPair<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">swap</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> finalAmountOut<span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">address</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token comment\\">// 获取套利后的金额</span>\\n        <span class=\\"token builtin\\">uint256</span> balanceAfter <span class=\\"token operator\\">=</span> <span class=\\"token function\\">IERC20</span><span class=\\"token punctuation\\">(</span>WETH_ADDRESS<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">balanceOf</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">address</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">// 保证赚钱了</span>\\n        <span class=\\"token keyword\\">require</span><span class=\\"token punctuation\\">(</span>balanceAfter <span class=\\"token operator\\">&gt;</span> balanceBefore<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Arbitrage failed\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">// 赚钱比例</span>\\n        <span class=\\"token builtin\\">uint</span> profit <span class=\\"token operator\\">=</span> balanceAfter<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">sub</span><span class=\\"token punctuation\\">(</span>balanceBefore<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">// 赚钱比例给矿工</span>\\n        <span class=\\"token builtin\\">uint</span> profitToCoinbase <span class=\\"token operator\\">=</span> profit<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mul</span><span class=\\"token punctuation\\">(</span>percentageToPayToCoinbase<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">div</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">100</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">// 提款给矿工</span>\\n        <span class=\\"token function\\">IWETH</span><span class=\\"token punctuation\\">(</span>WETH_ADDRESS<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">withdraw</span><span class=\\"token punctuation\\">(</span>profitToCoinbase<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">// 转账给矿工</span>\\n        block<span class=\\"token punctuation\\">.</span>coinbase<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">transfer</span><span class=\\"token punctuation\\">(</span>profitToCoinbase<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">/// @notice Calculates the required input amount for the arbitrage transaction.</span>\\n    <span class=\\"token comment\\">/// @param firstPairData Struct containing data about the first Uniswap V2 pair.</span>\\n    <span class=\\"token comment\\">/// @param secondPairData Struct containing data about the second Uniswap V2 pair.</span>\\n    <span class=\\"token comment\\">/// @return amountIn, the optimal amount to trade to arbitrage two v2 pairs.</span>\\n    <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">getAmountIn</span><span class=\\"token punctuation\\">(</span>\\n        IPairReserves<span class=\\"token punctuation\\">.</span>PairReserves <span class=\\"token keyword\\">memory</span> firstPairData<span class=\\"token punctuation\\">,</span>\\n        IPairReserves<span class=\\"token punctuation\\">.</span>PairReserves <span class=\\"token keyword\\">memory</span> secondPairData\\n    <span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">returns</span> <span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">uint256</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token builtin\\">uint256</span> numerator <span class=\\"token operator\\">=</span> <span class=\\"token function\\">getNumerator</span><span class=\\"token punctuation\\">(</span>firstPairData<span class=\\"token punctuation\\">,</span> secondPairData<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token builtin\\">uint256</span> denominator <span class=\\"token operator\\">=</span> <span class=\\"token function\\">getDenominator</span><span class=\\"token punctuation\\">(</span>firstPairData<span class=\\"token punctuation\\">,</span> secondPairData<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token builtin\\">uint256</span> amountIn <span class=\\"token operator\\">=</span>\\n            numerator\\n            <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mul</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1000</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">div</span><span class=\\"token punctuation\\">(</span>denominator<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token keyword\\">return</span> amountIn<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">getNumerator</span><span class=\\"token punctuation\\">(</span>\\n        IPairReserves<span class=\\"token punctuation\\">.</span>PairReserves <span class=\\"token keyword\\">memory</span> firstPairData<span class=\\"token punctuation\\">,</span>\\n        IPairReserves<span class=\\"token punctuation\\">.</span>PairReserves <span class=\\"token keyword\\">memory</span> secondPairData\\n    <span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">view</span> <span class=\\"token keyword\\">returns</span> <span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">uint256</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>firstPairData<span class=\\"token punctuation\\">.</span>isWETHZero <span class=\\"token operator\\">==</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token builtin\\">uint</span> presqrt <span class=\\"token operator\\">=</span>\\n                uniswappyFee\\n                    <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mul</span><span class=\\"token punctuation\\">(</span>uniswappyFee<span class=\\"token punctuation\\">)</span>\\n                    <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mul</span><span class=\\"token punctuation\\">(</span>firstPairData<span class=\\"token punctuation\\">.</span>reserve1<span class=\\"token punctuation\\">)</span>\\n                    <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mul</span><span class=\\"token punctuation\\">(</span>secondPairData<span class=\\"token punctuation\\">.</span>reserve0<span class=\\"token punctuation\\">)</span>\\n                    <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">div</span><span class=\\"token punctuation\\">(</span>secondPairData<span class=\\"token punctuation\\">.</span>reserve1<span class=\\"token punctuation\\">)</span>\\n                    <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">div</span><span class=\\"token punctuation\\">(</span>firstPairData<span class=\\"token punctuation\\">.</span>reserve0<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n            <span class=\\"token builtin\\">uint256</span> numerator <span class=\\"token operator\\">=</span>\\n            <span class=\\"token punctuation\\">(</span>\\n                <span class=\\"token function\\">sqrt</span><span class=\\"token punctuation\\">(</span>presqrt<span class=\\"token punctuation\\">)</span>\\n                <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">sub</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1e3</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mul</span><span class=\\"token punctuation\\">(</span>secondPairData<span class=\\"token punctuation\\">.</span>reserve1<span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mul</span><span class=\\"token punctuation\\">(</span>firstPairData<span class=\\"token punctuation\\">.</span>reserve0<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n            <span class=\\"token keyword\\">return</span> numerator<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token builtin\\">uint</span> presqrt <span class=\\"token operator\\">=</span>\\n                uniswappyFee\\n                    <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mul</span><span class=\\"token punctuation\\">(</span>uniswappyFee<span class=\\"token punctuation\\">)</span>\\n                    <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mul</span><span class=\\"token punctuation\\">(</span>firstPairData<span class=\\"token punctuation\\">.</span>reserve0<span class=\\"token punctuation\\">)</span>\\n                    <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mul</span><span class=\\"token punctuation\\">(</span>secondPairData<span class=\\"token punctuation\\">.</span>reserve1<span class=\\"token punctuation\\">)</span>\\n                    <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">div</span><span class=\\"token punctuation\\">(</span>secondPairData<span class=\\"token punctuation\\">.</span>reserve0<span class=\\"token punctuation\\">)</span>\\n                    <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">div</span><span class=\\"token punctuation\\">(</span>firstPairData<span class=\\"token punctuation\\">.</span>reserve1<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n            <span class=\\"token builtin\\">uint256</span> numerator <span class=\\"token operator\\">=</span>\\n            <span class=\\"token punctuation\\">(</span>\\n                <span class=\\"token function\\">sqrt</span><span class=\\"token punctuation\\">(</span>presqrt<span class=\\"token punctuation\\">)</span>\\n                <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">sub</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1e3</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mul</span><span class=\\"token punctuation\\">(</span>secondPairData<span class=\\"token punctuation\\">.</span>reserve0<span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mul</span><span class=\\"token punctuation\\">(</span>firstPairData<span class=\\"token punctuation\\">.</span>reserve1<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n            <span class=\\"token keyword\\">return</span> numerator<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">// 这个算法是什么？</span>\\n    <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">getDenominator</span><span class=\\"token punctuation\\">(</span>\\n            IPairReserves<span class=\\"token punctuation\\">.</span>PairReserves <span class=\\"token keyword\\">memory</span> firstPairData<span class=\\"token punctuation\\">,</span>\\n            IPairReserves<span class=\\"token punctuation\\">.</span>PairReserves <span class=\\"token keyword\\">memory</span> secondPairData\\n        <span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">returns</span> <span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">uint256</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>firstPairData<span class=\\"token punctuation\\">.</span>isWETHZero <span class=\\"token operator\\">==</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token builtin\\">uint256</span> denominator <span class=\\"token operator\\">=</span>\\n                <span class=\\"token punctuation\\">(</span>\\n                    uniswappyFee\\n                    <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mul</span><span class=\\"token punctuation\\">(</span>secondPairData<span class=\\"token punctuation\\">.</span>reserve1<span class=\\"token punctuation\\">)</span>\\n                    <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mul</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1000</span><span class=\\"token punctuation\\">)</span>\\n                <span class=\\"token punctuation\\">)</span>\\n                <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">add</span><span class=\\"token punctuation\\">(</span>\\n                    uniswappyFee\\n                    <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mul</span><span class=\\"token punctuation\\">(</span>uniswappyFee<span class=\\"token punctuation\\">)</span>\\n                    <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mul</span><span class=\\"token punctuation\\">(</span>firstPairData<span class=\\"token punctuation\\">.</span>reserve1<span class=\\"token punctuation\\">)</span>\\n                <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">return</span> denominator<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token builtin\\">uint256</span> denominator <span class=\\"token operator\\">=</span>\\n                <span class=\\"token punctuation\\">(</span>\\n                    uniswappyFee\\n                    <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mul</span><span class=\\"token punctuation\\">(</span>secondPairData<span class=\\"token punctuation\\">.</span>reserve0<span class=\\"token punctuation\\">)</span>\\n                    <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mul</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1000</span><span class=\\"token punctuation\\">)</span>\\n                <span class=\\"token punctuation\\">)</span>\\n                <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">add</span><span class=\\"token punctuation\\">(</span>\\n                    uniswappyFee\\n                    <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mul</span><span class=\\"token punctuation\\">(</span>uniswappyFee<span class=\\"token punctuation\\">)</span>\\n                    <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mul</span><span class=\\"token punctuation\\">(</span>firstPairData<span class=\\"token punctuation\\">.</span>reserve0<span class=\\"token punctuation\\">)</span>\\n                <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">return</span> denominator<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">/// @notice Retrieves price and reserve data for a given Uniswap V2 pair. Also checks which token is WETH.</span>\\n    <span class=\\"token comment\\">/// @param pair The Uniswap V2 pair to retrieve data for.</span>\\n    <span class=\\"token comment\\">/// @return A PairReserves struct containing price and reserve data for the given pair.</span>\\n    <span class=\\"token comment\\">// 获取代币对数据</span>\\n    <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">getPairData</span><span class=\\"token punctuation\\">(</span>IUniswapV2Pair pair<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">view</span> <span class=\\"token keyword\\">returns</span> <span class=\\"token punctuation\\">(</span>IPairReserves<span class=\\"token punctuation\\">.</span>PairReserves <span class=\\"token keyword\\">memory</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">uint256</span> reserve0<span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">uint256</span> reserve1<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=</span> pair<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getReserves</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token builtin\\">uint256</span> price<span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token builtin\\">bool</span> isWETHZero <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>pair<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">token0</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">==</span> WETH_ADDRESS<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            price <span class=\\"token operator\\">=</span> reserve1<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mul</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1e18</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">div</span><span class=\\"token punctuation\\">(</span>reserve0<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            isWETHZero <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n            price <span class=\\"token operator\\">=</span> reserve0<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mul</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1e18</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">div</span><span class=\\"token punctuation\\">(</span>reserve1<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n\\n        <span class=\\"token keyword\\">return</span> IPairReserves<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">PairReserves</span><span class=\\"token punctuation\\">(</span>reserve0<span class=\\"token punctuation\\">,</span> reserve1<span class=\\"token punctuation\\">,</span> price<span class=\\"token punctuation\\">,</span> isWETHZero<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">/// @notice Calculates the square root of a given number.</span>\\n    <span class=\\"token comment\\">/// @param x: The number to calculate the square root of.</span>\\n    <span class=\\"token comment\\">/// @return y: The square root of the given number.</span>\\n    <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">sqrt</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">uint256</span> x<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">pure</span> <span class=\\"token keyword\\">returns</span> <span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">uint256</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>x <span class=\\"token operator\\">==</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token builtin\\">uint256</span> z <span class=\\"token operator\\">=</span> x<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">add</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">div</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token builtin\\">uint256</span> y <span class=\\"token operator\\">=</span> x<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span>z <span class=\\"token operator\\">&lt;</span> y<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            y <span class=\\"token operator\\">=</span> z<span class=\\"token punctuation\\">;</span>\\n            z <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>x<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">div</span><span class=\\"token punctuation\\">(</span>z<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">add</span><span class=\\"token punctuation\\">(</span>z<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">div</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token keyword\\">return</span> y<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n     <span class=\\"token comment\\">// 计算可以获得的代币，后续研究下算法</span>\\n    <span class=\\"token comment\\">/// @notice Calculates the output amount for a given input amount and reserves.</span>\\n    <span class=\\"token comment\\">/// @param amountIn The input amount.</span>\\n    <span class=\\"token comment\\">/// @param reserveIn The reserve of the input token.</span>\\n    <span class=\\"token comment\\">/// @param reserveOut The reserve of the output token.</span>\\n    <span class=\\"token comment\\">/// @return amountOut The output amount.</span>\\n    <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">getAmountOut</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">uint</span> amountIn<span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token builtin\\">uint</span> reserveIn<span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token builtin\\">uint</span> reserveOut\\n    <span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">internal</span> <span class=\\"token keyword\\">pure</span> <span class=\\"token keyword\\">returns</span> <span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">uint</span> amountOut<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// todo后续研究下白皮书，这里有重要算法</span>\\n        <span class=\\"token builtin\\">uint</span> amountInWithFee <span class=\\"token operator\\">=</span> amountIn<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mul</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">997</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token builtin\\">uint</span> numerator <span class=\\"token operator\\">=</span> amountInWithFee<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mul</span><span class=\\"token punctuation\\">(</span>reserveOut<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token builtin\\">uint</span> denominator <span class=\\"token operator\\">=</span> reserveIn<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mul</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1000</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">add</span><span class=\\"token punctuation\\">(</span>amountInWithFee<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        amountOut <span class=\\"token operator\\">=</span> numerator <span class=\\"token operator\\">/</span> denominator<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span> amountOut<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">/// @notice Transfers all WETH held by the contract to the contract owner.</span>\\n    <span class=\\"token comment\\">/// @dev Only the contract owner can call this function.</span>\\n    <span class=\\"token comment\\">// 提款</span>\\n    <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">withdrawWETHToOwner</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">external</span> onlyOwner <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token builtin\\">uint256</span> balance <span class=\\"token operator\\">=</span> <span class=\\"token function\\">IERC20</span><span class=\\"token punctuation\\">(</span>WETH_ADDRESS<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">balanceOf</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">address</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token function\\">IERC20</span><span class=\\"token punctuation\\">(</span>WETH_ADDRESS<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">transfer</span><span class=\\"token punctuation\\">(</span>msg<span class=\\"token punctuation\\">.</span>sender<span class=\\"token punctuation\\">,</span> balance<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">/// @notice Transfers all ETH held by the contract to the contract owner.</span>\\n    <span class=\\"token comment\\">/// @dev Only the contract owner can call this function.</span>\\n    <span class=\\"token comment\\">// 提款</span>\\n    <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">withdrawETHToOwner</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">external</span> onlyOwner <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token builtin\\">uint256</span> balance <span class=\\"token operator\\">=</span> <span class=\\"token builtin\\">address</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>balance<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">payable</span><span class=\\"token punctuation\\">(</span>msg<span class=\\"token punctuation\\">.</span>sender<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">transfer</span><span class=\\"token punctuation\\">(</span>balance<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">/// @notice Executes a call to another contract with the provided data and value.</span>\\n    <span class=\\"token comment\\">/// @dev Only the contract owner can call this function.</span>\\n    <span class=\\"token comment\\">/// @dev Reverted calls will result in a revert.</span>\\n    <span class=\\"token comment\\">/// @param _to The address of the contract to call.</span>\\n    <span class=\\"token comment\\">/// @param _value The amount of Ether to send with the call.</span>\\n    <span class=\\"token comment\\">/// @param _data The calldata to send with the call.</span>\\n    <span class=\\"token comment\\">// 转账辅助函数</span>\\n    <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">call</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">address</span> <span class=\\"token keyword\\">payable</span> _to<span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">uint256</span> _value<span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">bytes</span> <span class=\\"token keyword\\">memory</span> _data<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">external</span> onlyOwner <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">bool</span> success<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=</span> _to<span class=\\"token punctuation\\">.</span>call<span class=\\"token punctuation\\">{</span>value<span class=\\"token punctuation\\">:</span> _value<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">(</span>_data<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">require</span><span class=\\"token punctuation\\">(</span>success<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"External call failed\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">// 可以接受eth</span>\\n    <span class=\\"token comment\\">/// @notice Fallback function that allows the contract to receive Ether.</span>\\n    <span class=\\"token function\\">receive</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">external</span> <span class=\\"token keyword\\">payable</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{},"autoDesc":true}');export{n as data};
