import{_ as n,V as s,W as a,a0 as t}from"./framework-e54e0297.js";const p={},e=t(`<h1 id="uniswapv2pair" tabindex="-1"><a class="header-anchor" href="#uniswapv2pair" aria-hidden="true">#</a> UniswapV2Pair</h1><p>流动池作用提供AMM机制，也就是股市做市商概念，做市商会出现无常损失，赚的时候赚的少，亏的时候亏的多，使用手续费进行补偿无常损失。</p><h2 id="手续费进行补偿" tabindex="-1"><a class="header-anchor" href="#手续费进行补偿" aria-hidden="true">#</a> 手续费进行补偿</h2><p>补偿所有人和给予开发者收益时有两种方式可以处理。</p><ol><li>根据收益/（总用户收益 + 开发者收益），产生新的流动性并按照比例进行分发，分发时会导致<code>Gas</code>费飙升，此种方案不好。</li><li>根据收益 <em>开发者比例 / （收益</em> （1- 开发者比例） + 原流动性） 产生新的流动性，并只需要增加给开发者即可。</li></ol><h2 id="设计" tabindex="-1"><a class="header-anchor" href="#设计" aria-hidden="true">#</a> 设计</h2><p>给用户分权益就需要凭证，根据凭证分收益，凭证也是一种代币。</p><h3 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>pragma solidity <span class="token operator">&gt;=</span><span class="token number">0.5</span><span class="token number">.0</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">IUniswapV2Pair</span> <span class="token punctuation">{</span>
    <span class="token comment">// 事件</span>
    event <span class="token function">Approval</span><span class="token punctuation">(</span>address indexed owner<span class="token punctuation">,</span> address indexed spender<span class="token punctuation">,</span> uint value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    event <span class="token function">Transfer</span><span class="token punctuation">(</span>address indexed from<span class="token punctuation">,</span> address indexed to<span class="token punctuation">,</span> uint value<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 代币代码，可以参考ERC20</span>
    <span class="token keyword">function</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> external pure <span class="token function">returns</span> <span class="token punctuation">(</span>string memory<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span> external pure <span class="token function">returns</span> <span class="token punctuation">(</span>string memory<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">decimals</span><span class="token punctuation">(</span><span class="token punctuation">)</span> external pure <span class="token function">returns</span> <span class="token punctuation">(</span>uint8<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">totalSupply</span><span class="token punctuation">(</span><span class="token punctuation">)</span> external view <span class="token function">returns</span> <span class="token punctuation">(</span>uint<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">balanceOf</span><span class="token punctuation">(</span><span class="token parameter">address owner</span><span class="token punctuation">)</span> external view <span class="token function">returns</span> <span class="token punctuation">(</span>uint<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">allowance</span><span class="token punctuation">(</span><span class="token parameter">address owner<span class="token punctuation">,</span> address spender</span><span class="token punctuation">)</span> external view <span class="token function">returns</span> <span class="token punctuation">(</span>uint<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">function</span> <span class="token function">approve</span><span class="token punctuation">(</span><span class="token parameter">address spender<span class="token punctuation">,</span> uint value</span><span class="token punctuation">)</span> external <span class="token function">returns</span> <span class="token punctuation">(</span>bool<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">transfer</span><span class="token punctuation">(</span><span class="token parameter">address to<span class="token punctuation">,</span> uint value</span><span class="token punctuation">)</span> external <span class="token function">returns</span> <span class="token punctuation">(</span>bool<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">transferFrom</span><span class="token punctuation">(</span><span class="token parameter">address from<span class="token punctuation">,</span> address to<span class="token punctuation">,</span> uint value</span><span class="token punctuation">)</span> external <span class="token function">returns</span> <span class="token punctuation">(</span>bool<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">function</span> <span class="token constant">DOMAIN_SEPARATOR</span><span class="token punctuation">(</span><span class="token punctuation">)</span> external view <span class="token function">returns</span> <span class="token punctuation">(</span>bytes32<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token constant">PERMIT_TYPEHASH</span><span class="token punctuation">(</span><span class="token punctuation">)</span> external pure <span class="token function">returns</span> <span class="token punctuation">(</span>bytes32<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 代币代码在上面</span>
    <span class="token keyword">function</span> <span class="token function">nonces</span><span class="token punctuation">(</span><span class="token parameter">address owner</span><span class="token punctuation">)</span> external view <span class="token function">returns</span> <span class="token punctuation">(</span>uint<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">function</span> <span class="token function">permit</span><span class="token punctuation">(</span><span class="token parameter">address owner<span class="token punctuation">,</span> address spender<span class="token punctuation">,</span> uint value<span class="token punctuation">,</span> uint deadline<span class="token punctuation">,</span> uint8 v<span class="token punctuation">,</span> bytes32 r<span class="token punctuation">,</span> bytes32 s</span><span class="token punctuation">)</span> external<span class="token punctuation">;</span>

    event <span class="token function">Mint</span><span class="token punctuation">(</span>address indexed sender<span class="token punctuation">,</span> uint amount0<span class="token punctuation">,</span> uint amount1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    event <span class="token function">Burn</span><span class="token punctuation">(</span>address indexed sender<span class="token punctuation">,</span> uint amount0<span class="token punctuation">,</span> uint amount1<span class="token punctuation">,</span> address indexed to<span class="token punctuation">)</span><span class="token punctuation">;</span>
    event <span class="token function">Swap</span><span class="token punctuation">(</span>
        address indexed sender<span class="token punctuation">,</span>
        uint amount0In<span class="token punctuation">,</span>
        uint amount1In<span class="token punctuation">,</span>
        uint amount0Out<span class="token punctuation">,</span>
        uint amount1Out<span class="token punctuation">,</span>
        address indexed to
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    event <span class="token function">Sync</span><span class="token punctuation">(</span>uint112 reserve0<span class="token punctuation">,</span> uint112 reserve1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 最小流动性</span>
    <span class="token keyword">function</span> <span class="token constant">MINIMUM_LIQUIDITY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> external pure <span class="token function">returns</span> <span class="token punctuation">(</span>uint<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 工厂</span>
    <span class="token keyword">function</span> <span class="token function">factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> external view <span class="token function">returns</span> <span class="token punctuation">(</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 代币A</span>
    <span class="token keyword">function</span> <span class="token function">token0</span><span class="token punctuation">(</span><span class="token punctuation">)</span> external view <span class="token function">returns</span> <span class="token punctuation">(</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 代币B</span>
    <span class="token keyword">function</span> <span class="token function">token1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> external view <span class="token function">returns</span> <span class="token punctuation">(</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 返回各种代币总量和最后更新时间</span>
    <span class="token keyword">function</span> <span class="token function">getReserves</span><span class="token punctuation">(</span><span class="token punctuation">)</span> external view <span class="token function">returns</span> <span class="token punctuation">(</span>uint112 reserve0<span class="token punctuation">,</span> uint112 reserve1<span class="token punctuation">,</span> uint32 blockTimestampLast<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//</span>
    <span class="token keyword">function</span> <span class="token function">price0CumulativeLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span> external view <span class="token function">returns</span> <span class="token punctuation">(</span>uint<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">price1CumulativeLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span> external view <span class="token function">returns</span> <span class="token punctuation">(</span>uint<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 最后计算出的k , x * y  = k</span>
    <span class="token keyword">function</span> <span class="token function">kLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span> external view <span class="token function">returns</span> <span class="token punctuation">(</span>uint<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">function</span> <span class="token function">mint</span><span class="token punctuation">(</span><span class="token parameter">address to</span><span class="token punctuation">)</span> external <span class="token function">returns</span> <span class="token punctuation">(</span>uint liquidity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">burn</span><span class="token punctuation">(</span><span class="token parameter">address to</span><span class="token punctuation">)</span> external <span class="token function">returns</span> <span class="token punctuation">(</span>uint amount0<span class="token punctuation">,</span> uint amount1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token parameter">uint amount0Out<span class="token punctuation">,</span> uint amount1Out<span class="token punctuation">,</span> address to<span class="token punctuation">,</span> bytes calldata data</span><span class="token punctuation">)</span> external<span class="token punctuation">;</span>
    <span class="token comment">// 强制同步代币账簿和当前一致</span>
    <span class="token keyword">function</span> <span class="token function">skim</span><span class="token punctuation">(</span><span class="token parameter">address to</span><span class="token punctuation">)</span> external<span class="token punctuation">;</span>
    <span class="token comment">// 强制同步代币到当前记录</span>
    <span class="token keyword">function</span> <span class="token function">sync</span><span class="token punctuation">(</span><span class="token punctuation">)</span> external<span class="token punctuation">;</span>
    <span class="token comment">// 初始化，主要是设置两种代币</span>
    <span class="token keyword">function</span> <span class="token function">initialize</span><span class="token punctuation">(</span><span class="token parameter">address<span class="token punctuation">,</span> address</span><span class="token punctuation">)</span> external<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建pair" tabindex="-1"><a class="header-anchor" href="#创建pair" aria-hidden="true">#</a> 创建Pair</h3><ol><li>在创建Pair的时候使用的是字节码创建，工厂模式直接字节码创建，并在<code>initialize</code>方法中设置两种代币。</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 字节码</span>
bytes memory bytecode <span class="token operator">=</span> <span class="token function">type</span><span class="token punctuation">(</span>UniswapV2Pair<span class="token punctuation">)</span><span class="token punctuation">.</span>creationCode<span class="token punctuation">;</span>
<span class="token comment">// 加盐</span>
bytes32 salt <span class="token operator">=</span> <span class="token function">keccak256</span><span class="token punctuation">(</span>abi<span class="token punctuation">.</span><span class="token function">encodePacked</span><span class="token punctuation">(</span>token0<span class="token punctuation">,</span> token1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
assembly <span class="token punctuation">{</span>
    <span class="token literal-property property">pair</span> <span class="token operator">:</span><span class="token operator">=</span> <span class="token function">create2</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">add</span><span class="token punctuation">(</span>bytecode<span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">mload</span><span class="token punctuation">(</span>bytecode<span class="token punctuation">)</span><span class="token punctuation">,</span> salt<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// 拿到初始化地址，设置两种代币</span>
<span class="token function">IUniswapV2Pair</span><span class="token punctuation">(</span>pair<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span>token0<span class="token punctuation">,</span> token1<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="minimum-liquidity" tabindex="-1"><a class="header-anchor" href="#minimum-liquidity" aria-hidden="true">#</a> MINIMUM_LIQUIDITY</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 设置最小流动池数量</span>
uint <span class="token keyword">public</span> constant <span class="token constant">MINIMUM_LIQUIDITY</span> <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">**</span> <span class="token number">3</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="others" tabindex="-1"><a class="header-anchor" href="#others" aria-hidden="true">#</a> others</h3><p>// todo</p><h3 id="更新" tabindex="-1"><a class="header-anchor" href="#更新" aria-hidden="true">#</a> 更新</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">_update</span><span class="token punctuation">(</span><span class="token parameter">uint balance0<span class="token punctuation">,</span> uint balance1<span class="token punctuation">,</span> uint112 _reserve0<span class="token punctuation">,</span> uint112 _reserve1</span><span class="token punctuation">)</span> <span class="token keyword">private</span> <span class="token punctuation">{</span>
      <span class="token comment">// 要求代币没有越界</span>
      <span class="token function">require</span><span class="token punctuation">(</span>balance0 <span class="token operator">&lt;=</span> <span class="token function">uint112</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> balance1 <span class="token operator">&lt;=</span> <span class="token function">uint112</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;UniswapV2: OVERFLOW&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// 将时间转换</span>
      uint32 blockTimestamp <span class="token operator">=</span> <span class="token function">uint32</span><span class="token punctuation">(</span>block<span class="token punctuation">.</span>timestamp <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">**</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// 时间语言机器</span>
      uint32 timeElapsed <span class="token operator">=</span> blockTimestamp <span class="token operator">-</span> blockTimestampLast<span class="token punctuation">;</span> <span class="token comment">// overflow is desired</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>timeElapsed <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> _reserve0 <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> _reserve1 <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// * never overflows, and + overflow is desired</span>
          price0CumulativeLast <span class="token operator">+=</span> <span class="token function">uint</span><span class="token punctuation">(</span><span class="token constant">UQ112x112</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>_reserve1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">uqdiv</span><span class="token punctuation">(</span>_reserve0<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> timeElapsed<span class="token punctuation">;</span>
          price1CumulativeLast <span class="token operator">+=</span> <span class="token function">uint</span><span class="token punctuation">(</span><span class="token constant">UQ112x112</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>_reserve0<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">uqdiv</span><span class="token punctuation">(</span>_reserve1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> timeElapsed<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      reserve0 <span class="token operator">=</span> <span class="token function">uint112</span><span class="token punctuation">(</span>balance0<span class="token punctuation">)</span><span class="token punctuation">;</span>
      reserve1 <span class="token operator">=</span> <span class="token function">uint112</span><span class="token punctuation">(</span>balance1<span class="token punctuation">)</span><span class="token punctuation">;</span>
      blockTimestampLast <span class="token operator">=</span> blockTimestamp<span class="token punctuation">;</span>
      emit <span class="token function">Sync</span><span class="token punctuation">(</span>reserve0<span class="token punctuation">,</span> reserve1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sync" tabindex="-1"><a class="header-anchor" href="#sync" aria-hidden="true">#</a> sync</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 强制中心账薄与当前一致</span>
<span class="token comment">// force balances to match reserves</span>
<span class="token keyword">function</span> <span class="token function">skim</span><span class="token punctuation">(</span><span class="token parameter">address to</span><span class="token punctuation">)</span> external lock <span class="token punctuation">{</span>
    address _token0 <span class="token operator">=</span> token0<span class="token punctuation">;</span> <span class="token comment">// gas savings</span>
    address _token1 <span class="token operator">=</span> token1<span class="token punctuation">;</span> <span class="token comment">// gas savings</span>
    <span class="token function">_safeTransfer</span><span class="token punctuation">(</span>_token0<span class="token punctuation">,</span> to<span class="token punctuation">,</span> <span class="token constant">IERC20</span><span class="token punctuation">(</span>_token0<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sub</span><span class="token punctuation">(</span>reserve0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">_safeTransfer</span><span class="token punctuation">(</span>_token1<span class="token punctuation">,</span> to<span class="token punctuation">,</span> <span class="token constant">IERC20</span><span class="token punctuation">(</span>_token1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sub</span><span class="token punctuation">(</span>reserve1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 强制当前与中心账簿一致</span>
<span class="token comment">// force reserves to match balances</span>
<span class="token keyword">function</span> <span class="token function">sync</span><span class="token punctuation">(</span><span class="token punctuation">)</span> external lock <span class="token punctuation">{</span>
    <span class="token function">_update</span><span class="token punctuation">(</span><span class="token constant">IERC20</span><span class="token punctuation">(</span>token0<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">IERC20</span><span class="token punctuation">(</span>token1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> reserve0<span class="token punctuation">,</span> reserve1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,20),o=[e];function c(u,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","UniswapV2Pair.html.vue"]]);export{k as default};
