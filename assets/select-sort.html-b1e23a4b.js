const n=JSON.parse('{"key":"v-38f794c6","path":"/basic-skill/algorithms/sort/select-sort.html","title":"选择排序","lang":"zh-CN","frontmatter":{"description":"选择排序 “选择排序”不断地从(i，n]选择一个最小值插入到 i处。 概念 首先，找到数组中最小的那个元素； 其次，将它和数组的第一个元素交换位置（如果第一个元素就是最小元素那么它就和自己交换）； 再次，在剩下的元素中找到最小的元素，将它与数组的第二个元素交换位置； 如此往复，直到将整个数组排序。 代码 func selectSort(num []int) []int { length := len(num) // 从第0开始查找最小的值 for i := 0; i &lt; length; i++ { minIndex := i for j := i + 1; j &lt; length; j++ { if num[j] &lt; num[minIndex] { // 找到最小值 minIndex = j } } // 交换 temp := num[i] num[i] = num[minIndex] num[minIndex] = temp } return num }","head":[["meta",{"property":"og:url","content":"https://renfakai.com/basic-skill/algorithms/sort/select-sort.html"}],["meta",{"property":"og:site_name","content":"天道酬勤"}],["meta",{"property":"og:title","content":"选择排序"}],["meta",{"property":"og:description","content":"选择排序 “选择排序”不断地从(i，n]选择一个最小值插入到 i处。 概念 首先，找到数组中最小的那个元素； 其次，将它和数组的第一个元素交换位置（如果第一个元素就是最小元素那么它就和自己交换）； 再次，在剩下的元素中找到最小的元素，将它与数组的第二个元素交换位置； 如此往复，直到将整个数组排序。 代码 func selectSort(num []int) []int { length := len(num) // 从第0开始查找最小的值 for i := 0; i &lt; length; i++ { minIndex := i for j := i + 1; j &lt; length; j++ { if num[j] &lt; num[minIndex] { // 找到最小值 minIndex = j } } // 交换 temp := num[i] num[i] = num[minIndex] num[minIndex] = temp } return num }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-16T03:40:37.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-16T03:40:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"选择排序\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-16T03:40:37.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"概念","slug":"概念","link":"#概念","children":[]},{"level":2,"title":"代码","slug":"代码","link":"#代码","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1692157237000,"updatedTime":1692157237000,"contributors":[{"name":"renfakai","email":"rfk1118@gmail.com","commits":1}]},"readingTime":{"minutes":0.72,"words":216},"filePathRelative":"basic-skill/algorithms/sort/select-sort.md","localizedDate":"2023年8月16日","excerpt":"<h1> 选择排序</h1>\\n<p>“选择排序”不断地从<code>(i，n]</code>选择一个最小值插入到 <code>i</code>处。</p>\\n<h2> 概念</h2>\\n<ol>\\n<li>首先，找到数组中最小的那个元素；</li>\\n<li>其次，将它和数组的第一个元素交换位置（如果第一个元素就是最小元素那么它就和自己交换）；</li>\\n<li>再次，在剩下的元素中找到最小的元素，将它与数组的第二个元素交换位置；</li>\\n<li>如此往复，直到将整个数组排序。</li>\\n</ol>\\n<h2> 代码</h2>\\n<div class=\\"language-Go line-numbers-mode\\" data-ext=\\"Go\\"><pre class=\\"language-Go\\"><code>func selectSort(num []int) []int {\\n  length := len(num)\\n  // 从第0开始查找最小的值\\n  for i := 0; i &lt; length; i++ {\\n    minIndex := i\\n    for j := i + 1; j &lt; length; j++ {\\n      if num[j] &lt; num[minIndex] {\\n        // 找到最小值\\n        minIndex = j\\n      }\\n    }\\n    // 交换\\n    temp := num[i]\\n    num[i] = num[minIndex]\\n    num[minIndex] = temp\\n  }\\n  return num\\n}\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{},"autoDesc":true}');export{n as data};
