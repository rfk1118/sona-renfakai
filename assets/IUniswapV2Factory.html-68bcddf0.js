const n=JSON.parse('{"key":"v-4b734b08","path":"/web3/solitify/IUniswapV2Factory.html","title":"IUniswapV2Factory","lang":"zh-CN","frontmatter":{"description":"IUniswapV2Factory 工厂设计模式中开发中最常用的设计模式方一。 工厂方法按照模版创建。 设置收费账户，这里主要给IUniswapV2Pair使用。 function _mintFee(uint112 _reserve0, uint112 _reserve1) private returns (bool feeOn) { // 查看工厂是否收费 address feeTo = IUniswapV2Factory(factory).feeTo(); // 如果设置了地址，则进行收费 feeOn = feeTo != address(0); uint _kLast = kLast; // gas savings if (feeOn) { if (_kLast != 0) { uint rootK = Math.sqrt(uint(_reserve0).mul(_reserve1)); uint rootKLast = Math.sqrt(_kLast); if (rootK &gt; rootKLast) { uint numerator = totalSupply.mul(rootK.sub(rootKLast)); uint denominator = rootK.mul(5).add(rootKLast); uint liquidity = numerator / denominator; if (liquidity &gt; 0) _mint(feeTo, liquidity); } } } else if (_kLast != 0) { kLast = 0; } }","head":[["meta",{"property":"og:url","content":"https://renfakai.com/web3/solitify/IUniswapV2Factory.html"}],["meta",{"property":"og:site_name","content":"天道酬勤"}],["meta",{"property":"og:title","content":"IUniswapV2Factory"}],["meta",{"property":"og:description","content":"IUniswapV2Factory 工厂设计模式中开发中最常用的设计模式方一。 工厂方法按照模版创建。 设置收费账户，这里主要给IUniswapV2Pair使用。 function _mintFee(uint112 _reserve0, uint112 _reserve1) private returns (bool feeOn) { // 查看工厂是否收费 address feeTo = IUniswapV2Factory(factory).feeTo(); // 如果设置了地址，则进行收费 feeOn = feeTo != address(0); uint _kLast = kLast; // gas savings if (feeOn) { if (_kLast != 0) { uint rootK = Math.sqrt(uint(_reserve0).mul(_reserve1)); uint rootKLast = Math.sqrt(_kLast); if (rootK &gt; rootKLast) { uint numerator = totalSupply.mul(rootK.sub(rootKLast)); uint denominator = rootK.mul(5).add(rootKLast); uint liquidity = numerator / denominator; if (liquidity &gt; 0) _mint(feeTo, liquidity); } } } else if (_kLast != 0) { kLast = 0; } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-27T12:59:08.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-27T12:59:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"IUniswapV2Factory\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-27T12:59:08.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"接口协议","slug":"接口协议","link":"#接口协议","children":[]},{"level":2,"title":"代码实现","slug":"代码实现","link":"#代码实现","children":[]},{"level":2,"title":"核心","slug":"核心","link":"#核心","children":[]},{"level":2,"title":"成长","slug":"成长","link":"#成长","children":[]}],"git":{"createdTime":1693141148000,"updatedTime":1693141148000,"contributors":[{"name":"renfakai","email":"rfk1118@gmail.com","commits":1}]},"readingTime":{"minutes":3.03,"words":908},"filePathRelative":"web3/solitify/IUniswapV2Factory.md","localizedDate":"2023年8月27日","excerpt":"<h1> IUniswapV2Factory</h1>\\n<p>工厂设计模式中开发中最常用的设计模式方一。</p>\\n<ol>\\n<li>工厂方法按照模版创建。</li>\\n<li>设置收费账户，这里主要给<code>IUniswapV2Pair</code>使用。</li>\\n</ol>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">function</span> <span class=\\"token function\\">_mintFee</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">uint112 _reserve0<span class=\\"token punctuation\\">,</span> uint112 _reserve1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">private</span> <span class=\\"token function\\">returns</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">bool feeOn</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 查看工厂是否收费</span>\\n    address feeTo <span class=\\"token operator\\">=</span> <span class=\\"token function\\">IUniswapV2Factory</span><span class=\\"token punctuation\\">(</span>factory<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">feeTo</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">// 如果设置了地址，则进行收费</span>\\n    feeOn <span class=\\"token operator\\">=</span> feeTo <span class=\\"token operator\\">!=</span> <span class=\\"token function\\">address</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    uint _kLast <span class=\\"token operator\\">=</span> kLast<span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// gas savings</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>feeOn<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>_kLast <span class=\\"token operator\\">!=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            uint rootK <span class=\\"token operator\\">=</span> Math<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">sqrt</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">uint</span><span class=\\"token punctuation\\">(</span>_reserve0<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mul</span><span class=\\"token punctuation\\">(</span>_reserve1<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            uint rootKLast <span class=\\"token operator\\">=</span> Math<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">sqrt</span><span class=\\"token punctuation\\">(</span>_kLast<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>rootK <span class=\\"token operator\\">&gt;</span> rootKLast<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                uint numerator <span class=\\"token operator\\">=</span> totalSupply<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mul</span><span class=\\"token punctuation\\">(</span>rootK<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">sub</span><span class=\\"token punctuation\\">(</span>rootKLast<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                uint denominator <span class=\\"token operator\\">=</span> rootK<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mul</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">5</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">add</span><span class=\\"token punctuation\\">(</span>rootKLast<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                uint liquidity <span class=\\"token operator\\">=</span> numerator <span class=\\"token operator\\">/</span> denominator<span class=\\"token punctuation\\">;</span>\\n                <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>liquidity <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token function\\">_mint</span><span class=\\"token punctuation\\">(</span>feeTo<span class=\\"token punctuation\\">,</span> liquidity<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>_kLast <span class=\\"token operator\\">!=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        kLast <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{},"autoDesc":true}');export{n as data};
