import{_ as l,V as i,W as e,a0 as t}from"./framework-1bd9c91b.js";const a={},n=t('<h1 id="multiple" tabindex="-1"><a class="header-anchor" href="#multiple" aria-hidden="true">#</a> Multiple</h1><ul><li>开启1个端口 <ul><li>1个线程处理请求，n个线程处理数据</li><li>1个线程处理请求和处理数据，n个线程处理数据</li></ul></li><li>开启多个端口 <ul><li>1个线程开启多个端口，处理请求，n个线程处理数据</li><li>1个线程开启一个端口和处理数据，n个线程处理数据</li><li>1个线程开启多个端口，处理请求，1个线程处理数据</li><li>1个线程开启一个端口和处理数据，1个线程处理数据</li></ul></li></ul><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><ul><li>处理请求一般为CPU密集型，处理数据一般为CPU密集，IO密集型，混合密集型，多线程版本可以有很多种组合，请根据业务酌情选择</li><li>需要考虑连接在线程之间传递安全、设计成本、维护成本、效率等问题</li><li>常见使用方式为使用1个线程(Boss线程组，1个线程)处理请求，n个线程(Work线程组，1~n个线程)处理数据，详情见Netty，<code>Boss Work NioEventGroup</code></li></ul>',4),o=[n];function r(c,s){return i(),e("div",null,o)}const d=l(a,[["render",r],["__file","multiple.html.vue"]]);export{d as default};
